<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:UnitySC.Shared.ResultUI.Common.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
	xmlns:view="clr-namespace:UnitySC.Shared.ResultUI.Common.View"
	xmlns:viewModel="clr-namespace:UnitySC.Shared.ResultUI.Common.ViewModel"
	mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<!--  Styles  -->
		<ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStyles.xaml" />
		<!--  New Styles  -->
		<ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!--
		This control is to be used in a ResultWaferVM type context.
		It allows the standardization of headers of all types derived from ResultWaferVM.
	-->

	<Style TargetType="{x:Type controls:WaferResultHeader}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:WaferResultHeader}">
					<Border
						Margin="0,0,0,3"
						d:DataContext="{d:DesignInstance viewModel:ResultWaferVM}"
						Style="{StaticResource HeaderBorder}">
						<DockPanel>

							<ContentPresenter
								Margin="5,0"
								Content="{TemplateBinding Content}"
								DockPanel.Dock="Left" />

							<StackPanel
								VerticalAlignment="Center"
								DockPanel.Dock="Right"
								Orientation="Horizontal">

								<TextBlock
									Margin="2,2,10,2"
									VerticalAlignment="Center">
									<Run
										FontWeight="Bold"
										Text="{Binding SelectedResultFullName, Mode=OneWay}" />
									<Run
										FontWeight="Bold"
										Text="|" />
									<Run
										FontWeight="Bold"
										Text="{Binding SelectedWaferDetaillName, Mode=OneWay}" />
									<Run
										FontSize="10"
										FontStyle="Italic"
										Text="{Binding JobRunIterName, Mode=OneWay}" />
								</TextBlock>

								<sharedControls:ImageButton
									Name="ExportImgBtn"
									Width="30"
									Height="30"
									Margin="4,4"
									Command="{Binding OpenExportPopupCommand}"
									CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
									ImageGeometry="{StaticResource Export2Geometry}"
									ImageGeometryBrush="{StaticResource IconsColor}"
									ToolTip="Export Data" />
								<Popup
									AllowsTransparency="True"
									HorizontalOffset="{Binding ElementName=ExportImgBtn, Path=ActualWidth}"
									IsOpen="{Binding ExportResultVM.IsStayPopup, Mode=TwoWay}"
									Placement="Left"
									PlacementTarget="{Binding ElementName=ExportImgBtn}"
									StaysOpen="False"
									VerticalOffset="{Binding ElementName=ExportImgBtn, Path=ActualHeight}">
									<view:ExportResultView
										Margin="10"
										DataContext="{Binding ExportResultVM}" />
								</Popup>
							</StackPanel>

							<StackPanel
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Orientation="Horizontal">

								<TextBlock
									Margin="0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									FontSize="20"
									FontWeight="Bold"
									Foreground="{StaticResource IconsColor}"
									Text="{Binding FormatName}" />

								<TextBlock
									Margin="12,2,2,0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									FontSize="12"
									FontStyle="Italic"
									Foreground="{StaticResource IconsColor}"
									Text="{Binding MeasureLabelName, StringFormat=({0})}"
									Visibility="{Binding MeasureLabelName, Converter={StaticResource NullToVisibilityConverter}}" />
							</StackPanel>


						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>