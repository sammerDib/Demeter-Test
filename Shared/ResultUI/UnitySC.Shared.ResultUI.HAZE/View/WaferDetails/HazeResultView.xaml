<UserControl
	x:Class="UnitySC.Shared.ResultUI.HAZE.View.WaferDetails.HazeResultView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:UnitySC.Shared.ResultUI.Common.Controls;assembly=UnitySC.Shared.ResultUI.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dataTemplateSelectors="clr-namespace:UnitySC.Shared.ResultUI.Common.DataTemplateSelectors;assembly=UnitySC.Shared.ResultUI.Common"
	xmlns:haze="clr-namespace:UnitySC.Shared.Format.HAZE;assembly=UnitySC.Shared.Format.HAZE"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:waferDetails="clr-namespace:UnitySC.Shared.ResultUI.HAZE.View.WaferDetails"
	xmlns:waferDetailsViewModel="clr-namespace:UnitySC.Shared.ResultUI.HAZE.ViewModel.WaferDetails"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	x:Name="HazeResult"
	d:DataContext="{d:DesignInstance waferDetailsViewModel:HazeResultVM}"
	d:DesignHeight="1080"
	d:DesignWidth="1920"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.ResultUI.HAZE;component/Resources.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<controls:WaferResultHeader>
			<StackPanel Orientation="Horizontal">
				<TextBlock
					Margin="5,0"
					VerticalAlignment="Center"
					Text="Haze maps:" />

				<ListBox
					ItemsSource="{Binding HazeMapsIndexSource}"
					SelectedItem="{Binding SelectedHazeMapIndex}"
					Style="{x:Null}">
					<ListBox.Template>
						<ControlTemplate TargetType="{x:Type ListBox}">
							<StackPanel
								IsItemsHost="True"
								Orientation="Horizontal" />
						</ControlTemplate>
					</ListBox.Template>
					<ListBox.ItemContainerStyle>
						<Style TargetType="{x:Type ListBoxItem}">
							<Setter Property="IsEnabled">
								<Setter.Value>
									<MultiBinding Converter="{StaticResource InvokeFuncMultiConverter}">
										<Binding
											Path="DataContext.HazeMapIndexIsEnabled"
											RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
										<Binding
											Path="Content"
											RelativeSource="{RelativeSource Self}" />
									</MultiBinding>
								</Setter.Value>
							</Setter>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListBoxItem}">
										<RadioButton
											Margin="0,0,10,0"
											VerticalAlignment="Center"
											Content="{TemplateBinding Content}"
											ContentTemplate="{TemplateBinding ContentTemplate}"
											ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											GroupName="HazeMaps"
											IsChecked="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" />
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.ItemContainerStyle>
					<ListBox.ItemTemplateSelector>
						<dataTemplateSelectors:EqualityDataTemplateSelector>

							<dataTemplateSelectors:EqualityDataTemplate
								DataType="{x:Type sys:Int32}"
								ValueToCompare="0">
								<TextBlock Text="Wide" />
							</dataTemplateSelectors:EqualityDataTemplate>

							<dataTemplateSelectors:EqualityDataTemplate
								DataType="{x:Type sys:Int32}"
								ValueToCompare="1">
								<TextBlock Text="Narrow" />
							</dataTemplateSelectors:EqualityDataTemplate>

							<dataTemplateSelectors:EqualityDataTemplate
								DataType="{x:Type sys:Int32}"
								ValueToCompare="2">
								<TextBlock Text="Total" />
							</dataTemplateSelectors:EqualityDataTemplate>

						</dataTemplateSelectors:EqualityDataTemplateSelector>
					</ListBox.ItemTemplateSelector>
				</ListBox>
			</StackPanel>
		</controls:WaferResultHeader>

		<DockPanel Grid.Row="1">

			<WrapPanel
				Margin="5,0,0,0"
				HorizontalAlignment="Right"
				DockPanel.Dock="Right"
				Orientation="Vertical">

				<GroupBox
					x:Name="PreviewGroupBox"
					Width="250"
					Margin="0,0,5,5"
					Header="View Settings">
					<StackPanel Orientation="Vertical">

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<TextBlock
								Grid.Row="0"
								Grid.Column="0"
								Margin="0,5,5,5"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Text="Max" />
							<sharedControls:DoubleUpDown
								x:Name="MaxDoubleUpDown"
								Grid.Row="0"
								Grid.Column="1"
								ImageGeometryDown="{StaticResource MinusGeometry}"
								ImageGeometryUp="{StaticResource PlusGeometry}"
								Maximum="{x:Static sys:Double.MaxValue}"
								Minimum="{Binding Value, ElementName=MinDoubleUpDown}"
								Step="0.1"
								Unit="ppm"
								Value="{Binding MaxValue, StringFormat={}{0:F5}}" />

							<sharedControls:ColorMapSelector
								Grid.Row="1"
								Grid.Column="0"
								Height="{Binding ElementName=ColorMapSettingsButtonContainer, Path=ActualHeight}"
								Margin="0,5"
								SelectedColorMap="{Binding ColorMap, Mode=TwoWay}" />

							<UniformGrid
								x:Name="ColorMapSettingsButtonContainer"
								Grid.Row="1"
								Grid.Column="1"
								VerticalAlignment="Center"
								Columns="1">
								<Button
									Margin="0,0,0,5"
									Command="{Binding DynamicCommand}"
									Content="Dynamic" />
								<Button
									Margin="0,0,0,0"
									Command="{Binding MedianCommand}"
									Content="Median Standard" />
								<Button
									Margin="0,5,0,0"
									Command="{Binding MeanStdCommand}"
									Content="Avg Standard" />
							</UniformGrid>

							<TextBlock
								Grid.Row="2"
								Grid.Column="0"
								Margin="0,5,5,5"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Text="Min" />
							<sharedControls:DoubleUpDown
								x:Name="MinDoubleUpDown"
								Grid.Row="2"
								Grid.Column="1"
								ImageGeometryDown="{StaticResource MinusGeometry}"
								ImageGeometryUp="{StaticResource PlusGeometry}"
								Maximum="{Binding Value, ElementName=MaxDoubleUpDown}"
								Minimum="{x:Static sys:Double.MinValue}"
								Step="0.1"
								Unit="ppm"
								Value="{Binding MinValue, StringFormat={}{0:F5}}" />
						</Grid>

					</StackPanel>
				</GroupBox>

				<GroupBox
					Width="{Binding ActualWidth, ElementName=PreviewGroupBox}"
					Margin="0,0,5,5"
					Header="Global Stats">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="5" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<TextBlock
							VerticalAlignment="Center"
							Text="Max" />
						<sharedControls:TextBoxUnit
							Grid.Row="0"
							Grid.Column="2"
							IsReadOnly="True"
							Text="{Binding MaxPpm, Mode=OneWay, StringFormat=N5}"
							Unit="ppm" />
						<TextBlock
							Grid.Row="1"
							Grid.Column="0"
							Margin="0,5,0,0"
							VerticalAlignment="Center"
							Text="Min" />
						<sharedControls:TextBoxUnit
							Grid.Row="1"
							Grid.Column="2"
							Margin="0,5,0,0"
							IsReadOnly="True"
							Text="{Binding MinPpm, Mode=OneWay, StringFormat=N5}"
							Unit="ppm" />
						<TextBlock
							Grid.Row="2"
							Grid.Column="0"
							Margin="0,5,0,0"
							VerticalAlignment="Center"
							Text="Avg" />
						<sharedControls:TextBoxUnit
							Grid.Row="2"
							Grid.Column="2"
							Margin="0,5,0,0"
							IsReadOnly="True"
							Text="{Binding MeanPpm, Mode=OneWay, StringFormat=N5}"
							Unit="ppm" />
						<TextBlock
							Grid.Row="3"
							Grid.Column="0"
							Margin="0,5,0,0"
							VerticalAlignment="Center"
							Text="Std Dev" />
						<sharedControls:TextBoxUnit
							Grid.Row="3"
							Grid.Column="2"
							Margin="0,5,0,0"
							IsReadOnly="True"
							Text="{Binding StdDevPpm, Mode=OneWay, StringFormat=N5}"
							Unit="ppm" />
						<TextBlock
							Grid.Row="4"
							Grid.Column="0"
							Margin="0,5,0,0"
							VerticalAlignment="Center"
							Text="Median" />
						<sharedControls:TextBoxUnit
							Grid.Row="4"
							Grid.Column="2"
							Margin="0,5,0,0"
							IsReadOnly="True"
							Text="{Binding MedianPpm, Mode=OneWay, StringFormat=N5}"
							Unit="ppm" />
					</Grid>
				</GroupBox>

				<GroupBox
					Width="{Binding ActualWidth, ElementName=PreviewGroupBox}"
					Margin="0,0,5,5"
					Header="Haze Ranges">
					<ListView ItemsSource="{Binding SelectedHazeMapRanges}">
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.View>
							<GridView>
								<GridViewColumn
									Width="115"
									Header="Range ppm">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type haze:HazeRange}">
											<TextBlock>
												<TextBlock.Text>
													<MultiBinding Converter="{StaticResource InvokeFuncMultiConverter}">
														<Binding
															Path="DataContext.HazeRangeToStringFunc"
															RelativeSource="{RelativeSource FindAncestor, AncestorType=ListView}" />
														<Binding Path="." />
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn
									Width="115"
									Header="Area %">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type haze:HazeRange}">
											<Grid HorizontalAlignment="Stretch">
												<ProgressBar
													Maximum="100"
													Minimum="0"
													Opacity="0.5">
													<ProgressBar.Value>
														<MultiBinding
															Converter="{StaticResource InvokeFuncMultiConverter}"
															Mode="OneWay">
															<Binding
																Path="DataContext.HazeRangeToAreaDoubleFunc"
																RelativeSource="{RelativeSource FindAncestor, AncestorType=ListView}" />
															<Binding Path="." />
														</MultiBinding>
													</ProgressBar.Value>
												</ProgressBar>
												<TextBlock>
													<TextBlock.Text>
														<MultiBinding Converter="{StaticResource InvokeFuncMultiConverter}">
															<Binding
																Path="DataContext.HazeRangeToAreaFunc"
																RelativeSource="{RelativeSource FindAncestor, AncestorType=ListView}" />
															<Binding Path="." />
														</MultiBinding>
													</TextBlock.Text>
												</TextBlock>
											</Grid>
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView>
						</ListView.View>
					</ListView>
				</GroupBox>

			</WrapPanel>

			<DockPanel>
				<Grid>
					<waferDetails:HazeMapView
						DataContext="{Binding HazeMapVm}"
						ProfileDrawn="HazeMapView_OnProfileDrawn" />
					<xctk:BusyIndicator
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						d:IsHidden="true"
						BusyContent="Image processing... "
						IsBusy="{Binding IsBusy}" />
				</Grid>
			</DockPanel>


		</DockPanel>

		<Expander
			x:Name="ChartExpander"
			Grid.Row="2"
			Grid.Column="0"
			Margin="0,5,0,5"
			DockPanel.Dock="Bottom"
			ExpandDirection="Up"
			Header="Charts">
			<controls:AdvancedTabControl
				x:Name="ChartTabControl"
				Height="380"
				Padding="0"
				DockPanel.Dock="Top"
				TabStripPlacement="Top">
				<controls:AdvancedTabItem
					x:Name="ProfileTab"
					Header="Profile">
					<controls:AdvancedTabItem.Content>
						<waferDetails:ProfileView />
					</controls:AdvancedTabItem.Content>
				</controls:AdvancedTabItem>
				<controls:AdvancedTabItem
					Content="{Binding HazeHistogramChart.Chart}"
					Header="Histogram" />
			</controls:AdvancedTabControl>
		</Expander>

	</Grid>
</UserControl>
