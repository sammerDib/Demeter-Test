<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <GVL Name="HardwareGlobalVariables" Id="{a48c5b64-3e6f-4d7c-929a-6c7706465206}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
VAR_GLOBAL

	// AttenuationFilter	
	RxBufferAttenuation : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferAttenuation : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)	
	
	// PolarisationFilter	
	RxBufferPolarisation : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferPolarisation : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)	
	
	// SliderAttenuationFilter	
	RxBufferSliderAttenuation : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferSliderAttenuation : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)	
	
	// RotatingSwitch	
	RxBufferRotatingSwitch : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferRotatingSwitch : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)	
	
	// SMD12Laser	
	RxBufferLaser : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferLaser : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	// EOLFiberSwitch	
	RxBufferFiberSwitch : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferFiberSwitch : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	// PM101OpticalPowermeter	
	RxBufferOpticalPowermeterHs : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferOpticalPowermeterHs : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	RxBufferOpticalPowermeterHt : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferOpticalPowermeterHt : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	// C13366Mppc	
	RxBufferMppcWide : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferMppcWide : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)

	RxBufferMppcNarrow : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferMppcNarrow : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)		
	
	// DM430GNScreen	
	RxBufferDM430GNScreenFS : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferDM430GNScreenFS : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	RxBufferDM430GNScreenBS : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferDM430GNScreenBS : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	// FilterWheel	
	RxBufferFilterWheel : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferFilterWheel : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)	
	
	// Light
	RxBufferLight : ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferLight : ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)
	
	CyclingCounterReachSetpoint : BOOL;
	
	PwmGenerator : PwmGenerator;
	
	LightState : TExecutionState;
	ChamberState : TExecutionState;
	ChuckState : TExecutionState;
	IonizerState : TExecutionState;
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>