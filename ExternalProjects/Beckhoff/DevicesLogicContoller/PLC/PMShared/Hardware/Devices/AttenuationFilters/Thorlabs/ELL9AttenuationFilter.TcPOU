<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="ELL9AttenuationFilter" Id="{a8c18932-d1b0-4eb8-abc3-73c14ee12237}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'OPC.UA.DA' := '1'}
FUNCTION_BLOCK ELL9AttenuationFilter EXTENDS AttenuationFilterBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	{attribute 'OPC.UA.DA' := '0'}
	_config : ELL9AttenuationFilterConfig;
	{attribute 'OPC.UA.DA' := '0'}
	_coeAccess : CoeAccess;
	{attribute 'OPC.UA.DA' := '0'}
	_initConfigSerialCom : BOOL;	
	{attribute 'OPC.UA.DA' := '0'}
	_serialCom  : SerialCom(Prefix :='', Suffix := Const.CR_LF);
	{attribute 'OPC.UA.DA' := '0'}
	_refSerialCom : REFERENCE TO SerialCom(Prefix :='', Suffix := Const.CR_LF) := _serialCom;	 
	{attribute 'OPC.UA.DA' := '0'}
	_isReceived : BOOL;
	
	{attribute 'OPC.UA.DA' := '0'}
	_deliverMessages : INT;
	
	StateMsg : STRING(255);
	StatusMsg : STRING(255);
	IsAliveMsg : STRING(255);
	PositionMsg : STRING(255);
	IdMsg : STRING(255);
	CustomMsg : STRING(255);
	
	{attribute 'OPC.UA.DA' := '0'}
	ForceStatusMsg : STRING(255) := '00';
	
	{region 'Commands'}	
	
	{attribute 'OPC.UA.DA' := '0'}
	_homePosition 		: BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	_moveAbsPosition    : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	_jogBackwardPosition : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	_jogForwardPosition  : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	_customCmd : BOOL;
	{attribute 'OPC.UA.DA' := '0'}			  		   
	_raiseProperties : BOOL;			 
		 
	{endregion}
	
	{attribute 'OPC.UA.DA' := '0'}
	_initDevice : BOOL;	
	 
	{attribute 'OPC.UA.DA' := '0'}
	_pos : LREAL;
	{attribute 'OPC.UA.DA' := '0'}
	_cmd : STRING;	
	{attribute 'OPC.UA.DA' := '0'}
	_itemScheduler : INT;			
	{attribute 'OPC.UA.DA' := '0'}
	_itemRaisedProperties : INT;	
	{attribute 'OPC.UA.DA' := '0'}
	_itemMove : INT;	
	{attribute 'OPC.UA.DA' := '0'}
	_pulseGenerator : TON;
	{attribute 'OPC.UA.DA' := '0'}
	_pulseStatusGenerator : TON;
	{attribute 'OPC.UA.DA' := '0'}
	_pulseMoveGenerator : TON;	
	{attribute 'OPC.UA.DA' := '0'}
	_pulseIsAliveGenerator : TON;	
			
	{attribute 'OPC.UA.DA' := '0'}
	deviceReplyMessage : STRING;
	{attribute 'OPC.UA.DA' := '0'}
	deviceReplyPosition : STRING := '0PO';
	{attribute 'OPC.UA.DA' := '0'}
	deviceReplyStatus : STRING := '0GS';
	{attribute 'OPC.UA.DA' := '0'}
	tmpMessage : STRING;
	{attribute 'OPC.UA.DA' := '0'}
	message : STRING;
	{attribute 'OPC.UA.DA' := '0'}
	_length : INT;		 
	{attribute 'OPC.UA.DA' := '0'}
	_findSuffix : INT;
			
	{attribute 'OPC.UA.DA' := '0'}
	_calibrateStartAngle : LREAL;
	{attribute 'OPC.UA.DA' := '0'}
	_calibrateEndAngle : LREAL;
	{attribute 'OPC.UA.DA' := '0'}
	_angleSteps : LREAL;
	{attribute 'OPC.UA.DA' := '0'}
	_numberAverages : UINT;
	{attribute 'OPC.UA.DA' := '0'}
	_itemCalibrateScheduler : INT;	
	{attribute 'OPC.UA.DA' := '0'}
	_itemPos : UINT;
	{attribute 'OPC.UA.DA' := '0'}
	_pulseCalibration : TON;
		 
	{attribute 'OPC.UA.DA' := '0'}
	PowerMsg : STRING;
		 
	{attribute 'OPC.UA.DA' := '0'}
	_isOpen : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	_isWriteClose : BOOL;
	{attribute 'OPC.UA.DA' := '0'}
	ValuesCalibrate : ARRAY [0..1000] OF LREAL;
	{attribute 'OPC.UA.DA' := '0'}
	_counter : UINT;
	{attribute 'OPC.UA.DA' := '0'}
	PowerSum : LREAL;
	{attribute 'OPC.UA.DA' := '0'}
	PowerAverage : LREAL;
		 
	{endregion}
	
	{attribute 'OPC.UA.DA' := '0'}
	_lastSetPositionToPulses : DWORD;
	
	{attribute 'OPC.UA.DA' := '0'}
	posToMM : STRING;
	{attribute 'OPC.UA.DA' := '0'}
	pos : UINT; 
	
	{attribute 'OPC.UA.DA' := '0'}
	codeValue : INT;
	{attribute 'OPC.UA.DA' := '0'}
	_delimeter : STRING := ';';
	{attribute 'OPC.UA.DA' := '0'}
	_firstConcat : STRING;

	{attribute 'OPC.UA.DA' := '0'}
	_lifeTimeCount : UINT;
	{attribute 'OPC.UA.DA' := '0'}
	_notifyIsAlive : BOOL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF NOT InitConfigSerialCom THEN
	ConfigureSerialCom();
ELSIF THIS^.Status = TExecutionState.Ready THEN				
	IF _refSerialCom.ErrorReceiveId = COMERROR_NOERROR THEN
		_refSerialCom(TxBuffer:= HardwareGlobalVariables.TxBufferAttenuation, 
		 	      	  RxBuffer:= HardwareGlobalVariables.RxBufferAttenuation);
	END_IF	
				  
	// Init device
	InitDevice(); 				  
				  
	// Check if it's still alive
	IF _notifyIsAlive THEN
		IsAliveMsg := TO_STRING(_lifeTimeCount);
		_notifyIsAlive := FALSE;			
	END_IF
	
	IF _deliverMessages = EFeedbackMsgAttenuationELL9.StatusMsg THEN						
		IF StatusMsg <> ForceStatusMsg THEN
			StatusMsg := ForceStatusMsg;
		END_IF
	END_IF
	
	// Deliver messages
	IF _refSerialCom.IsReceived THEN		
		
		deviceReplyMessage := LEFT(_refSerialCom.LastReceivedString, 3);
		IF deviceReplyMessage = deviceReplyPosition THEN
			_deliverMessages := EFeedbackMsgAttenuationELL9.PositionMsg;
		ELSIF deviceReplyMessage = deviceReplyStatus THEN
			_deliverMessages := EFeedbackMsgAttenuationELL9.StatusMsg;		
		END_IF 
		
		CASE _deliverMessages OF	
			EFeedbackMsgAttenuationELL9.StatusMsg :				
				tmpMessage := DELETE(_refSerialCom.LastReceivedString, 3, 1);
				_length := LEN(tmpMessage);
				_findSuffix := FIND(tmpMessage, Const.CR_LF);
				message := DELETE(tmpMessage, 4, _findSuffix);
				
				IF StatusMsg <> message THEN
					StatusMsg := message;
				END_IF
				
			EFeedbackMsgAttenuationELL9.PositionMsg :				
				tmpMessage := DELETE(_refSerialCom.LastReceivedString, 3, 1);
				_length := LEN(tmpMessage);
				_findSuffix := FIND(tmpMessage, Const.CR_LF);
				message := DELETE(tmpMessage, 4, _findSuffix);
				
				posToMM := DWORD_TO_STRING(STRING_TO_DWORD(CONCAT('16#', message)));
				pos := STRING_TO_UINT(posToMM) / (Const.ELL9_TRAVEL / (Const.ELL9_NUMBER_POS-1));
				
				PositionMsg := UINT_TO_STRING(pos);								
				_deliverMessages := 0;
				
				_logger.Information(_message.Reset().
									Append(_config.Name).
									Append(' - PositionMsg: ').Append(PositionMsg).ToString());
																
			EFeedbackMsgAttenuationELL9.IdMsg :
				IdMsg := _refSerialCom.LastReceivedString;
				_logger.Information(_message.Reset().
									Append(_config.Name).
									Append(' - IdMsg: ').Append(IdMsg).ToString());
			EFeedbackMsgAttenuationELL9.CustomMsg :
				CustomMsg := _refSerialCom.LastReceivedString;
				_logger.Information(_message.Reset().
									Append(_config.Name).
									Append(' - CustomMsg: ').Append(CustomMsg).ToString());	
		END_CASE
	ELSE
		CASE _deliverMessages OF			
			EFeedbackMsgAttenuationELL9.StateMsg :				
				StateMsg := ANY_TO_STRING(State);				
		END_CASE
	END_IF										   	
	
	HomePosition(_homePosition);	
	MoveAbsPosition(_moveAbsPosition, _pos);
	JogBackwardPosition(_jogBackwardPosition);				
	JogForwardPosition(_jogForwardPosition);
	CustomCommand(_customCmd, _cmd);	
	RaisePropertiesChanged(_raiseProperties);
	
	IF (NOT _homePosition AND NOT _moveAbsPosition AND NOT _jogBackwardPosition AND NOT _jogForwardPosition 
		AND NOT _customCmd AND NOT _raiseProperties AND _deliverMessages <> EFeedbackMsgAttenuationELL9.PositionMsg) THEN
		MessageScheduler();
	END_IF
END_IF

]]></ST>
    </Implementation>
    <Folder Name="Commands" Id="{f4edb106-83b2-48f4-a6ee-fb48bf90f61f}" />
    <Method Name="ConfigureSerialCom" Id="{f3d28441-5f49-4383-8478-af863a3a7bc6}">
      <Declaration><![CDATA[METHOD ConfigureSerialCom
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _coeAccess.CoeOperation.Ready THEN
	_logger.Information(_message.Reset().Append('Start configuration com serial').ToString());
END_IF;	

_coeAccess.CoeOperation.Start();
_coeAccess(SerialCommunication := _config.SerialCommunication);
	
IF _coeAccess.CoeOperation.Done THEN
	_coeAccess.SetDone();	
 
	_Logger.Information(_message.Reset().
							Append('{').Append(TO_STRING(THIS^.Family)).Append('} : ').
							Append(' - Status : ').Append(TO_STRING(_coeAccess.Status)).ToString());	
	InitConfigSerialCom := TRUE;
END_IF
 
IF _coeAccess.CoeOperation.Error THEN	
	_coeAccess.SetError(0);
	
	_Logger.Error(_message.Reset().
							Append('{').Append(TO_STRING(THIS^.Family)).Append('} : ').
							Append(' - Status : ').Append(TO_STRING(_coeAccess.Status)).ToString());
	InitConfigSerialCom := TRUE;
END_IF

THIS^.Status := _coeAccess.Status;
State := _coeAccess.Status;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="CustomCommand" Id="{4c214f5b-a460-435b-8df9-37bc9c4fba69}" FolderPath="Commands\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD CustomCommand
VAR_INPUT
	Execute : BOOL;
	Cmd : STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute THEN
	_logger.Information(_message.Reset().
								Append(_config.Name).
								Append(' - Custom : ').
								Append(Cmd).ToString());
	_deliverMessages := EFeedbackMsgAttenuationELL9.CustomMsg;									
	_serialCom.Send(Cmd);
	
	_customCmd := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2bc8c07e-dc34-4c25-b05d-c5d2244227c7}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Config : ELL9AttenuationFilterConfig;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Config.IsEnabled THEN
	_config := Config;
	
	SUPER^._attenuationFilterConfig.Name := Config.Name;
	SUPER^._attenuationFilterConfig.DeviceID := Config.DeviceID;
	SUPER^._attenuationFilterConfig.IsEnabled := Config.IsEnabled;
	SUPER^._attenuationFilterConfig.LogLevel := Config.LogLevel;
	
	SUPER^.Name := Config.Name;
	SUPER^.DeviceID := Config.DeviceID;	
	THIS^.Family := DeviceFamily.AttenuationFilter;
	
	_Logger.Information(_message.Reset().Append('Init ').
							Append('{').Append(TO_STRING(THIS^.Family)).Append('} - ').
							Append('{').Append(TO_STRING(Config.Name)).Append('}').ToString());																													
END_IF		]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetIdentifier" Id="{45301af0-7295-4b8a-a10c-141696efd5ac}" FolderPath="Commands\">
      <Declaration><![CDATA[(** Returns the model number and firmware version **)
METHOD GetIdentifier
VAR_INPUT
END_VAR
VAR
	cmd : STRING := '0i1';
END_VAR
	]]></Declaration>
      <Implementation>
        <ST><![CDATA[_deliverMessages := EFeedbackMsgAttenuationELL9.IdMsg;	
_serialCom.Send(cmd);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetPosition" Id="{398cca03-d185-4b53-b717-a30f034f3cc3}" FolderPath="Commands\">
      <Declaration><![CDATA[(** Position Query **)
METHOD PROTECTED GetPosition
VAR_INPUT
END_VAR
VAR
	cmd : STRING := '0gp';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_deliverMessages := EFeedbackMsgAttenuationELL9.PositionMsg;	
_serialCom.Send(cmd);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetStatus" Id="{64ed0b29-8e99-4a97-a07e-65295752fc24}" FolderPath="Commands\">
      <Declaration><![CDATA[(** Status Query **)
METHOD GetStatus : STRING
VAR_INPUT
END_VAR
VAR
	cmd : STRING := '0gs';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_deliverMessages := EFeedbackMsgAttenuationELL9.StatusMsg;	
_serialCom.Send(cmd);]]></ST>
      </Implementation>
    </Method>
    <Method Name="HomePosition" Id="{57d51496-6806-4d5a-bac3-30e9d32ccdc8}" FolderPath="Commands\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD HomePosition
VAR_INPUT
	Execute : BOOL;
END_VAR
VAR
	cmd : STRING := '0ho0';
	statusCodeBusy: STRING(255) := '9';
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute THEN
	StatusMsg := statusCodeBusy;	
	
	_logger.Information(_message.Reset().
								Append(_config.Name).
								Append(' - Home position : ').ToString());
	_serialCom.Send(cmd);
	
	_homePosition := FALSE;
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Property Name="InitConfigSerialCom" Id="{8f83d47d-364b-46e7-8c62-f778706f0915}">
      <Declaration><![CDATA[PROPERTY InitConfigSerialCom : BOOL]]></Declaration>
      <Get Name="Get" Id="{623b5fef-f987-4c52-8844-2d8336d0850a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[InitConfigSerialCom := _initConfigSerialCom;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{3967ac6e-1e50-46be-b804-a0790ad68212}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_initConfigSerialCom := InitConfigSerialCom;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="InitDevice" Id="{065c1896-239e-413f-90f3-9f3e835fee0a}" FolderPath="Commands\">
      <Declaration><![CDATA[METHOD InitDevice
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _initDevice THEN	
	_logger.Information(_message.Reset().
								Append(_config.Name).
								Append(' - Init device').ToString());	
	_initDevice := TRUE;	
	
	GetPosition();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsAlive" Id="{5e84c1d3-e8e8-4940-80c7-c1ffae434696}" FolderPath="Commands\">
      <Declaration><![CDATA[METHOD PROTECTED IsAlive
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_notifyIsAlive := TRUE;

IF _lifeTimeCount < 5 THEN
	_lifeTimeCount := _lifeTimeCount + 1;
ELSE
	_lifeTimeCount := 1;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="JogBackwardPosition" Id="{5822038d-9040-4515-835c-68651958d239}" FolderPath="Commands\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD PROTECTED JogBackwardPosition
VAR_INPUT
	Execute : BOOL;
END_VAR
VAR
	cmd : STRING := '0bw';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute THEN
	_logger.Information(_message.Reset().
								Append(_config.Name).
								Append(' - Jog backward position : ').ToString());
	_serialCom.Send(cmd);
	
	_jogBackwardPosition := FALSE;
END_IF	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="JogForwardPosition" Id="{fc7816c2-e92e-4c8c-8eb5-e3b57427435f}" FolderPath="Commands\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD PROTECTED JogForwardPosition
VAR_INPUT
	Execute : BOOL;
END_VAR
VAR
	cmd : STRING := '0fw';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute THEN
	_logger.Information(_message.Reset().
								Append(_config.Name).
								Append(' - Jog forward position : ').ToString());
	_serialCom.Send(cmd);
	
	_jogForwardPosition := FALSE;
END_IF	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MessageScheduler" Id="{a5ddacec-2a19-4af9-aabe-499305b9893e}" FolderPath="Commands\">
      <Declaration><![CDATA[METHOD MessageScheduler
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _pulseStatusGenerator.Q THEN
	_pulseStatusGenerator(IN := FALSE, PT := T#10MS);
	
	CASE _itemScheduler OF				
		0:	GetStatus();
			_itemScheduler := 0;
	END_CASE		
ELSE
	_pulseStatusGenerator(IN := TRUE, PT := T#100MS);		
END_IF


IF _pulseIsAliveGenerator.Q THEN
	_pulseIsAliveGenerator(IN := FALSE, PT := T#10MS);
		
	IsAlive();	
ELSE
	_pulseIsAliveGenerator(IN := TRUE, PT := T#1000MS);		
END_IF


]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveAbsPosition" Id="{96c2dd46-c6dc-48a6-b710-c6440a568493}" FolderPath="Commands\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD PROTECTED MoveAbsPosition 
VAR_INPUT
	Execute : BOOL;
	Position : LREAL;
END_VAR
VAR
	posToWord : DWORD;
	posInHexa : STRING;	

	positionInHex : STRING;
	cmd : STRING := '0ma';
	
	statusCodeBusy : STRING := '9'; // Cf API 
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute THEN

	_moveAbsPosition := TRUE;
	_pos := Position;	

	IF _pulseMoveGenerator.Q THEN
		_pulseStatusGenerator(IN := FALSE, PT := T#10MS);
	
		CASE _itemMove OF
			0:	IF Position >= 0 AND Position < Const.ELL9_NUMBER_POS THEN
					ForceStatusMsg := statusCodeBusy;
			
					_itemMove := 1;
				ELSE
					_itemMove := 10;
				END_IF
				
			1:	_logger.Information(_message.Reset().
											Append(_config.Name).
											Append(' - Move absolute position : ').Append(TO_STRING(_pos)).ToString());
					
				posToWord := LREAL_TO_DWORD(Position * (Const.ELL9_TRAVEL / (Const.ELL9_NUMBER_POS-1)));	
				posInHexa := DWORD_TO_HEXSTR(posToWord, 8, FALSE);
					
				_serialCom.Send(CONCAT(cmd, posInHexa));
				
				_itemMove := 2;
				
			2:  GetPosition();
				_itemMove := 10;	
								
			10:  _moveAbsPosition := FALSE;
				_itemMove := 0;
				ForceStatusMsg := '00';
			
		END_CASE			
	ELSE
		_pulseMoveGenerator(IN := TRUE, PT := T#100MS);	
	END_IF

END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="RaisePropertiesChanged" Id="{981ed649-dac7-4b46-a057-611318ebd15d}" FolderPath="Commands\">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
METHOD RaisePropertiesChanged
VAR_INPUT
	Execute : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute THEN
	IF THIS^.Status <> TExecutionState.Ready THEN	
		_raiseProperties := FALSE;
		RETURN;
	END_IF	

	_raiseProperties := TRUE;
	
	IF _pulseGenerator.Q THEN
		_pulseGenerator(IN := FALSE, PT := T#10MS);	

		CASE _itemRaisedProperties OF
			0:  StateMsg := ' ';
				PositionMsg := ' ';
				IdMsg := ' ';
				CustomMsg := ' ';
				
				_itemRaisedProperties := 10;
			
			10:  GetIdentifier();
				_itemRaisedProperties := 11;
				
			11: _deliverMessages := EFeedbackMsgAttenuationELL9.StateMsg;
				_itemRaisedProperties := 12;
				
			12:  GetPosition();
				_itemRaisedProperties := 13;
							
			13:  _logger.Information(_message.Reset().
								Append(_config.Name).
								Append(' - Attenuation RaisePropertiesChanged').ToString());
				_raiseProperties := FALSE;				
				_itemRaisedProperties := 0;
			
		END_CASE
	ELSE
		_pulseGenerator(IN := TRUE, PT := T#100MS);	
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="ELL9AttenuationFilter">
      <LineId Id="1621" Count="11" />
      <LineId Id="2666" Count="0" />
      <LineId Id="2674" Count="2" />
      <LineId Id="2669" Count="0" />
      <LineId Id="3109" Count="0" />
      <LineId Id="3111" Count="0" />
      <LineId Id="3121" Count="0" />
      <LineId Id="3125" Count="0" />
      <LineId Id="3110" Count="0" />
      <LineId Id="3126" Count="0" />
      <LineId Id="2665" Count="0" />
      <LineId Id="1633" Count="1" />
      <LineId Id="1949" Count="0" />
      <LineId Id="1934" Count="1" />
      <LineId Id="1944" Count="0" />
      <LineId Id="1946" Count="1" />
      <LineId Id="1945" Count="0" />
      <LineId Id="1948" Count="0" />
      <LineId Id="1635" Count="0" />
      <LineId Id="2647" Count="4" />
      <LineId Id="2816" Count="0" />
      <LineId Id="3134" Count="0" />
      <LineId Id="3130" Count="0" />
      <LineId Id="2663" Count="0" />
      <LineId Id="3135" Count="0" />
      <LineId Id="1636" Count="9" />
      <LineId Id="1950" Count="0" />
      <LineId Id="2348" Count="0" />
      <LineId Id="2350" Count="1" />
      <LineId Id="2349" Count="0" />
      <LineId Id="1951" Count="0" />
      <LineId Id="1659" Count="1" />
      <LineId Id="2482" Count="1" />
      <LineId Id="2481" Count="0" />
      <LineId Id="1661" Count="1" />
      <LineId Id="2485" Count="1" />
      <LineId Id="2484" Count="0" />
      <LineId Id="1663" Count="15" />
      <LineId Id="1807" Count="0" />
      <LineId Id="1680" Count="3" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.ConfigureSerialCom">
      <LineId Id="6" Count="27" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.CustomCommand">
      <LineId Id="12" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.FB_init">
      <LineId Id="8" Count="14" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.GetIdentifier">
      <LineId Id="5" Count="0" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.GetPosition">
      <LineId Id="5" Count="0" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.GetStatus">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.HomePosition">
      <LineId Id="34" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="35" Count="5" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.InitConfigSerialCom.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.InitConfigSerialCom.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.InitDevice">
      <LineId Id="6" Count="3" />
      <LineId Id="13" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.IsAlive">
      <LineId Id="14" Count="1" />
      <LineId Id="8" Count="4" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.JogBackwardPosition">
      <LineId Id="8" Count="7" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.JogForwardPosition">
      <LineId Id="12" Count="7" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.MessageScheduler">
      <LineId Id="6" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="39" Count="7" />
      <LineId Id="22" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.MoveAbsPosition">
      <LineId Id="15" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="368" Count="0" />
      <LineId Id="295" Count="0" />
      <LineId Id="294" Count="0" />
      <LineId Id="296" Count="1" />
      <LineId Id="301" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="308" Count="0" />
      <LineId Id="310" Count="1" />
      <LineId Id="309" Count="0" />
      <LineId Id="321" Count="0" />
      <LineId Id="313" Count="0" />
      <LineId Id="315" Count="5" />
      <LineId Id="305" Count="0" />
      <LineId Id="322" Count="0" />
      <LineId Id="328" Count="1" />
      <LineId Id="326" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="337" Count="0" />
      <LineId Id="334" Count="1" />
      <LineId Id="367" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="299" Count="1" />
      <LineId Id="298" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="119" Count="0" />
    </LineIds>
    <LineIds Name="ELL9AttenuationFilter.RaisePropertiesChanged">
      <LineId Id="27" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="65" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="28" Count="6" />
      <LineId Id="75" Count="0" />
      <LineId Id="35" Count="7" />
      <LineId Id="72" Count="2" />
      <LineId Id="43" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="46" Count="10" />
      <LineId Id="25" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>