<UserControl x:Class="UnitySC.PM.ANA.Client.Modules.Calibration.View.XYCalibrationSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:controls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:headers="clr-namespace:UnitySC.PM.ANA.Client.Controls.Headers;assembly=UnitySC.PM.ANA.Client.Controls"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
             xmlns:markupextensions="clr-namespace:UnitySC.PM.ANA.Client.Controls.MarkupExtensions;assembly=UnitySC.PM.ANA.Client.Controls"
             xmlns:sharedExtensions="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
             xmlns:local="clr-namespace:UnitySC.PM.ANA.Client.Modules.Calibration.View"
             xmlns:view ="clr-namespace:UnitySC.Shared.ResultUI.Common.View;assembly=UnitySC.Shared.ResultUI.Common"        
             xmlns:interfaceCalibration="clr-namespace:UnitySC.PM.ANA.Service.Interface.Calibration;assembly=UnitySC.PM.ANA.Service.Interface"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1000">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="DirectionEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}" >
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="interfaceCalibration:XYCalibDirection"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>

        

    </UserControl.Resources>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <StackPanel IsEnabled="{Binding InProgress, Converter={StaticResource InvertedBooleanConverter}}">
                    <headers:HeaderRight Content="CALIBRATION SETTINGS" />
                    <TextBlock Text="Place XY Calibration Wafer in tool" Margin="10,3"/>
                        <StackPanel Orientation="Horizontal" Margin="5,5,0,0">
                            <Label Style="{StaticResource TitleLevel2}">Wafer center shift</Label>
                        <Label Style="{StaticResource TextForm}" Margin="0,5,0,5">X</Label>
                        <controls:TextBoxUnit Width="80" LengthValue="{Binding InitShiftCenterX, StringFormat='{}{0:F3}'}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" sharedExtensions:TextBoxMaskExt.Mask="Decimal" sharedExtensions:TextBoxExt.OnEnterAndEscUpdate="True" />
                        <Label Style="{StaticResource TextForm}" Margin="15,5,0,5">Y</Label>
                        <controls:TextBoxUnit Width="80" LengthValue="{Binding InitShiftCenterY, StringFormat='{}{0:F3}'}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" sharedExtensions:TextBoxMaskExt.Mask="Decimal" sharedExtensions:TextBoxExt.OnEnterAndEscUpdate="True" />
                        </StackPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5">
                        <WrapPanel Orientation="Horizontal">
                            <Label Style="{StaticResource TitleLevel2}" Margin="0,5,10,5">Calibration recipe</Label>
                            <ComboBox Margin="2" DisplayMemberPath="Name" MinWidth="180" SelectedValue="{Binding SelectedRecipe}" ItemsSource="{Binding Recipes}"/>
                        </WrapPanel>
                        <WrapPanel Orientation="Vertical" Margin="10,0,5,0" Visibility="{Binding SelectedRecipe, Converter={converters:NullToVisibilityConverter}}">
                            <StackPanel Orientation="Horizontal"  Margin="0">
                                <Label Style="{StaticResource TitleLevel2}">Wafer Diameter</Label>
                                <TextBlock MinWidth="50" Margin="5" >
                                    <Run Text="{Binding SelectedWaferDiameter.Value,StringFormat={}{0:F3}, Mode=OneWay}" />
                                    <Run>&#160;</Run>
                                    <Run Text="{Binding SelectedWaferDiameter.UnitSymbol, Mode=OneWay}"></Run>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal"  Margin="0">
                                <Label Style="{StaticResource TitleLevel2}">Picth X</Label>
                                <TextBlock MinWidth="50" Margin="5,5,20,5">
                                    <Run Text="{Binding SelectedPitchX.Value,StringFormat={}{0:F3}, Mode=OneWay}" />
                                    <Run>&#160;</Run>
                                    <Run Text="{Binding SelectedPitchX.UnitSymbol, Mode=OneWay}"></Run>
                                </TextBlock>
                                <Label Style="{StaticResource TitleLevel2}">Picth Y</Label>
                                <TextBlock MinWidth="50" Margin="5">
                                    <Run Text="{Binding SelectedPitchY.Value,StringFormat={}{0:F3}, Mode=OneWay}" />
                                    <Run>&#160;</Run>
                                    <Run Text="{Binding SelectedPitchY.UnitSymbol, Mode=OneWay}"></Run>
                                </TextBlock>
                            </StackPanel>
                        </WrapPanel>
                    </WrapPanel>
                    <StackPanel Orientation="Vertical"  Margin="0" >
                        <StackPanel Orientation="Horizontal"  Margin="5,0,0,0">
                            <Label Style="{StaticResource TitleLevel2}" Height="30" Width="100">Precision</Label>
                            <Slider Value="{Binding SelectedPrecision}" Width="100" VerticalAlignment="Bottom" Margin="5,0" TickFrequency="1" IsSnapToTickEnabled="True" Maximum="{Binding MaxPrecision}" Minimum="1" TickPlacement="BottomRight"></Slider>
                            <TextBlock Text="{Binding NbOfCalibrationPoints}" VerticalAlignment="Center" Margin="5"/>
                            <TextBlock Text="Calibration points" VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5,5,10,5">
                            <Label Style="{StaticResource TitleLevel2}" Width="100">Direction</Label>
                            <ComboBox x:Name="comboBox" Height="30" Width="60" SelectedValue="{Binding SelectedScanDirection }">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Image sharedExtensions:ImageExt.SourceGeometry="{Binding Converter={local:XYCalibDirectionToImageConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource DirectionEnumValues}" />
                                </ComboBox.ItemsSource>
                            </ComboBox>
                            <Label Style="{StaticResource TitleLevel2}" Width="100" Margin="30,0,0,0">Autofocus</Label>
                            <ToggleButton Style="{StaticResource ToggleAnimatedSwitchNew}" Margin="5,0" IsChecked="{Binding AutoFocusIsEnabled}" />
                           
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <StackPanel IsEnabled="{Binding InProgress, Converter={StaticResource InvertedBooleanConverter}}">
                    <headers:HeaderRight Content="TEST SETTINGS" />
                    <StackPanel Margin="5,0,0,0">
                    <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource TitleLevel2}" Width="100"  Height="30">Precision</Label>
                        <Slider Value="{Binding SelectedTestPrecision}" Width="100" VerticalAlignment="Bottom" Margin="5,0" TickFrequency="1" IsSnapToTickEnabled="True" Maximum="{Binding MaxTestPrecision}" Minimum="1" TickPlacement="BottomRight"></Slider>
                        <TextBlock Text="{Binding NbOfTestPoints}" VerticalAlignment="Center" Margin="5,5,0,5"/>
                        <TextBlock Text="Test points" VerticalAlignment="Center" Margin="5"/>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Style="{StaticResource TitleLevel2}" Width="100">Repetitions</Label>
                        <controls:IntegerUpDown Grid.Column="1" Margin="5" Width="100"  MaxLength="3" Step="1"  Maximum="20" Minimum="1" HorizontalContentAlignment="Center"  ImageGeometryDown="{StaticResource MinusGeometry}" ImageGeometryUp="{StaticResource PlusGeometry}" Value="{Binding NbOfTestRepetition}" />
                    </StackPanel>
                    <CheckBox Content="Automatically start the test after calibration" IsChecked="{Binding StartTestAfterCalibration}" Margin="5,5"/>

                   </StackPanel>
                </StackPanel>
                <Separator></Separator>
                <!-- Run -->
                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <Grid Visibility="{Binding CalibrationInProgress,Converter={StaticResource InvertedBooleanToVisibilityConverter }}">
                        <controls:ImageButton ImageGeometry="{StaticResource PlayGeometry}" ImageGeometryBrush="{StaticResource IconsColor}" Content="Start Calibration" Command="{Binding StartCalibration}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6"  Visibility="{Binding CalibrationIsDefined,Converter={StaticResource InvertedBooleanToVisibilityConverter }}"/>
                        <controls:ImageButton ImageGeometry="{StaticResource ReplayGeometry}" ImageGeometryBrush="{StaticResource IconsColor}" Content="Restart Calibration" Command="{Binding StartCalibration}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6" Visibility="{Binding CalibrationIsDefined,Converter={StaticResource BooleanToVisibilityConverter }}"/>
                        </Grid>
                        <controls:ImageButton ImageGeometry="{StaticResource StopGeometry}" ImageGeometryBrush="Red" Content="Stop Calibration" Command="{Binding StopCalibration}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6"  Visibility="{Binding CalibrationInProgress,Converter={StaticResource BooleanToVisibilityConverter }}"/>
                    </Grid>

                    <Grid>
                        <controls:ImageButton ImageGeometry="{StaticResource TargetGeometry}" ImageGeometryBrush="{StaticResource IconsColor}" Content="Start Test" Command="{Binding StartAllTestCalibration}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6" Visibility="{Binding CalibrationTestIsDefined,Converter={StaticResource BooleanToVisibilityConverter }}"/>
                        <controls:ImageButton ImageGeometry="{StaticResource StopGeometry}" ImageGeometryBrush="Red" Content="Stop Test" Command="{Binding StopAllTestCalibration}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6" Visibility="{Binding CalibrationTestInProgress,Converter={StaticResource BooleanToVisibilityConverter }}"/>
                    </Grid>
               </StackPanel>
                <StackPanel Orientation="Horizontal"  Visibility="{Binding CalibrationInProgress,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Image x:Name="InProgressImage" Height="25" Source="/UnitySC.Shared.UI;component/Controls/Status/ProgressGradient.png" Style="{StaticResource ImageSpinnerVisible}" Margin="2" />
                    <TextBlock Text="{Binding CalibrationProgress}" Margin="5" VerticalAlignment="Center"/>
                </StackPanel>
                <!-- Calibration result -->
                <Grid>
                    <headers:HeaderRight Content="CALIBRATION RESULT" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <controls:ImageButton ImageGeometry="{StaticResource FullscreenGeometry}" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding DisplayXYCalibrationResult}" ToolTip="FullScreen"/>
                        <controls:ImageButton Name="ExportImgBtn" Width="30" Height="30"
				                              Margin="4,4" Command="{Binding ExportResultCommand}" 
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
				                              ImageGeometry="{StaticResource Export2Geometry}"
				                              ImageGeometryBrush="{StaticResource IconsColor}"
				                              ToolTip="Export Data" />
                        <Popup AllowsTransparency="True"
				               HorizontalOffset="{Binding ElementName=ExportImgBtn, Path=ActualWidth}"
				               IsOpen="{Binding ExportResultVM.IsStayPopup, Mode=TwoWay}"
				               Placement="Left"
				               PlacementTarget="{Binding ElementName=ExportImgBtn}"
				               StaysOpen="False"
				               VerticalOffset="{Binding ElementName=ExportImgBtn, Path=ActualHeight}">
                            <view:ExportResultView
					            Margin="10"
					            DataContext="{Binding ExportResultVM}" />
                        </Popup>
                    </StackPanel>
                </Grid>
   
                <Grid Visibility="{Binding CalibrationIsDefined,Converter={StaticResource BooleanToHiddenVisibilityConverter }}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="250"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!-- Wafer -->
                    <Label  Style="{StaticResource TitleLevel2}" Grid.ColumnSpan="4">Wafer Alignement</Label>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" DataContext="{Binding CalibrationData}" Grid.ColumnSpan="4" Margin="2">
                        <TextBlock Margin="5"><Run Text="Shift X: "></Run><Run Text="{Binding ShiftX.Value,StringFormat={}{0:F3}, Mode=OneWay}" /><Run>&#160;</Run><Run Text="{Binding ShiftX.UnitSymbol, Mode=OneWay}"></Run></TextBlock>
                        <TextBlock Margin="5"><Run Text="Shift Y: "></Run><Run Text="{Binding ShiftY.Value,StringFormat={}{0:F3}, Mode=OneWay}" /><Run>&#160;</Run><Run Text="{Binding ShiftY.UnitSymbol, Mode=OneWay}"></Run></TextBlock>
                        <TextBlock Margin="5"><Run Text="Angle: "></Run><Run Text="{Binding ShiftAngle.Value,StringFormat={}{0:F3}, Mode=OneWay}" /><Run>&#160;</Run><Run Text="{Binding ShiftAngle.UnitSymbol, Mode=OneWay}"></Run></TextBlock>
                    </StackPanel>

                    <TextBlock Margin="5" Grid.Row="2" Grid.ColumnSpan="4"><Run Text="Nb of unmeasured points: "></Run><Run Text="{Binding CalibrationData.UncomputableCorrections.Count, Mode=OneWay}" /></TextBlock>

                    <Label Grid.Row="3"  Grid.ColumnSpan="4" Style="{StaticResource TitleLevel2}" HorizontalAlignment="Center">Stage Shift Corrections </Label>
                    <Grid Grid.Row="4" Grid.ColumnSpan="4" DataContext="{Binding XYVectorHeatMapVM}">
                        <ContentControl >
                            <ContentPresenter Content="{Binding Chart}" Width="Auto"/>
                        </ContentControl>
                        <xctk:BusyIndicator IsBusy="{Binding IsBusy}"/>
                    </Grid>
                </Grid>
      
                <!-- Calibration test result -->
                <Grid Visibility="{Binding CalibrationIsDefined,Converter={StaticResource BooleanToHiddenVisibilityConverter}}" x:Name="testResult">
                    <StackPanel>
                        <Grid>
                            <headers:HeaderRight Content="Calibration Test Results" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <controls:ImageButton ImageGeometry="{StaticResource FullscreenGeometry}" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding DisplayXYCalibrationTest}" ToolTip="FullScreen"/>
                                <controls:ImageButton x:Name="TestExportImgBtn" Width="30" Height="30"
				                              Margin="4,4" Command="{Binding ExportTestResultCommand}" 
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
				                              ImageGeometry="{StaticResource Export2Geometry}"
				                              ImageGeometryBrush="{StaticResource IconsColor}"
				                              ToolTip="Export Data" />
                                <Popup AllowsTransparency="True"
				               HorizontalOffset="{Binding ElementName=TestExportImgBtn, Path=ActualWidth}"
				               IsOpen="{Binding ExportTestResultVM.IsStayPopup, Mode=TwoWay}"
				               Placement="Left"
				               PlacementTarget="{Binding ElementName=TestExportImgBtn}"
				               StaysOpen="False"
				               VerticalOffset="{Binding ElementName=TestExportImgBtn, Path=ActualHeight}">
                                    <view:ExportResultView
					                        Margin="10"
					                        DataContext="{Binding ExportTestResultVM}" />
                                </Popup>
                            </StackPanel>
                        </Grid>
                        
                        <!-- List of calibration results -->
                        <ListView ItemsSource="{Binding TestResults}" SelectedItem="{Binding SelectedTestResult}" BorderThickness="0" Margin="0,0,0,10">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding State,Converter={StaticResource EnumToVisibilityConverter}, FallbackValue=Collapsed, ConverterParameter=InProgess}">
                                            <TextBlock Text="{Binding Id}" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0"/>
                                            <Image Height="25" x:Name="InProgressImage" Source="/UnitySC.Shared.UI;component/Controls/Status/ProgressGradient.png" Style="{StaticResource ImageSpinnerVisible}" />
                                            <TextBlock Text="{Binding Info}" Margin="5" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding State,Converter={StaticResource EnumToVisibilityConverter}, FallbackValue=Collapsed, ConverterParameter=Valid}">
                                            <TextBlock Text="{Binding Id}" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0"/>
                                            <Image sharedExtensions:ImageExt.SourceGeometry="{StaticResource CheckGeometry}" sharedExtensions:ImageExt.GeometryBrush="{StaticResource GreenBrush}" Style="{StaticResource Icon}"/>
                                            <TextBlock Margin="2,0" VerticalAlignment="Center" Text="Valid - Stage is in specification"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding State,Converter={StaticResource EnumToVisibilityConverter}, FallbackValue=Collapsed, ConverterParameter=OutOfSpec}">
                                            <TextBlock Text="{Binding Id}" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0"/>
                                            <Image sharedExtensions:ImageExt.SourceGeometry="{StaticResource ErrorGeometry}" sharedExtensions:ImageExt.GeometryBrush="Red" Style="{StaticResource Icon}"/>
                                            <TextBlock Margin="2,0" VerticalAlignment="Center" Text="Error - Stage is out of specification"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <headers:HeaderRight>
                            <TextBlock>
                                    <Run>Test Details :</Run>
                                    <Run Text="{Binding SelectedTestResult.Id}" />
                                    
                            </TextBlock>
                        </headers:HeaderRight>
                        <!-- Selected test details-->
                        <Grid Visibility="{Binding IsAvailable,Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" DataContext="{Binding SelectedTestResult}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="250"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>


                            <!-- Wafer -->
                            <Label  Style="{StaticResource TitleLevel2}" Grid.Row="0" Grid.ColumnSpan="4" VerticalAlignment="Bottom">Wafer Alignement</Label>
                            <StackPanel Orientation="Horizontal" Grid.Row="1" DataContext="{Binding TestCalibResult}" Grid.ColumnSpan="4" Margin="0">
                                <TextBlock Margin="5"><Run Text="Shift X: "></Run><Run Text="{Binding ShiftX.Value,StringFormat={}{0:F3}, Mode=OneWay}" /><Run>&#160;</Run><Run Text="{Binding ShiftX.UnitSymbol, Mode=OneWay}"></Run></TextBlock>
                                <TextBlock Margin="5"><Run Text="Shift Y: "></Run><Run Text="{Binding ShiftY.Value,StringFormat={}{0:F3}, Mode=OneWay}" /><Run>&#160;</Run><Run Text="{Binding ShiftY.UnitSymbol, Mode=OneWay}"></Run></TextBlock>
                                <TextBlock Margin="5"><Run Text="Angle: "></Run><Run Text="{Binding ShiftAngle.Value,StringFormat={}{0:F3}, Mode=OneWay}" /><Run>&#160;</Run><Run Text="{Binding ShiftAngle.UnitSymbol, Mode=OneWay}"></Run></TextBlock>
                            </StackPanel>

                            <!-- Not measure point -->
                            <TextBlock Margin="5" Grid.Row="2" Grid.ColumnSpan="4"><Run Text="Nb of unmeasured points: "></Run><Run Text="{Binding TestCalibResult.UncomputableCorrections.Count, Mode=OneWay}" /></TextBlock>

                            <!-- XY Vector -->
                            <Label Grid.Row="3" Grid.ColumnSpan="4" Style="{StaticResource TitleLevel2}" HorizontalAlignment="Center" Content="{Binding DisplayTestLabel}"></Label>
                            <Grid Grid.Row="4" Grid.ColumnSpan="4" DataContext="{Binding XYVectorHeatMapVMTest}">
                                <ContentControl >
                                    <ContentPresenter Content="{Binding Chart}" Width="Auto"/>
                                </ContentControl>
                                <xctk:BusyIndicator IsBusy="{Binding IsBusy}"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
