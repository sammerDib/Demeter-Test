<UserControl x:Class="UnitySC.PM.ANA.Client.Modules.TestHardware.TestHardwareView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             TextElement.FontSize="14"
            Background="{DynamicResource MaterialDesignPaper}"
            FontFamily="{DynamicResource MaterialDesignFont}"
            xmlns:view="clr-namespace:UnitySC.PM.ANA.Client.Modules.TestHardware.View"
            xmlns:vm="clr-namespace:UnitySC.PM.ANA.Client.Modules.TestHardware.ViewModel"
            xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
            xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
            xmlns:service="clr-namespace:UnitySC.Shared.Tools.Service;assembly=UnitySC.Shared.Tools"
            xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
            xmlns:iconPacks="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:converter="clr-namespace:UnitySC.PM.ANA.Client.Modules.TestHardware.View.Converter"
             xmlns:local="clr-namespace:UnitySC.PM.ANA.Client.Modules.TestHardware"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/UnitySC.PM.ANA.Client.Modules.TestHardware;component/ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />
            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="controls:ItemHelper.ActiveSelectionBackgroundBrush"
                        Value="Transparent" />
                <Setter Property="controls:ItemHelper.ActiveSelectionForegroundBrush"
                        Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="controls:ItemHelper.DisabledForegroundBrush"
                        Value="{DynamicResource MahApps.Brushes.GrayNormal}" />
                <Setter Property="controls:ItemHelper.DisabledSelectedBackgroundBrush"
                        Value="Transparent" />
                <Setter Property="controls:ItemHelper.DisabledSelectedForegroundBrush"
                        Value="{DynamicResource MahApps.Brushes.GrayNormal}" />
                <Setter Property="controls:ItemHelper.HoverBackgroundBrush"
                        Value="{DynamicResource MahApps.Brushes.Gray9}" />
                <Setter Property="controls:ItemHelper.HoverSelectedBackgroundBrush"
                        Value="{DynamicResource MahApps.Brushes.Gray9}" />
                <Setter Property="controls:ItemHelper.SelectedBackgroundBrush"
                        Value="Transparent" />
                <Setter Property="controls:ItemHelper.SelectedForegroundBrush"
                        Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}"
                                  RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                                   Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                                   Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                           Focusable="False"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter Property="Foreground"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator"
                                            Property="Opacity"
                                            Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Foreground"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type controls:HamburgerMenu}}"
                   TargetType="{x:Type controls:HamburgerMenu}">
                <Setter Property="ItemContainerStyle"
                        Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle"
                        Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground"
                        Value="{DynamicResource MahApps.Brushes.White}" />
                <Setter Property="PaneForeground"
                        Value="{DynamicResource MahApps.Brushes.Text}" />
                <Setter Property="ShowSelectionIndicator"
                        Value="True" />
            </Style>
            <DataTemplate x:Key="ErrorTemplate">
                <Grid Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type StackPanel}}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <materialDesign:PackIcon Kind="Error"
                                                 Margin="3,0,5,0"
                                                 Foreground="DarkRed"
                                                 Width="20"
                                                 Height="20"
                                                 Visibility="{Binding Level, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static service:MessageLevel.Error}}" />
                        <materialDesign:PackIcon Kind="Error"
                                                 Margin="3,0,5,0"
                                                 Foreground="Orange"
                                                 Width="20"
                                                 Height="20"
                                                 Visibility="{Binding Level, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static service:MessageLevel.Warning}}" />
                        <materialDesign:PackIcon Kind="Skull"
                                                 Margin="3,0,5,0"
                                                 Foreground="DarkRed"
                                                 Width="20"
                                                 Height="20"
                                                 Visibility="{Binding Level, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static service:MessageLevel.Fatal}}" />
                    </Grid>
                    <TextBlock Grid.Column="1"
                               Text="{Binding Date}"
                               VerticalAlignment="Bottom"></TextBlock>
                    <TextBlock Text="{Binding Source}"
                               Grid.Column="2"
                               FontWeight="Bold"
                               TextTrimming="CharacterEllipsis"
                               VerticalAlignment="Bottom"></TextBlock>
                    <TextBlock Text="{Binding UserContent}"
                               Grid.Column="3"
                               TextTrimming="CharacterEllipsis"
                               VerticalAlignment="Bottom"></TextBlock>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="MenuItemTemplate"
                          DataType="{x:Type controls:HamburgerMenuIconItem}">
                <Grid x:Name="RootGrid"
                      Height="55"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="55" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    Foreground="White" />
                    <TextBlock Grid.Column="2"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}"
                               Foreground="White" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:HamburgerMenu}}, Path=IsPaneOpen}"
                                 Value="False">
                        <Setter TargetName="RootGrid"
                                Property="ToolTip"
                                Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="MenuContentTemplate"
                          DataType="{x:Type controls:HamburgerMenuItem}">
                <Grid x:Name="TheContentGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"></RowDefinition>
                        <RowDefinition Height="3*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <GroupBox Header="ERRORS"
                              Margin="10,5,10,0">
                        <ItemsControl ItemsSource="{Binding DataContext.Messages, RelativeSource={RelativeSource  AncestorType={x:Type Window}}}"
                                      ItemTemplate="{StaticResource ErrorTemplate}"
                                      Margin="-7">
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Auto"
                                                  CanContentScroll="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                    </GroupBox>
                    <ContentControl x:Name="TheContent"
                                    Grid.Row="1"
                                    Content="{Binding Tag}"
                                    Focusable="False"
                                    Foreground="{DynamicResource BlackBrush}" />
                </Grid>
            </DataTemplate>
            <!--  these are the templates for the view models  -->
            <DataTemplate DataType="{x:Type vm:StageViewModel}">
                <view:StageView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ProbesViewModel}">
                <view:ProbesView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CamerasViewModel}">
                <view:CamerasView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:IOsViewModel}">
                <view:IOsView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ProbeLiseHFViewModel}">
                <view:ProbeLiseHfView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:OverviewChamberViewModel}">
                <view:OverviewChamberView DataContext="{Binding}" />
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{StaticResource PanelBackground}">
        <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                DisplayMode="CompactInline"
                                IsPaneOpen="False"
                                ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                ContentTemplate="{StaticResource MenuContentTemplate}"
                                SelectedIndex="0"
                                CompactPaneLength="55"
                                HamburgerWidth="55"
                                HamburgerHeight="55">
            <controls:HamburgerMenu.ItemsSource>
                <controls:HamburgerMenuItemCollection>
                    <controls:HamburgerMenuIconItem Label="Stage">
                        <controls:HamburgerMenuIconItem.Icon>
                            <materialDesign:PackIcon Kind="Axis"
                                                     Height="30"
                                                     Width="30" />
                        </controls:HamburgerMenuIconItem.Icon>
                        <controls:HamburgerMenuIconItem.Tag>
                            <vm:StageViewModel />
                        </controls:HamburgerMenuIconItem.Tag>
                    </controls:HamburgerMenuIconItem>
                    <controls:HamburgerMenuIconItem Label="Probes">
                        <controls:HamburgerMenuIconItem.Icon>
                            <materialDesign:PackIcon Kind="Microscope"
                                                     Height="30"
                                                     Width="30" />
                        </controls:HamburgerMenuIconItem.Icon>
                        <controls:HamburgerMenuIconItem.Tag>
                            <vm:ProbesViewModel />
                        </controls:HamburgerMenuIconItem.Tag>
                    </controls:HamburgerMenuIconItem>
                    <controls:HamburgerMenuIconItem Label="Cameras">
                        <controls:HamburgerMenuIconItem.Icon>
                            <materialDesign:PackIcon Kind="SecurityCamera"
                                                     Height="30"
                                                     Width="30" />
                        </controls:HamburgerMenuIconItem.Icon>
                        <controls:HamburgerMenuIconItem.Tag>
                            <vm:CamerasViewModel />
                        </controls:HamburgerMenuIconItem.Tag>
                    </controls:HamburgerMenuIconItem>
                    <controls:HamburgerMenuIconItem Label="Input/Output">
                        <controls:HamburgerMenuIconItem.Icon>
                            <materialDesign:PackIcon Kind="VideoInputComponent"
                                                     Height="30"
                                                     Width="30" />
                        </controls:HamburgerMenuIconItem.Icon>
                        <controls:HamburgerMenuIconItem.Tag>
                            <vm:IOsViewModel />
                        </controls:HamburgerMenuIconItem.Tag>
                    </controls:HamburgerMenuIconItem>

                    <controls:HamburgerMenuIconItem Label="Lise HF" IsVisible="{Binding RelativeSource={RelativeSource Self}, Path=Tag.IsLiseHFAvailable}">
                        <controls:HamburgerMenuIconItem.Icon>
                            <materialDesign:PackIcon Kind="LayersOutline"
                                                     Height="30"
                                                     Width="30" />
                        </controls:HamburgerMenuIconItem.Icon>
                        <controls:HamburgerMenuIconItem.Tag>
                            <vm:ProbeLiseHFViewModel />
                        </controls:HamburgerMenuIconItem.Tag>
                    </controls:HamburgerMenuIconItem>

                    <controls:HamburgerMenuIconItem Label="Overview">
                        <controls:HamburgerMenuIconItem.Icon>
                            <materialDesign:PackIcon Kind="DeveloperBoard"
                                 Height="30"
                                 Width="30" />
                        </controls:HamburgerMenuIconItem.Icon>
                        <controls:HamburgerMenuIconItem.Tag>
                            <vm:OverviewChamberViewModel />
                        </controls:HamburgerMenuIconItem.Tag>
                    </controls:HamburgerMenuIconItem>
                    
                </controls:HamburgerMenuItemCollection>
            </controls:HamburgerMenu.ItemsSource>
        </controls:HamburgerMenu>
        <!-- <Grid Background="LightGray"
              Visibility="{Binding InitialisationDone, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding MessageToDisplay}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"
                       FontFamily="Segoe UI"
                       FontSize="36"
                       Margin="20"></TextBlock>
            <TextBlock Text="{Binding ErrorMessageToDisplay}"
                       Grid.Row="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       FontFamily="Segoe UI"
                       FontSize="36"
                       Margin="20"
                       Foreground="Red"></TextBlock>
        </Grid>-->
    </Grid>
</UserControl>