<Window x:Class="UnitySC.PM.ANA.Client.CommonUI.View.RecipeEditionSteps.TSVResultDisplay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
        xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
        xmlns:extensions="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
        xmlns:controls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
        xmlns:tsvView="clr-namespace:UnitySC.Shared.ResultUI.Metro.View.WaferDetail.Tsv;assembly=UnitySC.Shared.ResultUI.Metro"
        xmlns:reciperunview="clr-namespace:UnitySC.PM.ANA.Client.CommonUI.View.RecipeEditionSteps.RecipeRun"
        xmlns:Helpers="clr-namespace:UnitySC.PM.ANA.Client.CommonUI.Helpers"
        xmlns:converters1="clr-namespace:UnitySC.Shared.ResultUI.Metro.Converters;assembly=UnitySC.Shared.ResultUI.Metro"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:recipeeditionsteps="clr-namespace:UnitySC.PM.ANA.Client.CommonUI.ViewModel.RecipeEditionSteps"
        Closing="Window_Closing"
        md:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=recipeeditionsteps:TSVResultDisplayVM}"
        d:DesignHeight="450" d:DesignWidth="600" WindowStyle="ToolWindow" Title="TSV Result" SizeToContent="Width" Height="600" MinWidth="600">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="169*"/>
                <ColumnDefinition Width="31*"/>
            </Grid.ColumnDefinitions>
            <Grid Margin="10,10,10,10" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <tsvView:TsvDetailMeasureInfoView x:Name="TsvDetailMeasureInfoView" Margin="10,10,10,5" DataContext="{Binding TSVDetailResult}"/>
                <Grid Grid.Row="1" Background="{StaticResource CameraBackground}">
                    <Image
		                HorizontalAlignment="Stretch"
		                VerticalAlignment="Stretch"
		                Source="{Binding ResultImage}"
		                Stretch="Uniform" />
                    <Border
                        Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        CornerRadius="3"
                        Visibility="{Binding ElementName=Button, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border.Background>
                            <SolidColorBrush Opacity="0.6" Color="White" />
                        </Border.Background>
                        <Image
                            Height="24" 
                            Margin="4"
                            extensions:ImageExt.GeometryBrush="{StaticResource ButtonForegroundBrush}"
                            extensions:ImageExt.SourceGeometry="{StaticResource Export2Geometry}"
                            IsHitTestVisible="False"
                            Stretch="Uniform" />
                    </Border>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="30"
                        Opacity="0.7"
                        Text="No image available"
                        TextAlignment="Center"
                        TextWrapping="Wrap"
                        Visibility="{Binding HasImage, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                    <Border
                        BorderThickness="1"		
                        Visibility="{Binding ElementName=Button, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource SelectionColor}" />
                        </Border.BorderBrush>
                    </Border>
                    <Button	
                        x:Name="Button"	
                        Width="NaN"
                        Height="NaN"	
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"		
                        Command="{Binding OpenImageViewerCommand}"	
                        Opacity="0" />
                </Grid>
                <Grid Grid.Row="2" Margin="0,10,0,0" MinWidth="570">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Margin="0,0,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton Style="{StaticResource ToggleAnimatedSwitchNew}" IsEnabled="{Binding IsStaticRepetaInProgress, Converter={converters:InvertedBooleanConverter}}" IsChecked="{Binding UseRepeta}" Margin="0,13,5,13" />
                        <TextBlock Grid.Column="1" Margin="0,10,10,10" VerticalAlignment="Center">Use Repeta</TextBlock>
                    </Grid>
                    <Button Grid.Column="1" HorizontalAlignment="Right" MinWidth="100" IsCancel="True" IsEnabled="{Binding IsStaticRepetaInProgress, Converter={converters:InvertedBooleanConverter}}" Style="{StaticResource HighlightedButton}">Close</Button>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Column="1" Visibility="{Binding UseRepeta, Converter={converters:BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,0,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Visibility="{Binding UseRepeta, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}" Width="350" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="5,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center">Number of repeats</TextBlock>
                    <controls:IntegerUpDown Grid.Column="1"
                                            IsEnabled="{Binding IsStaticRepetaInProgress, Converter={converters:InvertedBooleanConverter}}"
                                            Width="120"
                                            Margin="0,0,10,0"
                                            x:Name="integerUpDown"
                                            Maximum="10000"
                                            Minimum="2"
                                            ImageGeometryDown="{StaticResource MinusGeometry}"
                                            ImageGeometryUp="{StaticResource PlusGeometry}"
                                            HorizontalContentAlignment="Right"
                                            Value="{Binding NbRepeats}">
                    </controls:IntegerUpDown>
                    <controls:ImageButton Grid.Column="2"
                                          ImageGeometry="{StaticResource PlayGeometry}"
                                          ImageGeometryBrush="{StaticResource IconsColor}"
                                          HorizontalAlignment="Left"
                                          Margin="5"
                                          Command="{Binding StartStaticRepetaCommand}"
                                          Visibility="{Binding IsStaticRepetaInProgress, Converter={converters:InvertedBooleanToVisibilityConverter}}"
                                          Width="95">
                        Start
                    </controls:ImageButton>
                    <controls:ImageButton Grid.Column="2"
                                          ImageGeometry="{StaticResource StopGeometry}"
                                          ImageGeometryBrush="Red"
                                          HorizontalAlignment="Left"
                                          Margin="5"
                                          Command="{Binding StopStaticRepetaCommand}"
                                          Visibility="{Binding IsStaticRepetaInProgress, Converter={converters:BooleanToVisibilityConverter}}"
                                          Width="95">
                        Stop
                    </controls:ImageButton>
                </Grid>
            </Grid>
            <DataGrid Grid.Row="1" x:Name="MeasurePointResultsDataGrid" ItemsSource="{Binding MeasurePointsResults}"
                   AutoGenerateColumns="False"
                   SelectionMode="Single"
                   Margin="5,5"
                   MinWidth="865"
                   CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeRows="False" CanUserSortColumns="false"
                   GridLinesVisibility="Horizontal" 
                   Helpers:ScrolDataGridBehavior.Autoscroll="True" 
                   ScrollViewer.VerticalScrollBarVisibility="Auto"  
                   Helpers:DataGridBehavior.DisplayRowNumber="True">
                <DataGrid.RowBackground>
                    <SolidColorBrush Color="Transparent" />
                </DataGrid.RowBackground>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <!-- Update from comments. Remove the focus indication for the selected cell -->
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="State" IsReadOnly="True" Width="auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Margin="2">
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsInProgress, Converter={converters:InvertedBooleanToVisibilityConverter}}">
                                        <Viewbox Width="22">
                                            <sharedControls:ToleranceDisplayer
                    		    	        x:Name="ToleranceDisplayer"
			                                HorizontalAlignment="Center"
                                            Tolerance="{Binding Result.State, Converter={converters1:MeasureStateToToleranceDisplayerConverter}}"/>
                                        </Viewbox>
                                        <Image
                                         Width="20"
                                         Height="20"
                                         Margin="3,0"
                                         Visibility="{Binding Result.Message, Mode=OneWay, Converter={converters:EmptyStringToVisibilityConverter}}"
                                         ToolTip="{Binding Result.Message, Mode=OneWay}"
                                         extensions:ImageExt.GeometryBrush="{StaticResource HighLightBrush}"
                                         extensions:ImageExt.SourceGeometry="{StaticResource InformationGeometry}"
                                         Style="{StaticResource Icon}"
                                     />
                                    </StackPanel>
                                    <Image x:Name="InProgressImage" Height="22" Source="/UnitySC.Shared.UI;component/Controls/Status/ProgressGradient.png" Visibility="{Binding IsInProgress, Converter={converters:BooleanToVisibilityConverter}}" Style="{StaticResource ImageSpinnerVisible}" HorizontalAlignment="Left"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Repeat" Width="auto" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}/{1}">
                                            <Binding Path="RepeatIndex" />
                                            <Binding Path="NbRepeat" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Quality" Width="auto" IsReadOnly="True" Binding="{Binding Path=Result.QualityScore, StringFormat='{}{0:F2}', Converter={converters:ScaleToPercentConverter Round=False}}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Values" Width="auto" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <reciperunview:ResultValuesDisplay DataContext="{Binding}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="2" Visibility="{Binding ShowRepetaResults, Converter={converters:InvertedBooleanToVisibilityConverter}}" MinHeight="120">
                <!-- Empty Grid Row used to preserve space for stats before displaying them -->
            </Grid>
            <Grid Grid.Row="2" Visibility="{Binding ShowRepetaResults, Converter={converters:BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ComboBox VerticalAlignment="Top" Grid.Row="0" Grid.ColumnSpan="5"
                        ItemsSource="{Binding StaticRepetaAvailableStatTypes}"
                        SelectedItem="{Binding StaticRepetaStatTypeSelected}"
                        Margin="20,5,0,5"
                        Width="200"
                        HorizontalAlignment="Left" />
                <TextBlock Grid.Row="1" Grid.Column="0" Margin="20,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Avg (µm)" />
                <controls:TextBoxUnit IsReadOnly="True" Grid.Row="1" Grid.Column="1" Margin="0,0,0,5"
                                      Unit="{Binding StaticRepetaStatMean.UnitSymbol}"
                                      Text="{Binding StaticRepetaStatMean, StringFormat='{}{0:F3}'}" />
                <TextBlock Grid.Row="1" Grid.Column="2" Margin="20,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Std dev (µm)" />
                <controls:TextBoxUnit IsReadOnly="True" Grid.Row="1" Grid.Column="3" Margin="0,0,0,5"
                                      Unit="{Binding StaticRepetaStatStdDev.UnitSymbol}"
                                      Text="{Binding StaticRepetaStatStdDev, StringFormat='{}{0:F3}'}" />
                <controls:ImageButton Grid.Row="1" Grid.Column="4" Grid.RowSpan="2" Width="30" Height="30" Margin="0" HorizontalAlignment="Center" VerticalContentAlignment="Center" Command="{Binding ExportCsvCommand}" ImageGeometry="{StaticResource Export2Geometry}" ImageGeometryBrush="{StaticResource IconsColor}" ToolTip="Export CSV" />
                <TextBlock Grid.Row="2"	Grid.Column="0"	Margin="20,0,0,10" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Min (µm)" />
                <controls:TextBoxUnit IsReadOnly="True" Grid.Row="2" Grid.Column="1" Margin="0,0,0,15"
                                      Unit="{Binding StaticRepetaStatMin.UnitSymbol}"
                                      Text="{Binding StaticRepetaStatMin, StringFormat='{}{0:F3}'}" />
                <TextBlock Grid.Row="2" Grid.Column="2" Margin="20,0,0,10" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Max (µm)" />
                <controls:TextBoxUnit IsReadOnly="True" Grid.Row="2" Grid.Column="3" Margin="0,0,0,15"
                                      Unit="{Binding StaticRepetaStatMax.UnitSymbol}"
                                      Text="{Binding StaticRepetaStatMax, StringFormat='{}{0:F3}'}" />
            </Grid>
        </Grid>
    </Grid>
</Window>