<UserControl x:Class="UnitySC.PM.ANA.Client.CommonUI.View.RecipeEditionSteps.RecipeWaferMapStepsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:measures="clr-namespace:UnitySC.PM.ANA.Client.CommonUI.View.RecipeEditionSteps"
             xmlns:headers="clr-namespace:UnitySC.PM.ANA.Client.Controls.Headers;assembly=UnitySC.PM.ANA.Client.Controls"
             xmlns:controls="clr-namespace:UnitySC.PM.ANA.Client.Controls;assembly=UnitySC.PM.ANA.Client.Controls"
             xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
             xmlns:sharedExtensions="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
             xmlns:markupextensions="clr-namespace:UnitySC.PM.ANA.Client.Controls.MarkupExtensions;assembly=UnitySC.PM.ANA.Client.Controls"
             mc:Ignorable="d"
             d:DesignHeight="1200" d:DesignWidth="400">
    <!--[ViewModel=RecipeWaferMapVM.cs]-->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Unity Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStyles.xaml" />
                <!-- Unity Styles New -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
                <!-- Ana Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Controls/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/UnitySC.PM.ANA.Client.Controls;component/Themes/UnityStylesAna.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="click">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <headers:HeaderRight Content="WAFER MAP" />
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Vertical" IsEnabled="{Binding IsWaferMapInProgress, Converter={converters:InvertedBooleanConverter}}">
                    <StackPanel Margin="10,10,10,5" IsEnabled="{Binding AutoFocusSettings.IsEditing, Converter={converters:InvertedBooleanConverter}}">
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button Margin="0,0,5,0" Command="{Binding ImportWaferMap}">Import</Button>
                            <sharedControls:ImageButton Grid.Column="1"  ImageGeometryRight="{StaticResource RightArrowGeometry}" ImageGeometryRightBrush="{StaticResource ButtonForegroundBrush}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="5,0,0,0"  Command="{Binding SkipWaferMap}">Skip</sharedControls:ImageButton>
                        </Grid>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="140" />
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center">Edge Exclusion</TextBlock>
                            <sharedControls:TextBoxUnit Grid.Column="1" Unit="{Binding EdgeExclusion.UnitSymbol}" Text="{Binding EdgeExclusion.Value, StringFormat='{}{0:F3}'}" sharedExtensions:TextBoxMaskExt.Mask="PositiveDecimal" MaxLength="10" TextChanged="TextBoxUnit_TextChanged"   sharedExtensions:TextBoxExt.OnEnterAndEscUpdate="True"></sharedControls:TextBoxUnit>
                        </Grid>

                        <CheckBox IsChecked="{Binding IsDieSizeSet}">Set Die Size</CheckBox>
                        <Grid Grid.Row="1" Margin="20,10,0,10" Visibility="{Binding IsDieSizeSet, Converter={converters:BooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80" />
                                <ColumnDefinition Width="80" />
                                <ColumnDefinition Width="60" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock VerticalAlignment="Center">Width</TextBlock>
                            <TextBox Grid.Column="1" Text="{Binding DieWidth.Value}" sharedExtensions:TextBoxMaskExt.Mask="PositiveDecimal" MaxLength="10" sharedExtensions:TextBoxExt.OnEnterAndEscUpdate="True"></TextBox>
                            <ComboBox Grid.Column="2" ItemsSource="{Binding UnitsForDieSize}" DisplayMemberPath="Key" SelectedValuePath="Value" SelectedValue="{Binding DieWidth.Unit}" ></ComboBox>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center" Margin="0,10,0,0">Height</TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="1" Margin="0,10,0,0" Text="{Binding DieHeight.Value}"  MaxLength="10"  sharedExtensions:TextBoxExt.OnEnterAndEscUpdate="True"></TextBox>
                            <ComboBox Grid.Row="1" Grid.Column="2" Margin="0,10,0,0" ItemsSource="{Binding UnitsForDieSize}" DisplayMemberPath="Key" SelectedValuePath="Value" SelectedValue="{Binding DieHeight.Unit}" sharedExtensions:TextBoxExt.OnEnterAndEscUpdate="True"></ComboBox>
                        </Grid>
                        <Button Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Command="{Binding SubmitParameters}" HorizontalAlignment="Right" MinWidth="100">Submit</Button>
                    </StackPanel>
                    <Separator/>
                    <measures:AutoFocusSettingsView AutoFocusSettings="{Binding AutoFocusSettings}" AvailableAutoFocusTypes="CameraAndLise"  />
                    <Separator />
                    <Button Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Command="{Binding ResetCorners}" HorizontalAlignment="Center" MinWidth="100" IsEnabled="{Binding AutoFocusSettings.IsEditing, Converter={converters:InvertedBooleanConverter}}">Reset corners</Button>
                    <Separator />
                    <!-- Top Left Corner -->
                    <!-- Top Left Corner Header -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Style="{StaticResource TitleLevel2}">1 - TOP LEFT CORNER</Label>
                        <sharedControls:StepStateImage Grid.Column="3" Height="16" Width="16" Margin="10,5" StepState="{Binding TopLeftCornerStep.StepState, Mode=OneWay}" ToolTip="{Binding TopLeftCornerStep.ErrorMessage}" />
                    </Grid>

                    <!-- Top Left Corner Content-->
                    <StackPanel IsEnabled="{Binding AutoFocusSettings.IsEditing, Converter={converters:InvertedBooleanConverter}}">
                        <Grid Margin="10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Visibility="{Binding TopLeftCornerStep.StepState,Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedControls:StepStates.Done}}">
                                <sharedControls:ImageButton Width="20" Height="20" Style="{StaticResource ImageButtonWithoutBorder}" ImageGeometry="{StaticResource TargetGeometry}" ImageGeometryBrush="{StaticResource ButtonForegroundBrush}" Command="{Binding GotoTopLeftCorner}" ></sharedControls:ImageButton>
                                <TextBlock Text="X :"  Margin="5,0" VerticalAlignment="Center" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding TopLeftCornerStep.CurrentPositionX, Mode=OneWay,StringFormat='{}{0:F3} mm'}" VerticalAlignment="Center" />
                                <TextBlock Margin="20,0,0,0" Text="Y :" VerticalAlignment="Center" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding TopLeftCornerStep.CurrentPositionY, Mode=OneWay,StringFormat='{}{0:F3} mm'}" VerticalAlignment="Center" />
                            </StackPanel>
                            <sharedControls:ImageButton Grid.Column="1" Width="20" Height="20" Style="{StaticResource ImageButtonWithoutBorder}" ImageGeometry="{StaticResource GearGeometry}" ImageGeometryBrush="{StaticResource ButtonForegroundBrush}" Command="{Binding TopLeftCornerStep.DisplayParameters}" Margin="0,3" />
                            <sharedControls:ImageButton Margin="10,0,0,0" Grid.Column="2" Width="20" Height="20"  Style="{StaticResource ImageButtonWithoutBorder}" Padding="0" ImageGeometry="{StaticResource EyeOpenGeometry}" ImageGeometryBrush="{StaticResource ButtonForegroundBrush}" Command="{Binding TopLeftCornerStep.DisplayImage}" />
                        </Grid>
                        <Grid Margin="10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center" Visibility="{Binding TopLeftCornerStep.IsEditing, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}">Place the target on the top left corner of the die.</TextBlock>
                            <Button Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Visibility="{Binding TopLeftCornerStep.IsEditing, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}" Command="{Binding TopLeftCornerStep.Submit}" MinWidth="100">Submit</Button>
                            <Button Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Visibility="{Binding TopLeftCornerStep.IsEditing, Mode=OneWay, Converter={converters:InvertedBooleanToVisibilityConverter}}" Command="{Binding TopLeftCornerStep.Edit}" MinWidth="100">Edit</Button>
                        </Grid>
                    </StackPanel>

                    <Separator />

                    <!-- Bottom Right Corner -->
                    <!-- Bottom Right Corner Header -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Style="{StaticResource TitleLevel2}">2 - BOTTOM RIGHT CORNER</Label>
                        <sharedControls:StepStateImage Grid.Column="3" Height="16" Width="16" Margin="10,5" StepState="{Binding BottomRightCornerStep.StepState, Mode=OneWay}" ToolTip="{Binding BottomRightCornerStep.ErrorMessage}" />
                    </Grid>

                    <!-- Bottom Right Corner Content-->
                    <StackPanel IsEnabled="{Binding AutoFocusSettings.IsEditing, Converter={converters:InvertedBooleanConverter}}">
                        <Grid Margin="10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal"  Visibility="{Binding BottomRightCornerStep.StepState,Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedControls:StepStates.Done}}">
                                <sharedControls:ImageButton Width="20" Height="20" Style="{StaticResource ImageButtonWithoutBorder}" ImageGeometry="{StaticResource TargetGeometry}" ImageGeometryBrush="{StaticResource ButtonForegroundBrush}" Command="{Binding GotoBottomRightCorner}" ></sharedControls:ImageButton>
                                <TextBlock Text="X :"  Margin="5,0" VerticalAlignment="Center" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding BottomRightCornerStep.CurrentPositionX, Mode=OneWay,StringFormat='{}{0:F3} mm'}" VerticalAlignment="Center" />
                                <TextBlock Margin="20,0,0,0" Text="Y :" VerticalAlignment="Center" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding BottomRightCornerStep.CurrentPositionY, Mode=OneWay,StringFormat='{}{0:F3} mm'}" VerticalAlignment="Center" />
                            </StackPanel>
                            <!-- <sharedControls:ImageButton Grid.Column="1" Width="20" Height="20" Style="{StaticResource ImageButtonWithoutBorder}" ImageGeometry="{StaticResource GearGeometry}" ImageGeometryBrush="{StaticResource ButtonForegroundBrush}" Margin="0,3,0,3" Command="{Binding BottomRightCornerStep.DisplayParameters}" HorizontalAlignment="Right" /> -->
                            <!-- <sharedControls:ImageButton Margin="10,0,0,0" Grid.Column="2" Width="20" Height="20"  Style="{StaticResource ImageButtonWithoutBorder}" Padding="0" ImageGeometry="{StaticResource EyeOpenGeometry}" ImageGeometryBrush="{StaticResource ButtonForegroundBrush}" Command="{Binding BottomRightCornerStep.DisplayImage}" /> -->
                        </Grid>
                        <Grid Margin="10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding BottomRightCornerStep.IsEditing, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}">Place the target on the bottom right corner of the die.</TextBlock>
                            <Button Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Visibility="{Binding BottomRightCornerStep.IsEditing, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}" Command="{Binding BottomRightCornerStep.Submit}" MinWidth="100">Submit</Button>
                            <Button Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Visibility="{Binding BottomRightCornerStep.IsEditing, Mode=OneWay, Converter={converters:InvertedBooleanToVisibilityConverter}}" Command="{Binding BottomRightCornerStep.Edit}" MinWidth="100">Edit</Button>
                        </Grid>
                    </StackPanel>
                    </StackPanel>
                    <Separator />
                    <!-- RUN Wafer Map  -->
                    <!-- RUN Wafer Map Header -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Style="{StaticResource TitleLevel2}">RUN WAFER MAP</Label>
                    </Grid>

                    <!-- RUN Wafer Map Content-->
                    <StackPanel>
                        <Grid Margin="10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="1" Grid.Row="1">
                                <sharedControls:ImageButton  Margin="5,0,0,0" MinWidth="100" ImageGeometry="{StaticResource PlayGeometry}" ImageGeometryBrush="{StaticResource IconsColor}" Command="{Binding StartDieAndStreetSize}" Visibility="{Binding IsWaferMapInProgress, Converter={converters:InvertedBooleanToVisibilityConverter}}">Run</sharedControls:ImageButton>
                                <sharedControls:ImageButton  Margin="5,0,0,0" MinWidth="100" ImageGeometry="{StaticResource StopGeometry}" ImageGeometryBrush="Red" Command="{Binding StopWaferMap}" Visibility="{Binding IsWaferMapInProgress, Converter={converters:BooleanToVisibilityConverter}}">Stop</sharedControls:ImageButton>
                            </Grid>
                        </Grid>
                    </StackPanel>
                    
                    <Separator />
                    <!-- Die Size  -->
                    <!-- Die Size Header -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Style="{StaticResource TitleLevel2}">DIE AND STREET SIZES</Label>
                        <sharedControls:StepStateImage Grid.Column="3" Height="16" Width="16" Margin="10,5" StepState="{Binding DieAndStreetSizesStep.StepState, Mode=OneWay}" ToolTip="{Binding DieAndStreetSizesStep.ErrorMessage}" />
                    </Grid>

                    <!-- Die Size Content-->
                    <Grid Margin="10,0" Visibility="{Binding DieAndStreetSizesStep.StepState,Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedControls:StepStates.Done}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Margin="0,5">Score</TextBlock>
                        <TextBlock Margin="0,5" Grid.Column="1" Text="{Binding DieAndStreetSizes.Confidence, StringFormat='{}{0:F0} %', Converter={converters:ScaleToPercentConverter}}"></TextBlock>
                        <TextBlock Margin="0,5" Grid.Row="1" >Die Size</TextBlock>
                        <TextBlock Margin="0,5" Grid.Row="1" Grid.Column="1" Text="{Binding DieAndStreetSizes.DieDimensions.DieWidth, StringFormat='{}Width: {0:F3}'}" />
                        <TextBlock Margin="0,5" Grid.Row="1" Grid.Column="2" Text="{Binding DieAndStreetSizes.DieDimensions.DieHeight, StringFormat='{}Height: {0:F3}'}" />
                        <TextBlock Grid.Row="2" Margin="0,5">Street Size</TextBlock>
                        <TextBlock Margin="0,5" Grid.Row="2" Grid.Column="1" Text="{Binding DieAndStreetSizes.DieDimensions.StreetWidth, StringFormat='{}Width: {0:F3}'}" />
                        <TextBlock Margin="0,5" Grid.Row="2" Grid.Column="2" Text="{Binding DieAndStreetSizes.DieDimensions.StreetHeight, StringFormat='{}Height: {0:F3}'}" />
                    </Grid>

                    <Separator />

                    <!-- Wafer Map -->
                    <!-- Wafer Map Header -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Style="{StaticResource TitleLevel2}">WAFER MAP</Label>
                        <sharedControls:StepStateImage Grid.Column="3" Height="16" Width="16" Margin="10,5" StepState="{Binding WaferMapStep.StepState, Mode=OneWay}" ToolTip="{Binding WaferMapStep.ErrorMessage}" />
                    </Grid>

                    <!-- Wafer Map Content-->
                    <Grid Margin="10,5" Visibility="{Binding WaferMapStep.StepState,Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedControls:StepStates.Done}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Margin="0,5">Score</TextBlock>
                        <TextBlock Margin="0,5" Grid.Column="1" Text="{Binding WaferMap.Confidence, StringFormat='{}{0:F0} %', Converter={converters:ScaleToPercentConverter}}"></TextBlock>
                        <TextBlock Grid.Row="1" Margin="0,5">Number of dies</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding NbDies}" Margin="0,5"></TextBlock>
                        <TextBlock Grid.Row="2" Margin="0,5">Angle</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding WaferMap.RotationAngle.Degrees, StringFormat='{}{0:F3} °'}" Margin="0,5"></TextBlock>
                        <controls:WaferMapDisplayControl x:Name="WaferMapDisplay"
                                                         Grid.ColumnSpan="2" Grid.Row="3"
                                                         WaferDimentionalCharac="{markupextensions:ChuckSupervisorBinding  ChuckVM.SelectedWaferCategory.DimentionalCharacteristic}"
                                                         EdgeExclusionThickness="{Binding EdgeExclusion.Length}"
                                                         WaferMap="{Binding WaferMap}"
                                                         Width="300" Height="300"
                                                         RenderOptions.EdgeMode="Unspecified"></controls:WaferMapDisplayControl>
                        <Button Grid.ColumnSpan="2" Grid.Row="3"  Width="300" Height="300" Command="{Binding DisplayWaferMap}" Opacity="0" Cursor="Hand" />
                        <xctk:BusyIndicator Grid.ColumnSpan="2" Grid.Row="3"  IsBusy="{Binding ElementName=WaferMapControl, Path=IsBusy}" d:IsHidden="true" DisplayAfter="0" />
                    </Grid>

                    <Separator />
                </StackPanel>
            </ScrollViewer>
            <Separator Grid.Row="2" />
        </Grid>
    </Grid>
</UserControl>