
/* AUTOMATICALLY GENERATED HEADER FILE */

#ifdef INC_Profil3D_INC
#error Profil3D.agh included twice
#endif

#define INC_Profil3D_INC

void SPG_CONV Profil3D_SetHeightFromFloat(SG_FullBloc &B,float TMin,float TDiff,Profil& P);
void SPG_CONV Profil3D_SetTexFromFloat(SG_FullBloc &B,float TMin,float TDiff, SG_FullTexture& T, Profil& P);
void SPG_CONV Profil3D_SetMsk(SG_FullBloc& FB,Profil& P, int Style);
void SPG_CONV Profil3D_TexMap(SG_FullBloc &B, SG_FullTexture& T, int SizeX, int SizeY);
void SPG_CONV Profil3D_BlackHole(SG_FullBloc BRef);
void SPG_CONV T_CreateRep(SG_FullBloc& Rep, int FaceType, DWORD CoulX, DWORD CoulY, DWORD CoulZ);
void SPG_CONV T_SaveXCut(float * Tableau, int SizeX, int SizeY,int ysel);
void SPG_CONV T_SaveYCut(float * Tableau, int SizeX, int SizeY,int xsel);
void SPG_CONV T_Draw2DXYCut(G_Ecran& SECoupeX,G_Ecran& SECoupeY,float * Tableau, int SizeX, int SizeY,int xsel,int ysel, C_Lib& CL);
void SPG_CONV T_Draw3DXYCut(G_Ecran& SEGraph,SG_FullBloc& B, float * Tableau, int SizeX, int SizeY,int xsel,int ysel, C_Lib& CL);
int SPG_CONV T_Find3DXYCut(G_Ecran& SEGraph,int GMouseX,int GMouseY,SG_FullBloc& B, int SizeX, int SizeY, int SelSize, int& xsel, int& ysel);
int SPG_CONV Profil3D_DrawScale(PROFIL3D_STATE& PS);
int SPG_CONV Profil3D_Init(G_Ecran &E,PROFIL3D_STATE& PS,Profil& P,int IsStereo=0);
void SPG_CONV Profil3D_UpdateColorMaps(PROFIL3D_STATE& PS, int ChangeMsk, int ChangeZ, int ChangeTexZ, int SetTexLightMode);
void SPG_CONV Profil3D_UpdateButtons(PROFIL3D_STATE& PS);
void SPG_CONV Profil3D_Update(PROFIL3D_STATE& PS);
void SPG_CONV Profil3D_Close(PROFIL3D_STATE& PS);

/* AUTOMATICALLY GENERATED HEADER FILE */

