
/* AUTOMATICALLY GENERATED HEADER FILE */

#ifdef INC_SPG_Buttons_INC
#error SPG_Buttons.agh included twice
#endif

#define INC_SPG_Buttons_INC

int SPG_CONV B_LoadButtonsLib(B_Lib& LB, G_Ecran& E, int ClearScreen=0, int AutoUpdate=0, const char * WorkDir="..\\SrcC\\Interface\\",const char * S="Buttons.bmp");
void SPG_CONV B_CloseButtonsLib(B_Lib& LB);
void SPG_CONV B_UpdateButtonsLib(B_Lib& LB, int MouseX, int MouseY, int MouseState);
void SPG_CONV B_UpdateButtonsLibFromDoEvents(B_Lib& LB);
void SPG_CONV B_RedrawButtonsLib(B_Lib& LB, int EraseBackGround=0);
int SPG_CONV B_CreateButton(B_Lib &LB, G_Ecran* E, C_Lib* CL, int PosX,int PosY, int MODE, int NumDigits, void * UntypedToChange, DWORD UntypedIncrement, float ValMin, float ValMax);
int SPG_CONV B_CreateClickButton(B_Lib &LB, G_Ecran& E, int PosX,int PosY);
int SPG_CONV B_CreateCheckButton(B_Lib &LB, G_Ecran& E, int PosX,int PosY);
int SPG_CONV B_CreateCheckIntButton(B_Lib &LB, G_Ecran& E, int PosX,int PosY, int Flag, int * VToChange);
int SPG_CONV B_CreateNumericButton(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int NumDigits, float * VToChange);
int SPG_CONV B_CreateVectorButton(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int NumDigits, V_VECT* V);
int SPG_CONV B_CreateNumericIntButton(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int NumDigits, int * VToChange);
int SPG_CONV B_CreateCliquableNumericButton(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int NumDigits, float * VToChange);
int SPG_CONV B_CreateCliquableNumericIntButton(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int NumDigits, int * VToChange);
int SPG_CONV B_CreateHReglage(B_Lib &LB, G_Ecran& E, int PosX,int PosY, int SizeX, float * VToChange, float Increment, float VMin, float VMax);
int SPG_CONV B_CreateHReglageNumeric(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX, int PosY, int SizeX, int NumDigits, float * VToChange, float Increment, float VMin, float VMax);
int SPG_CONV B_CreateHReglageCliquableNumeric(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX, int PosY, int SizeX, int NumDigits, float * VToChange, float Increment, float VMin, float VMax);
int SPG_CONV B_CreateVReglage(B_Lib &LB, G_Ecran& E, int PosX,int PosY, int SizeY, float * VToChange, float Increment, float VMin, float VMax);
int SPG_CONV B_CreateVReglageNumeric(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int SizeY, int NumDigits, float * VToChange, float Increment, float VMin, float VMax);
int SPG_CONV B_CreateVReglageCliquableNumeric(B_Lib &LB, G_Ecran& E, C_Lib& CL, int PosX,int PosY, int SizeY, int NumDigits, float * VToChange, float Increment, float VMin, float VMax);
void SPG_CONV B_CloseButton(B_Generic& B);
void SPG_CONV B_PrintLabel(B_Lib& BL, int NumButton, C_Lib& CL, char * Label);
void SPG_CONV B_DrawButton(B_Generic& B);
void SPG_CONV B_UpdateButton(B_Generic& B, int MouseX, int MouseY, int MouseState,int& ShouldFocus, DWORD ThreadId);
void SPG_CONV B_EditNumericButton(B_Generic& B, DWORD ThreadId);
void SPG_CONV B_EditNumericIntButton(B_Generic& B, DWORD ThreadId);

/* AUTOMATICALLY GENERATED HEADER FILE */

