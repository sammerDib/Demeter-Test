<UserControl x:Class="UnitySC.PM.DMT.Modules.Settings.View.DeadPixelsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:interface="clr-namespace:UnitySC.PM.DMT.Service.Interface;assembly=UnitySC.PM.DMT.Service.Interface"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:controls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
             xmlns:dmtConverters="clr-namespace:UnitySC.PM.DMT.Shared.UI.Converter;assembly=UnitySC.PM.DMT.Shared.UI"
             xmlns:local="clr-namespace:UnitySC.PM.DMT.Modules.Settings.View"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="1024">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type local:DeadPixelsDisplayControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:DeadPixelsDisplayControl}">
                            <Grid>
                                <!--<Image></Image>-->
                                <Canvas x:Name="deadPixelsCanvas"/>
                            </Grid>
                            <!--<Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type local:DeadPixelControl}">
                <Setter Property="Width"
                Value="3" />
                <Setter Property="Height"
                Value="3" />
                <Setter Property="SnapsToDevicePixels"
                Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:DeadPixelControl}">
                            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}">
                                <Rectangle x:Name="Border"  Stroke="Red" StrokeThickness="1"/>
                                <!--<Rectangle Stroke="Yellow" StrokeThickness="1" Visibility="{Binding AssociatedDeadPixel.IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
                                <!--<Rectangle Fill="Aqua"></Rectangle>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=AssociatedDeadPixel.IsSelected, RelativeSource={RelativeSource Self}}"
                                 Value="true">
                                    <Setter TargetName="Border"
                                    Property="Stroke"
                                    Value="Yellow" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard x:Key="blinkAnimation" Duration="0:0:2" RepeatBehavior="Forever">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                       AutoReverse="True">
                    <ColorAnimationUsingKeyFrames.KeyFrames>

                        <LinearColorKeyFrame KeyTime="0:0:0.5" Value="Transparent"/>
                        <LinearColorKeyFrame KeyTime="0:0:1" Value="Black"/>
                        <DiscreteColorKeyFrame KeyTime="0:0:2" Value="Black"/>
                    </ColorAnimationUsingKeyFrames.KeyFrames>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <sharedControls:ImageGroupBox Header="Parameters" ImageGeometry="{StaticResource GearGeometry}" ImageGeometryBrush="{StaticResource IconsColor}" Margin="0,0,0,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Margin="0,10">
                        <TextBlock Margin="0,0,30,0" VerticalAlignment="Center">Dead Pixels type</TextBlock>
                        <RadioButton IsChecked="{Binding Path=CurrentDeadPixelType, Converter={converters:EnumToBooleanConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.WhitePixel}}" VerticalAlignment="Center">Stuck (white)</RadioButton>
                        <RadioButton Margin="30,0,0,0" IsChecked="{Binding Path=CurrentDeadPixelType, Converter={converters:EnumToBooleanConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.BlackPixel}}">Black</RadioButton>
                    </StackPanel>
                    <TextBlock Grid.Row="1" Margin="0,0" Visibility="{Binding Path=CurrentDeadPixelType, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.WhitePixel}}" FontSize="16" Text="Put a cap on the camera" Foreground="Black">
                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="TextBlock.Loaded">
                                <BeginStoryboard>
                                    <StaticResource ResourceKey="blinkAnimation"/>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Margin="0,0" Visibility="{Binding Path=CurrentDeadPixelType, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.BlackPixel}}" FontSize="16" Text="Put a white surface in front of the camera" Foreground="Black">
                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="TextBlock.Loaded">
                                <BeginStoryboard>
                                    <StaticResource ResourceKey="blinkAnimation"/>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>

                    <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,10">
                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">Exposure Time</TextBlock>
                        <Grid Width="150">
                            <sharedControls:DoubleUpDown Minimum="{Binding CameraInformation.MinExposureTimeMs, StringFormat={}{0:F1}}" Maximum="{Binding CameraInformation.MaxExposureTimeMs, StringFormat={}{0:F1}}" Style="{StaticResource DoubleUpDownDMTStyle}" Value="{Binding WhiteDeadPixelsExposureTimeMs, StringFormat={}{0:F1}}"   Unit="ms" Visibility="{Binding CurrentDeadPixelType, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.WhitePixel}}"/>
                            <sharedControls:DoubleUpDown Minimum="{Binding CameraInformation.MinExposureTimeMs, StringFormat={}{0:F1}}" Maximum="{Binding CameraInformation.MaxExposureTimeMs, StringFormat={}{0:F1}}" Style="{StaticResource DoubleUpDownDMTStyle}" Value="{Binding BlackDeadPixelsExposureTimeMs, StringFormat={}{0:F1}}"   Unit="ms" Visibility="{Binding CurrentDeadPixelType, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.BlackPixel}}"/>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=CurrentDeadPixelType, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.WhitePixel}}">
                            <TextBlock Margin="30,0,10,0" VerticalAlignment="Center">Pixels marked dead when above</TextBlock>
                            <TextBox Width="50" Text="{Binding WhitePixelsThreshold}"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=CurrentDeadPixelType, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static interface:DeadPixelTypes.BlackPixel}}">
                            <TextBlock Margin="30,0,10,0" VerticalAlignment="Center">Pixels marked dead when below</TextBlock>
                            <TextBox Width="50" Text="{Binding BlackPixelsThreshold}"></TextBox>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </sharedControls:ImageGroupBox>

            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,0,0,10">
                <sharedControls:ImageButton ImageGeometry="{StaticResource PlayGeometry}" ImageGeometryBrush="Green" Content="Run"  Command="{Binding StartDeadPixelsSearch}"/>

                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0">Number of stuck Pixels - White:</TextBlock>
                <Grid>
                    <TextBlock Text="{Binding NbWhiteDeadPixels}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    <TextBlock Text="Not Searched" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="Red" FontWeight="Bold" Visibility="{Binding NbWhiteDeadPixels, Converter={converters:InvertedNullToVisibilityConverter}}"/>
                </Grid>
                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0">Black:</TextBlock>
                <Grid>
                    <TextBlock Text="{Binding NbBlackDeadPixels}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    <TextBlock Text="Not Searched" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="Red" FontWeight="Bold" Visibility="{Binding NbBlackDeadPixels, Converter={converters:InvertedNullToVisibilityConverter}}"/>
                </Grid>
                <sharedControls:ImageButton ImageGeometry="{StaticResource SaveGeometry}" ImageGeometryBrush="{StaticResource IconsColor}" Content="Save Dead Pixels"  Command="{Binding SaveDeadPixels}" Margin="20,0,0,0"/>
            </StackPanel>
        </Grid>
        <Grid x:Name="Source" Grid.Row="4" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Liste des images -->
            <ListView x:Name="deadPixelsList" ItemsSource="{Binding DeadPixels}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,0,5,0" SelectionChanged="deadPixelsList_SelectionChanged">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Dead Pixels" Width="195" DisplayMemberBinding="{Binding AssociatedDeadPixel}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <!--<zoomboximage:ZoomboxImageWithButtons Grid.Column="1" ImageSource="{Binding CameraBitmapSource}"/>-->

            <!--<xctk:Zoombox x:Name="theZoombox" Background="{StaticResource CameraBackground}" MaxScale="5"
                      Height="{Binding ElementName=mainGrid, Path=ActualHeight}" Width="{Binding ElementName=mainGrid, Path=ActualWidth}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                      Scale="{Binding Scale, Mode=TwoWay}" Loaded="TheZoombox_Loaded"
                      IsAnimated="False" IsUsingScrollBars="True" ZoomOn="View" KeepContentInBounds="True"  RelativeZoomModifiers="Ctrl" DragModifiers="Exact" Cursor="Arrow">-->

            <xctk:Zoombox x:Name="DeadPixelsZoom"  Grid.Column="1" MinScale="0.5" MaxScale="10" Margin="0,0,0,0" IsAnimated="False" IsUsingScrollBars="True" ZoomOn="View" KeepContentInBounds="True"  RelativeZoomModifiers="Ctrl" DragModifiers="Exact" Cursor="Arrow" Background="AliceBlue">

                <Grid Width="{Binding ImageWidth,FallbackValue=0}" Height="{Binding ImageHeight,FallbackValue=0}"
                  Background="Green">
                    <Image x:Name="theImage" Source="{Binding CameraBitmapSource, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" Binding.TargetUpdated="theImage_TargetUpdated" RenderOptions.BitmapScalingMode="NearestNeighbor"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MouseMove="theImage_MouseMove" MouseLeave="theImage_MouseLeave" SizeChanged="theImage_SizeChanged">
                    </Image>
                    <local:DeadPixelsDisplayControl x:Name="DeadPixelsDisplaControl"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DeadPixels="{Binding DeadPixels}">
                    </local:DeadPixelsDisplayControl>
                </Grid>
            </xctk:Zoombox>

            <TextBlock Text="{Binding StatusText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
        </Grid>
        <xctk:BusyIndicator IsBusy="{Binding IsBusy}" d:IsHidden="true" BusyContent="Looking for Dead Pixels" Grid.RowSpan="2"/>
    </Grid>
</UserControl>