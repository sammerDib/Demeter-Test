<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:expo="clr-namespace:UnitySC.PM.DMT.CommonUI.View.ExposureSettings"
    xmlns:controls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
    xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
    xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
    x:Class="UnitySC.PM.DMT.CommonUI.View.Measure.DeflectometryView"
    xmlns:dmtEnum="clr-namespace:UnitySC.PM.DMT.Service.Interface.Measure.Outputs;assembly=UnitySC.PM.DMT.Service.Interface"
    xmlns:vmConverters="clr-namespace:UnitySC.PM.DMT.CommonUI.ViewModel.Measure"
    mc:Ignorable="d"
    d:DesignHeight="800" d:DesignWidth="800" d:DataContext="{d:DesignInstance vmConverters:DeflectometryVM}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="../../ResourcesDictionnary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid Style="{StaticResource FormGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Outputs -->
            <sharedControls:ImageGroupBox Header="Outputs" ImageGeometry="{StaticResource ImageGeometry}"
                                          ImageGeometryBrush="{StaticResource IconsColor}" Margin="0,0,0,5">
                <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="CurvatureCheckBox" Content="Curvature"
                              IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)Curvature].IsSelected}"
                              Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)Curvature].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <CheckBox Content="Amplitude"
                              IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)Amplitude].IsSelected}"
                              Margin="10,0,0,0"
                              Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)Amplitude].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <CheckBox Content="Phase maps" ToolTip="Unwrapped Phases"
                              IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)UnwrappedPhase].IsSelected}"
                              Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)UnwrappedPhase].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Margin="10,0,0,0" />
                    <CheckBox Content="Global Topo"
                              IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)GlobalTopo].IsSelected}"
                              VerticalAlignment="Center"
                              Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)GlobalTopo].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Margin="10,0,0,0" />
                    <CheckBox Content="Nano topo"
                              IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)NanoTopo].IsSelected}"
                              VerticalAlignment="Center"
                              Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)NanoTopo].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Margin="10,0,0,0" />
                    <CheckBox Content="Low angle dark-field"
                              IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)LowAngleDarkField].IsSelected}"
                              VerticalAlignment="Center"
                              Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)LowAngleDarkField].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Margin="10,0,0,0" />
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)RawImages].IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10,0" />
                        <TextBlock Text="Additional outputs" />
                        <CheckBox Content="Raw"
                                  IsChecked="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)RawImages].IsSelected}"
                                  VerticalAlignment="Center" VerticalContentAlignment="Bottom" Margin="10,0,0,0" />
                    </StackPanel>
                </StackPanel>
            </sharedControls:ImageGroupBox>

            <sharedControls:ImageGroupBox Header="Fringes" ImageGeometry="{StaticResource FringesGeometry}"
                                          ImageGeometryBrush="{StaticResource IconsColor}" Grid.Row="1"
                                          Margin="0,0,0,5">
                <StackPanel>
                    <!-- Standard fringes -->
                    <Grid Visibility="{Binding NeedMultiPeriod, Converter={converters:InvertedBooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <!-- Slope -->
                        <TextBlock Grid.Row="1" Text="Slope sensitivity" VerticalAlignment="Top" />
                        <controls:TextSlider Grid.Row="1" Grid.Column="1" Value="{Binding SlopePrecision}" Minimum="0"
                                             Maximum="{Binding MaxSlopePrecision}"
                                             TickText="{Binding SlopePrecisionTickText}"
                                             TickFrequency="1" TickPlacement="BottomRight" MinWidth="300"
                                             IsEnabled="{Binding IsChecked, ElementName=isCustom, Converter={StaticResource InvertedBooleanConverter}}" />

                        <!--Phase -->
                        <TextBlock Text="Phase shift precision" Grid.Row="2" VerticalAlignment="Top" />
                        <controls:TextSlider Grid.Row="2" Grid.Column="1" Value="{Binding PhaseShiftPrecision}"
                                             Minimum="0" Maximum="{Binding MaxPhaseShiftPrecision}"
                                             TickText="{Binding PhaseShiftPrecisionTickText}"
                                             TickFrequency="1" TickPlacement="BottomRight" MinWidth="300"
                                             IsEnabled="{Binding IsChecked, ElementName=isCustom, Converter={StaticResource InvertedBooleanConverter}}" />

                        <!-- Description -->
                        <TextBlock Text="Period (pixels):" Grid.Row="1" Grid.Column="2" VerticalAlignment="Top"
                                   HorizontalAlignment="Right" FontWeight="Normal" />
                        <TextBlock Text="{Binding Period}" Grid.Row="1" Grid.Column="3" VerticalAlignment="Top" />
                        <TextBlock Text="Images per direction:" Grid.Row="2" Grid.Column="2" VerticalAlignment="Top"
                                   FontWeight="Normal" HorizontalAlignment="Right" />
                        <TextBlock Text="{Binding StandardNbImagesPerDirection}" Grid.Row="2" Grid.Column="3"
                                   VerticalAlignment="Top" />
                    </Grid>

                    <!-- Multi Périodes -->
                    <Grid
                        Visibility="{Binding NeedMultiPeriod, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="0, 0, 0, 5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                     
                        
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Slope sensitivity" VerticalAlignment="Top" Margin="4, 0, 4, 15" />
                        <controls:TextSlider Grid.Row="0" Grid.Column="1" MinWidth="300" Value="{Binding MultiSlopePrecisionIndex}"
                                             Minimum="0" Maximum="{Binding MultiSlopePrecisionList.Count, Converter={converters:MinusOneConverter}}"
                                             TickText="{Binding MultiSlopePrecisionTickText}" TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                                             TickFrequency="1" Margin="5, 0, 5, 15"/>
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Smallest period (pixels): " FontWeight="Normal"
                                   HorizontalAlignment="Right" VerticalAlignment="Top" Margin="4, 0, 4, 15"/>
                        <TextBlock Grid.Row="0" Grid.Column="3" VerticalAlignment="Top" Text="{Binding MultiSlopePrecision}" Margin="4, 0, 4, 15"/>
                        <Separator Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Margin="10, 10, 10, 0"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Unwrapping periods ratio" VerticalAlignment="Top" Margin="4, 10, 4, 10"/>
                        <controls:TextSlider Grid.Row="2" Grid.Column="1" MinWidth="300" Minimum="0"
                                             Maximum="{Binding AvailablePeriods.Count, Converter={converters:MinusOneConverter}}"
                                             Value="{Binding MultiPeriodIndex}" TickFrequency="1" TickText="{Binding MultiPeriodRatioTickText}"
                                             TickPlacement="BottomRight" IsSnapToTickEnabled="True" 
                                             Margin="5, 10"/>
                        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="2" Margin="0, 10, 0, 10">
                            <TextBlock Text="Periods (pixels): " FontWeight="Normal" HorizontalAlignment="Right" VerticalAlignment="Top" />
                            <TextBlock Text="Period ratio: " FontWeight="Normal" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="3" Margin="0, 10, 0, 10">
                            <TextBlock Text="{Binding Periods}" VerticalAlignment="Top" FontWeight="Bold"/>
                            <TextBlock Text="{Binding MultiPeriodRatio}" VerticalAlignment="Top" />
                        </StackPanel>
                        <Separator Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="10, 0"/>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Phase shift precision" VerticalAlignment="Top" Margin="4, 10"/>
                        <controls:TextSlider Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="{Binding MaxPhaseShiftPrecision}"
                                             Value="{Binding MultiNbImagePerDirectionIndex}" TickFrequency="1" TickText="{Binding PhaseShiftPrecisionTickText}"
                                             TickPlacement="BottomRight" IsSnapToTickEnabled="True" Margin="5, 10"/>
                        <TextBlock Grid.Row="4" Grid.Column="2" Text="Images per direction: " HorizontalAlignment="Right"
                                   FontWeight="Normal" VerticalAlignment="Top" Margin="4, 10"/>
                        <TextBlock Grid.Row="4" Grid.Column="3" VerticalAlignment="Top" Text="{Binding MultiNbImagesPerDirection}" Margin="4, 10"/>
                    </Grid>
                </StackPanel>
            </sharedControls:ImageGroupBox>

            <sharedControls:ImageGroupBox ImageGeometry="{StaticResource FringesGeometry}"
                                          ImageGeometryBrush="{StaticResource IconsColor}" Grid.Row="2"
                                          Margin="0,0,0,5">
                <sharedControls:ImageGroupBox.Visibility>
                    <MultiBinding Converter="{converters:BooleanOrToVisibilityConverter}">
                        <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)Curvature].IsSelected" />
                        <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)LowAngleDarkField].IsSelected" />
                        <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)UnwrappedPhase].IsSelected" />
                    </MultiBinding>
                </sharedControls:ImageGroupBox.Visibility>
                <sharedControls:ImageGroupBox.Header>
                    <MultiBinding Converter="{vmConverters:BooleanToCurvatureDarkDynamicsHeaderConverter}">
                        <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)Curvature].IsSelected" />
                        <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)LowAngleDarkField].IsSelected" />
                        <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)UnwrappedPhase].IsSelected" />
                    </MultiBinding>
                </sharedControls:ImageGroupBox.Header>
                <Grid>
                    <Grid.IsEnabled>
                        <MultiBinding Converter="{converters:BooleanOrConverter}">
                            <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)Curvature].IsSelected" />
                            <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)LowAngleDarkField].IsSelected" />
                            <Binding Path="Outputs[(dmtEnum:DeflectometryOutput)UnwrappedPhase].IsSelected" />
                        </MultiBinding>
                    </Grid.IsEnabled>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0"
                                    Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)Curvature].IsSelected, Converter={converters:BooleanToVisibilityConverter}}">
                            <TextBlock Text="Curvature dynamics:" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal"/>
                            <TextBlock Text="{Binding CurvatureDynamic}" HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0"
                                    Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)LowAngleDarkField].IsSelected, Converter={converters:BooleanToVisibilityConverter}}">
                            <TextBlock Text="Low-angle dark field:" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal"/>
                            <TextBlock Text="{Binding DarkDynamic}" HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0"
                                    Visibility="{Binding Path=Outputs[(dmtEnum:DeflectometryOutput)UnwrappedPhase].IsSelected, Converter={converters:BooleanToVisibilityConverter}}">
                            <TextBlock Text="UnWrapped dynamics:" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Normal"/>
                            <TextBlock Text="{Binding UnWrappedDynamic}" HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        <sharedControls:ImageButton  Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
                                                    ImageGeometry="{StaticResource TargetGeometry}"
                                                    ImageGeometryBrush="{StaticResource IconsColor}" Content="Adjust"
                                                    Command="{Binding AdjustCurvatureDynamicCommand}" />
                    </Grid>
                </Grid>
            </sharedControls:ImageGroupBox>

            <expo:ExposureView Grid.Row="3" IsManualTuneNeeded="{Binding IsTuneExposureNeeded}" />
            
            <sharedControls:ImageGroupBox Grid.Row="5" ImageGeometry="{StaticResource GearGeometry}"
                                          ImageGeometryBrush="{StaticResource IconsColor}" Header="Advanced Parameters"
                                          Margin="0 5">
                <StackPanel Orientation="Horizontal" Margin="10 5 0 0">
                    <CheckBox IsThreeState="False" Content="Use enhanced deflectometry mask"
                              IsChecked="{Binding UseEnhancedMask}" IsEnabled="{Binding CanUseEnhancedMask}" />
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding CanUseEnhancedMask, Converter={converters:InvertedBooleanToVisibilityConverter}}">
                        <controls:ImageButton ImageGeometry="{StaticResource WarningSolidGeometry}"
                                              ImageGeometryBrush="{StaticResource ImageWarningColor}"
                                              Style="{StaticResource ImageButtonWithoutBorder}" Height="20" />
                        <TextBlock Text="Enhanced mask can only be used with a valid perspective calibration"
                                   FontWeight="Normal" />
                    </StackPanel>
                </StackPanel>
            </sharedControls:ImageGroupBox>
        </Grid>
    </ScrollViewer>
</UserControl>