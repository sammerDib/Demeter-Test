<UserControl x:Class="UnitySC.PM.EME.Client.Controls.StageMoveControl.StageMoveControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:markupextensions="clr-namespace:UnitySC.PM.EME.Client.Controls.MarkupExtensions"
             xmlns:localStage="clr-namespace:UnitySC.PM.EME.Client.Controls.StageMoveControl"
             xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
             xmlns:localExtensions="clr-namespace:UnitySC.PM.EME.Client.Controls.Extensions"
             xmlns:sharedExtensions="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
             xmlns:proxyStage="clr-namespace:UnitySC.PM.EME.Client.Proxy.Axes;assembly=UnitySC.PM.EME.Client.Proxy"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Controls/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/ImageDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type localStage:StageMoveButton}" x:Key="ButtonMoveStyle">
                <Setter Property="Content" Value="" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type localStage:StageMoveButton}">
                            <Grid>
                                <sharedControls:ImageButton x:Name="button"
                                                            ToolTip="{TemplateBinding ToolTip}"
                                                            Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonStyle}"
                                                            ImageGeometry="{TemplateBinding ImageGeometry}"
                                                            ImageGeometryBrush="{StaticResource ButtonForegroundBrush}">
                                    <sharedControls:ImageButton.IsEnabled>
                                        <MultiBinding Converter="{converters:DictionaryItemConverter}">
                                            <markupextensions:AxesViewModelBinding Path="CanMoveDictionary" />
                                            <Binding Path="MoveType" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </sharedControls:ImageButton.IsEnabled>
                                </sharedControls:ImageButton>
                                <Border Visibility="{markupextensions:AxesViewModelBinding IsReadyToStartMove, Converter={converters:InvertedBooleanToVisibilityConverter},FallbackValue=Collapsed}" Background="#60000000" IsHitTestVisible="False" BorderBrush="Transparent"  BorderThickness="0" CornerRadius="3" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type sharedControls:TextBoxUnit}" x:Key="MoveTextBoxStyle" BasedOn="{StaticResource {x:Type sharedControls:TextBoxUnit}}">
                <EventSetter Event="PreviewLostKeyboardFocus" Handler="Textbox_PreviewLostKeyboardFocus" />
                <Setter Property="IsEnabled" Value="{markupextensions:AxesViewModelBinding IsReadyToStartMove}" />
                <Setter Property="MaxLength" Value="10" />
                <Setter Property="localExtensions:SimpleTextBoxMaskExt.Mask" Value="Decimal" />
                <Setter Property="sharedExtensions:TextBoxExt.OnEnterAndEscUpdate" Value="True" />
            </Style>

            <Style TargetType="{x:Type sharedControls:TextBoxUnit}" x:Key="MoveTextBoxStyleNotRounded" BasedOn="{StaticResource MoveTextBoxStyle}">
                <Setter Property="Border.CornerRadius" Value="0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
        <ScrollViewer.Style>
            <Style TargetType="ScrollViewer">
                <Setter Property="Padding" Value="0 0 19 0" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path= ComputedVerticalScrollBarVisibility}" Value="Visible">
                        <Setter Property="Padding" Value="0 0 2 0" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ScrollViewer.Style>
        <StackPanel Orientation="Vertical" MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}, Path=ViewportWidth}">
            <StackPanel Visibility="{Binding IsAutofocusCameraAvailable, Converter={converters:BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                <Label Style="{StaticResource TitleLevel2}">Autofocus Camera</Label>
                <!-- AutoFocus-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Margin="10">Scan Range:</TextBlock>
                    <ComboBox Grid.Column="1" Grid.Row="0" 
                              ItemsSource="{Binding ScanRanges}" 
                              SelectedItem="{Binding SelectedRange}" 
                              Width="120" Height="30"
                              HorizontalAlignment="Center"/>
                    <Button x:Name="StartAutoFocusButton" Grid.Column="0" Grid.Row="1" Margin="10" Visibility="{Binding IsAutofocusInProgress, Mode=OneWay, Converter={converters:InvertedBooleanToVisibilityConverter}}" Click="StartAutoFocusButton_Click"  MinWidth="100" HorizontalAlignment="Right" VerticalAlignment="Center">Autofocus</Button>
                    <Button x:Name="StopAutoFocusButton" Grid.Column="0" Grid.Row="1" Margin="10" Visibility="{Binding IsAutofocusInProgress, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}" Click="StopAutoFocusButton_Click"  MinWidth="100" HorizontalAlignment="Right" VerticalAlignment="Center">Stop Autofocus</Button>
                    <sharedControls:StepStateImage Grid.Column="1" Grid.Row="1" Height="16" Width="16" 
                                                   StepState="InProgress"
                                                   HorizontalAlignment="Left"                                                  
                                                   Visibility="{Binding IsAutofocusInProgress, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}"/>
                </Grid>
                <Rectangle Fill="{StaticResource SeparatorBrush}" Height="1" Margin="10,10"></Rectangle>
            </StackPanel>

            <StackPanel Visibility="{Binding IsQuickFocusAvailable, Converter={converters:BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                <Label Style="{StaticResource TitleLevel2}">Quick Focus</Label>
                <!-- AutoFocus-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Button x:Name="StartQuickFocusButton" Grid.Column="0" Grid.Row="2" Margin="10" Visibility="{Binding IsQuickFocusInProgress, Mode=OneWay, Converter={converters:InvertedBooleanToVisibilityConverter}}" Click="StartQuickFocusButton_Click"  MinWidth="100" HorizontalAlignment="Right" VerticalAlignment="Center">Quick Focus</Button>
                    <Button x:Name="StopQuickFocusButton" Grid.Column="0" Grid.Row="2" Margin="10" Visibility="{Binding IsQuickFocusInProgress, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}" Click="StopQuickFocusButton_Click"  MinWidth="100" HorizontalAlignment="Right" VerticalAlignment="Center">Stop Quick Focus</Button>
                    <sharedControls:StepStateImage Grid.Column="1" Grid.Row="2" Height="16" Width="16" 
                                       StepState="InProgress"
                                       HorizontalAlignment="Left"                                                  
                                       Visibility="{Binding IsQuickFocusInProgress, Mode=OneWay, Converter={converters:BooleanToVisibilityConverter}}"/>
                </Grid>
                <Rectangle Fill="{StaticResource SeparatorBrush}" Height="1" Margin="10,10"></Rectangle>
            </StackPanel>

            <StackPanel Orientation="Vertical" IsEnabled="{markupextensions:AxesViewModelBinding IsLocked, Converter={converters:InvertedBooleanConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="94" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Style="{StaticResource TitleLevel2}">AXIS</Label>
                    <ToggleButton Grid.Column="1" Style="{StaticResource ToggleAnimatedSwitchNew}"
                                  IsChecked="{Binding IsKeyboardInputMode}" 
                                  IsEnabled="{markupextensions:AxesViewModelBinding Path=Status.IsMoving, Converter={converters:InvertedBooleanConverter}}" HorizontalAlignment="Left" />
                    <Border Grid.Column="1" Background="Transparent" IsHitTestVisible="{Binding IsKeyboardInputMode}"></Border>
                    <TextBlock Grid.Column="2" Margin="5,0,0,0" VerticalAlignment="Center" FontSize="11">Use keyboard Motion Control</TextBlock>
                </Grid>
                <Grid Margin="23,0,0,5" Visibility="{markupextensions:AxesViewModelBinding AxisIDz, Converter={converters:NullToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="90" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center">Z</TextBlock>
                    <localStage:StageMoveButton Grid.Column="1" Width="30" HorizontalAlignment="Center" 
							   ToolTip="Z Down move" 
							   Style="{StaticResource ButtonMoveStyle}" 
							   ButtonStyle="{StaticResource LeftImageButton}"
                               ImageGeometry="{StaticResource ChevronLeftGeometry}"
                               MoveType="{x:Static proxyStage:AxesMoveTypes.ZMinus}" 						   
							   IsEnabled="{markupextensions:AxesViewModelBinding IsLocked, Converter={converters:InvertedBooleanConverter}}" />

                    <sharedControls:TextBoxUnit x:Name="TextZPosition" Grid.Column="2" 
                                                Text="{markupextensions:AxesViewModelBinding Path=Position.Z, StringFormat='{}{0:F3}'}" 
                                                VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                                Style="{StaticResource MoveTextBoxStyleNotRounded}" 
                                                Unit="mm" 
                                                IsEnabled="{markupextensions:AxesViewModelBinding IsLocked, Converter={converters:InvertedBooleanConverter}}">
                        <sharedControls:TextBoxUnit.InputBindings>
                            <KeyBinding Command="{markupextensions:AxesViewModelBinding MoveZ}" 
							Key="Enter" 
							CommandParameter="{Binding ElementName=TextZPosition, Path=Text, Converter={converters:StringToDoubleConverter}}">
                            </KeyBinding>
                        </sharedControls:TextBoxUnit.InputBindings>
                    </sharedControls:TextBoxUnit>

                    <localStage:StageMoveButton Grid.Column="3" Width="30" 
							   HorizontalAlignment="Center" 
							   ToolTip="Z Up move" 
							   Style="{StaticResource ButtonMoveStyle}" 
							   ButtonStyle="{StaticResource RightImageButton}"
                               ImageGeometry="{StaticResource ChevronRightGeometry}"
                               MoveType="{x:Static proxyStage:AxesMoveTypes.ZPlus}" />
                </Grid>

                <Grid Margin="23,10,0,10" Height="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <localStage:StageMoveButton Grid.Row="1" Width="30" Height="30"  
                                                PreviewMouseDown="OnMoveClickDown"
                                                PreviewMouseUp="OnMoveClickUp"
                                                HorizontalAlignment="Center" ToolTip="X move" 
                                                Style="{StaticResource ButtonMoveStyle}" 
                                                ButtonStyle="{StaticResource NormalImageButton}" 
                                                ImageGeometry="{StaticResource CaretLeftGeometry}" 
                                                MoveType="{x:Static proxyStage:AxesMoveTypes.XMinus}" />
                    <localStage:StageMoveButton Grid.Row="1" Height="30" Grid.Column="2" Width="30" ToolTip="X move"
                                                PreviewMouseDown="OnMoveClickDown"
                                                PreviewMouseUp="OnMoveClickUp"
                                                Style="{StaticResource ButtonMoveStyle}" 
                                                ButtonStyle="{StaticResource NormalImageButton}"  
                                                ImageGeometry="{StaticResource CaretRightGeometry}" 
                                                MoveType="{x:Static proxyStage:AxesMoveTypes.XPlus}" />
                    <localStage:StageMoveButton Grid.Column="1" Width="30" Height="30"  
                                                PreviewMouseDown="OnMoveClickDown"
                                                PreviewMouseUp="OnMoveClickUp"
                                                HorizontalAlignment="Center" ToolTip="Y move" 
                                                Style="{StaticResource ButtonMoveStyle}" 
                                                ButtonStyle="{StaticResource NormalImageButton}" 
                                                ImageGeometry="{StaticResource CaretTopGeometry}" 
                                                MoveType="{x:Static proxyStage:AxesMoveTypes.YPlus}" />
                    <localStage:StageMoveButton Grid.Column="1" Grid.Row="2"  Width="30" Height="30" 
                                                PreviewMouseDown="OnMoveClickDown"
                                                PreviewMouseUp="OnMoveClickUp"
                                                HorizontalAlignment="Center" ToolTip="Y move" 
                                                Style="{StaticResource ButtonMoveStyle}" 
                                                ButtonStyle="{StaticResource NormalImageButton}" 
                                                ImageGeometry="{StaticResource CaretBottomGeometry}" 
                                                MoveType="{x:Static proxyStage:AxesMoveTypes.YMinus}" />

                    <localStage:WaferNavigationControl Grid.Row="1" Grid.Column="1 " Margin="5,5" 
                                                        WaferDimentionalCharac="{Binding WaferDimentionalCharac}"                                                          
                                                        HorizontalAlignment="Center">
                        <localStage:WaferNavigationControl.WaferBorderPen>
                            <Pen Brush="Black" Thickness="2" />
                        </localStage:WaferNavigationControl.WaferBorderPen>
                        <localStage:WaferNavigationControl.CurrentPosBorderPen>
                            <Pen Brush="Red" Thickness="1" />
                        </localStage:WaferNavigationControl.CurrentPosBorderPen>
                    </localStage:WaferNavigationControl>
                </Grid>

                <Grid Margin="23,5,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center">X</TextBlock>
                    <sharedControls:TextBoxUnit x:Name="TextXPosition" Grid.Column="1" Text="{markupextensions:AxesViewModelBinding Path=Position.X, StringFormat='{}{0:F3}', Mode=OneWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Style="{StaticResource MoveTextBoxStyle}" Unit="mm">
                        <sharedControls:TextBoxUnit.InputBindings>
                            <KeyBinding Command="{markupextensions:AxesViewModelBinding MoveX}" Key="Enter" CommandParameter="{Binding ElementName=TextXPosition, Path=Text, Converter={converters:StringToDoubleConverter}}" />
                        </sharedControls:TextBoxUnit.InputBindings>
                    </sharedControls:TextBoxUnit>
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="20,0,0,0">Y</TextBlock>
                    <sharedControls:TextBoxUnit Grid.Column="3" x:Name="TextYPosition" Text="{markupextensions:AxesViewModelBinding Path=Position.Y, StringFormat='{}{0:F3}'}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Style="{StaticResource MoveTextBoxStyle}" Unit="mm">
                        <sharedControls:TextBoxUnit.InputBindings>
                            <KeyBinding Command="{markupextensions:AxesViewModelBinding MoveY}" Key="Enter" CommandParameter="{Binding ElementName=TextYPosition, Path=Text, Converter={converters:StringToDoubleConverter}}" />
                        </sharedControls:TextBoxUnit.InputBindings>
                    </sharedControls:TextBoxUnit>
                </Grid>
                <Grid Margin="23,5,0,0" HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            Margin="5 0 0 0"
                            Padding="7"
                            Content="Manual Load"
                            Command="{markupextensions:AxesViewModelBinding Path=GoToManualLoad}"/>
                    <Button Grid.Column="1"
                            Margin="5 0 0 0"
                            Padding="7"
                            Content="Home"
                            Command="{markupextensions:AxesViewModelBinding Path=GotoHome}"/>
                </Grid>

            </StackPanel>
            <Grid Margin="20,20,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"  Visibility="{markupextensions:ChuckViewModelBinding Status.IsWaferClamped, Converter={converters:BooleanToVisibilityConverter}}" Width="100">Wafer clamped</TextBlock>
                <TextBlock Grid.Column="0"  Visibility="{markupextensions:ChuckViewModelBinding Status.IsWaferClamped, Converter={converters:InvertedBooleanToVisibilityConverter}}" Width="100">Wafer unclamped</TextBlock>
                <ToggleButton Grid.Column="1" x:Name="ToggleBtnClamp" Margin="5 0 0 0"			                   			                                               							      
                  Style="{StaticResource ToggleAnimatedSwitchNew}"
                  Command="{markupextensions:ChuckViewModelBinding ChangeClampStatus}"
                  ToolTip="Manage vacuum (check if wafer is present)"
                  HorizontalAlignment="Left"
                  IsChecked="{markupextensions:ChuckViewModelBinding Status.IsWaferClamped, Mode=OneWay}"/>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
