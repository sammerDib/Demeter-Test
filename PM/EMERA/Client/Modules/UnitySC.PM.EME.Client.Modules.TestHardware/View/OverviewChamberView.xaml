<UserControl x:Class="UnitySC.PM.EME.Client.Modules.TestHardware.View.OverviewChamberView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:vm="clr-namespace:UnitySC.PM.EME.Client.Modules.TestHardware.ViewModel"
             xmlns:extensions="clr-namespace:UnitySC.PM.EME.Client.Controls.Extensions;assembly=UnitySC.PM.EME.Client.Controls"
             xmlns:extensions1="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1200" d:DataContext="{d:DesignInstance Type=vm:OverviewChamberVM}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- New Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid Background="White"
      Margin="5,0,5,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <sharedControls:ImageGroupBox sharedControls:ImageGroupBox.ImageGeometryBrush="{StaticResource HighLightBrush}" Grid.Row="0" Grid.Column="0" Header="Status" Margin="4">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border Grid.RowSpan="2"
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Slit door" /></TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="5">
                    <Run Text="Position" /></TextBlock>
                    <TextBox Grid.Column="2" Grid.Row="0" Margin="5" Grid.RowSpan="2" TextAlignment="Center" MaxLength="10" 
                         IsReadOnly="True" Height="30" VerticalContentAlignment="Center" 
                         Text="{Binding ChamberVM.SlitDoorPosition, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.SlitDoorPosition}" Value="Open">
                                        <Setter Property="Background" Value="LightSalmon" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.SlitDoorPosition}" Value="Close">
                                        <Setter Property="Background" Value="LightGreen" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.SlitDoorPosition}" Value="Unknown">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.SlitDoorPosition}" Value="Error">
                                        <Setter Property="Background" Value="LightCoral" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    
                    <Border Grid.Row="1" Grid.Column="4"
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,2,0,2"
                        VerticalAlignment="Bottom">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Application" /></TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center"
                           Grid.Row="1"
                           Grid.Column="5"
                           Margin="5"><Run Text="Mode" /></TextBlock>
                    <TextBox Grid.Column="6"
                         Grid.Row="1"
                         Margin="5"                         
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.IsInMaintenance, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.IsInMaintenance}" Value="Run">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.IsInMaintenance}" Value="Maintenance">
                                        <Setter Property="Background" Value="LightYellow"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Border Grid.RowSpan="3" Grid.Column="0" Grid.Row="2"
                            Background="{StaticResource PanelBorderColorBrush}"
                            BorderThickness="0,5,2,5"
                            BorderBrush="{StaticResource PanelBorderColorBrush}"
                            Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Safety" /></TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="2"
                           Grid.Column="1"
                           Margin="5"><Run Text="Sate" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="2"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.SafetyState, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.SafetyState}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.SafetyState}" Value="False">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="3"
                           Grid.Column="1"
                           Margin="5"><Run Text="Processed" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="3"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.SafetyProcessed, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.SafetyProcessed}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.SafetyProcessed}" Value="False">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="4"
                           Grid.Column="1"
                           Margin="5"><Run Text="Error" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="4"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.SafetyError, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.SafetyError}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.SafetyError}" Value="False">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>


                    <Border Grid.RowSpan="3" Grid.Row="2" Grid.Column="4"
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Sensor" /></TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center"
                           Grid.Row="3"
                           Grid.Column="5"
                           Margin="5"><Run Text="Distance" /></TextBlock>
                    <TextBox Grid.Column="6"
                         Grid.Row="3"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding DistanceSensorVM.DistanceSensorHeight, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DistanceSensorVM.DistanceSensorHeight}" Value="">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    
                    <Border Grid.RowSpan="4" Grid.Column="0" Grid.Row="5"
                            Background="{StaticResource PanelBorderColorBrush}"
                            BorderThickness="0,5,2,5"
                            BorderBrush="{StaticResource PanelBorderColorBrush}"
                            Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="-90" />
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                            <Run Text="Chiller" />
                        </TextBlock>
                    </Border>
                    
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="5"
                               Grid.Column="1"
                               Margin="5"><Run Text="Speed" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="5"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.FanSpeedPercent, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="6"
                               Grid.Column="1"
                               Margin="5"><Run Text="Compression" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="6"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.Compression, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="7"
                               Grid.Column="1"
                               Margin="5"><Run Text="Temperature" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="7"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.Temperature, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="8"
                               Grid.Column="1"
                               Margin="5"><Run Text="Constant fan speed mode " /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="8"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.ConstFanSpeedMode, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                    
                    <Border Grid.RowSpan="3" Grid.Column="4" Grid.Row="5"
                            Background="{StaticResource PanelBorderColorBrush}"
                            BorderThickness="0,5,2,5"
                            BorderBrush="{StaticResource PanelBorderColorBrush}"
                            Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Leak Detector" /></TextBlock>
                    </Border>
                    
                    
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="6"
                               Grid.Column="5"
                               Margin="5"><Run Text="Leak detector" /></TextBlock>
                    <TextBox Grid.Column="6"
                             Grid.Row="6"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.Leak, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                </Grid>
            </sharedControls:ImageGroupBox>

            <sharedControls:ImageGroupBox sharedControls:ImageGroupBox.ImageGeometryBrush="{StaticResource HighLightBrush}" Grid.Row="0" Grid.Column="1" Header="Interlocks" Margin="4">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3"
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Interlocks panel" /></TextBlock>
                    </Border>

                    <ListView  Grid.RowSpan="3"
                    Grid.Row="0"
                    Grid.Column="1"
                    ItemsSource="{Binding ChamberVM.InterlockPanels}"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    BorderThickness="0">
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Border
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            Background="{TemplateBinding Background}">
                                                <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView x:Name="GridView">
                                <!--  Description  -->
                                <GridViewColumn Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center"
                                               Margin="5"
                                               Text="{Binding Value.Description}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <!--  State  -->
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="5"
                                                 TextAlignment="Center"
                                                 MaxLength="10"
                                                 IsReadOnly="True"
                                                 Width="120"
                                                 Height="30"
                                                 VerticalContentAlignment="Center"
                                                 Text="{Binding Value.StateValue}">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Value.StateValue}" Value="Closed">
                                                                <Setter Property="Background" Value="LightGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Value.StateValue}" Value="Opened">
                                                                <Setter Property="Background" Value="LightCoral"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <Border Grid.RowSpan="3" Grid.Row="0" Grid.Column="3"
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Interlocks EFEM" /></TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center"
                           Grid.Row="0"
                           Grid.Column="4"
                           Margin="5"><Run Text="Arm extended enable" /></TextBlock>
                    <TextBox Grid.Column="5"
                         Grid.Row="0"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.InterlockEfemArmExtendedEnable, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.InterlockEfemArmExtendedEnable}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.InterlockEfemArmExtendedEnable}" Value="False">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                           Grid.Row="1"
                           Grid.Column="4"
                           Margin="5"><Run Text="Slit door open" /></TextBlock>
                    <TextBox Grid.Column="5"
                         Grid.Row="1"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.InterlockEfemSlitDoor, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.InterlockEfemSlitDoor}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.InterlockEfemSlitDoor}" Value="False">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="2"
                               Grid.Column="4"
                               Margin="5"><Run Text="Chuck is in loading position" /></TextBlock>
                    <TextBox Grid.Column="5"
                        Grid.Row="2"
                        Margin="5"
                        TextAlignment="Center"
                        MaxLength="10"
                        IsReadOnly="True"
                        Height="30"
                        VerticalContentAlignment="Center"
                        Text="{Binding ChuckVM.InterlockEfemChuckIsInLoadingPosition, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChuckVM.InterlockEfemChuckIsInLoadingPosition}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChuckVM.InterlockEfemChuckIsInLoadingPosition}" Value="False">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Border Grid.RowSpan="1" Grid.Row="3" Grid.Column="3"
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,2,0,2">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Robot arm" /></TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center"
                           Grid.Row="3"
                           Grid.Column="4"
                           Margin="5"><Run Text="Extended" /></TextBlock>
                    <TextBox Grid.Column="5"
                         Grid.Row="3"
                         Margin="5"
                         TextAlignment="Center"
                         MaxLength="10"
                         IsReadOnly="True"
                         Height="30"
                         VerticalContentAlignment="Center"
                         Text="{Binding ChamberVM.ArmNotExtended, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ChamberVM.ArmNotExtended}" Value="True">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChamberVM.ArmNotExtended}" Value="False">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                </Grid>
            </sharedControls:ImageGroupBox>

            <sharedControls:ImageGroupBox sharedControls:ImageGroupBox.ImageGeometryBrush="{StaticResource HighLightBrush}" Grid.Row="1" Grid.Column="0" Header="Manual operations" Margin="4">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="1" Grid.Row="0"
                    Background="{StaticResource PanelBorderColorBrush}"
                    BorderThickness="0,5,2,5"
                    BorderBrush="{StaticResource PanelBorderColorBrush}"
                    Margin="0,0,0,5">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="Slit door" /></TextBlock>
                    </Border>
                    <controls:IOImageToggleButtons Grid.Row="0" Grid.Column="1"  Label="Move" LeftButtonContent="Open" 
                           LeftButtonImageGeometry="{StaticResource ArrowSquareUpSolidGeometry}"
                           LeftButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                           LeftButtonCommand="{Binding ChamberVM.SlitDoorOpenCommand}"
                           IsIOStatusMatchingLeftButton="{Binding ChamberVM.SlitDoorOpenSelected}"
                           RightButtonContent="Close" 
                           RightButtonImageGeometry="{StaticResource ArrowSquareDownSolidGeometry}"
                           RightButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                           RightButtonCommand="{Binding ChamberVM.SlitDoorCloseCommand}"/>

                    <Border Grid.RowSpan="2" Grid.Column="0" Grid.Row="1"
                            Background="{StaticResource PanelBorderColorBrush}"
                            BorderThickness="0,5,2,5"
                            BorderBrush="{StaticResource PanelBorderColorBrush}"
                            Margin="0,0,0,5">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform><Run Text="PLC" /></TextBlock>
                    </Border>
                    <controls:IOImageToggleButtons Grid.Row="1" Grid.Column="1" Label="Restart program"
                                                   LeftButtonContent="Run"
                                                   LeftButtonVisibility="Hidden"
                                                   LeftButtonImageGeometry="{StaticResource PlaySolidGeometry}"
                                                   LeftButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                                                   LeftButtonCommand="{Binding}"
                                                   IsIOStatusMatchingLeftButton="{Binding}"
                                                   RightButtonContent="Run"
                                                   RightButtonImageGeometry="{StaticResource ReplayGeometry}"
                                                   RightButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                                                   RightButtonCommand="{Binding PlcVM.RestartCommand}" />

                    <controls:IOImageToggleButtons Grid.Row="2" Grid.Column="1" Label="Reboot PC"
                                                   LeftButtonContent="Run"
                                                   LeftButtonVisibility="Hidden"
                                                   LeftButtonImageGeometry="{StaticResource PlaySolidGeometry}"
                                                   LeftButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                                                   LeftButtonCommand="{Binding}"
                                                   IsIOStatusMatchingLeftButton="{Binding}"
                                                   RightButtonContent="Run"
                                                   RightButtonImageGeometry="{StaticResource ReplayGeometry}"
                                                   RightButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                                                   RightButtonCommand="{Binding PlcVM.RebootCommand}" />
                    
                    <Border Grid.RowSpan="5" Grid.Column="0" Grid.Row="3"
                            Background="{StaticResource PanelBorderColorBrush}"
                            BorderThickness="0,5,2,5"
                            BorderBrush="{StaticResource PanelBorderColorBrush}"
                            Margin="0,0,0,5">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="-90" />
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                            <Run Text="Chiller" />
                        </TextBlock>
                    </Border>
                    
                    <controls:IOImageToggleButtons Grid.Row="3" Grid.Column="1" Label="Reset"
                                                   LeftButtonContent="Run"
                                                   LeftButtonVisibility="Hidden"
                                                   LeftButtonImageGeometry="{StaticResource PlaySolidGeometry}"
                                                   LeftButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                                                   LeftButtonCommand="{Binding}"
                                                   IsIOStatusMatchingLeftButton="{Binding}"
                                                   RightButtonContent="Run"
                                                   RightButtonImageGeometry="{StaticResource ReplayGeometry}"
                                                   RightButtonImageGeometryBrush="{StaticResource HighLightBrush}"
                                                   RightButtonCommand="{Binding ChillerViewModel.ResetCommand}" />
                    
                    <Grid Grid.Row="4" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
    
                        <Label Grid.Column="0" Margin="5,5,0,5"
                               Content="Speed" 
                               VerticalAlignment="Center" 
                               Foreground="{StaticResource TextboxTextBrush}" />
    
                        <Slider Grid.Column="2" 
                                Margin="10"
                                Width="165"
                                Minimum="0" Maximum="100"
                                IsSnapToTickEnabled="True" 
                                TickFrequency="10"
                                Value="{Binding Path=ChillerViewModel.FanSpeedPercentSliderValue}"
                                extensions:SliderExtension.DragCompletedCommand="{Binding ChillerViewModel.ChangeSpeed}" />
    
                        <controls:TextBoxUnit Grid.Column="3"
                                              Unit="%"
                                              Text="{Binding ChillerViewModel.FanSpeedPercentSliderValue, UpdateSourceTrigger=PropertyChanged}"
                                              extensions1:TextBoxMaskExt.Mask="PositiveDecimal"
                                              extensions1:TextBoxMaskExt.MaximumValue="100"
                                              extensions1:TextBoxMaskExt.MinimumValue="0">
                            <controls:TextBoxUnit.InputBindings>
                                <KeyBinding Command="{Binding ChillerViewModel.ChangeSpeed}" Key="Return" />
                                <KeyBinding Command="{Binding ChillerViewModel.ChangeSpeed}" Key="Enter" />
                            </controls:TextBoxUnit.InputBindings>
                        </controls:TextBoxUnit>
                    </Grid>
                    
                    <Grid Grid.Row="5" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
    
                        <Label Grid.Column="0" Margin="5,5,0,5"
                               Content="Compression" 
                               VerticalAlignment="Center" 
                               Foreground="{StaticResource TextboxTextBrush}" />
    
                        <Slider Grid.Column="2" 
                                Margin="10"
                                Width="165"
                                Minimum="0" Maximum="100"
                                IsSnapToTickEnabled="True" 
                                TickFrequency="10"
                                Value="{Binding Path=ChillerViewModel.CompressionPercentSliderValue}"
                                extensions:SliderExtension.DragCompletedCommand="{Binding ChillerViewModel.ChangeCompression}" />
    
                        <controls:TextBoxUnit Grid.Column="3"
                                              Unit="%"
                                              Text="{Binding ChillerViewModel.CompressionPercentSliderValue, UpdateSourceTrigger=PropertyChanged}"
                                              extensions1:TextBoxMaskExt.Mask="PositiveDecimal"
                                              extensions1:TextBoxMaskExt.MaximumValue="100"
                                              extensions1:TextBoxMaskExt.MinimumValue="0">
                            <controls:TextBoxUnit.InputBindings>
                                <KeyBinding Command="{Binding ChillerViewModel.ChangeCompression}" Key="Return" />
                                <KeyBinding Command="{Binding ChillerViewModel.ChangeCompression}" Key="Enter" />
                            </controls:TextBoxUnit.InputBindings>
                        </controls:TextBoxUnit>
                    </Grid>
                    
                    <Grid Grid.Row="6" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
    
                        <Label Grid.Column="0" Margin="5,5,0,5"
                               Content="Temperature" 
                               VerticalAlignment="Center" 
                               Foreground="{StaticResource TextboxTextBrush}" />
    
                        <Slider Grid.Column="2" 
                                Margin="10"
                                Width="165"
                                Minimum="15" Maximum="30"
                                IsSnapToTickEnabled="True" 
                                TickFrequency="1"
                                Value="{Binding Path=ChillerViewModel.TemperatureSliderValue}"
                                extensions:SliderExtension.DragCompletedCommand="{Binding ChillerViewModel.ChangeTemperature}" />
    
                        <controls:TextBoxUnit Grid.Column="3"
                                              Unit="C"
                                              Text="{Binding ChillerViewModel.TemperatureSliderValue, UpdateSourceTrigger=PropertyChanged}"
                                              extensions1:TextBoxMaskExt.Mask="PositiveDecimal"
                                              extensions1:TextBoxMaskExt.MaximumValue="30"
                                              extensions1:TextBoxMaskExt.MinimumValue="15">
                            <controls:TextBoxUnit.InputBindings>
                                <KeyBinding Command="{Binding ChillerViewModel.ChangeTemperature}" Key="Return" />
                                <KeyBinding Command="{Binding ChillerViewModel.ChangeTemperature}" Key="Enter" />
                            </controls:TextBoxUnit.InputBindings>
                        </controls:TextBoxUnit>
                    </Grid>
                    
                    <controls:IOImageToggleButtons Grid.Row="7" Grid.Column="1"  Label="Constant fan Speed Mode" LeftButtonContent="Enable"
                                                   LeftButtonCommand="{Binding ChillerViewModel.EnableFanSpeedModeCommand}"
                                                   IsIOStatusMatchingLeftButton="{Binding ChillerViewModel.ConstantFanSpeedSelected}"
                                                   RightButtonContent="Disable"
                                                   RightButtonCommand="{Binding ChillerViewModel.DisableFanSpeedModeCommand}"/>
                </Grid>
            </sharedControls:ImageGroupBox>

            <sharedControls:ImageGroupBox sharedControls:ImageGroupBox.ImageGeometryBrush="{StaticResource HighLightBrush}" Grid.Row="1" Grid.Column="1" Header="Maintenance information" Margin="4">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border
                        Background="{StaticResource PanelBorderColorBrush}"
                        BorderThickness="0,5,2,5"
                        BorderBrush="{StaticResource PanelBorderColorBrush}"
                        Margin="0,0,0,5">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                            <Run Text="PLC" />
                        </TextBlock>
                    </Border>
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="0" Grid.Column="1"
                               Margin="5">
                        <Run Text="AMS NetId" />
                    </TextBlock>
                    <TextBox Grid.Row="0" Grid.Column="2"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding PlcVM.GetAmsNetId, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PlcVM.GetAmsNetId}" Value="">
                                        <Setter Property="Background" Value="LightGreen" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlcVM.GetAmsNetId}" Value=" ">
                                        <Setter Property="Background" Value="LightYellow" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    
                    <Border Grid.RowSpan="3" Grid.Column="0" Grid.Row="1"
                            Background="{StaticResource PanelBorderColorBrush}"
                            BorderThickness="0,5,2,5"
                            BorderBrush="{StaticResource PanelBorderColorBrush}"
                            Margin="0,0,0,5">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.LayoutTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="-90" />
                                </TransformGroup>
                            </TextBlock.LayoutTransform>
                            <Run Text="Chiller" />
                        </TextBlock>
                    </Border>
                    
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="1"
                               Grid.Column="1"
                               Margin="5"><Run Text="Chiller Mode" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="1"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.Mode, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    
                    <controls:IOImageToggleButtons Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Label="Chiller Mode" LeftButtonContent="Standalone"
                                                   LeftButtonCommand="{Binding ChillerViewModel.SetStandAloneModeCommand}"
                                                   IsIOStatusMatchingLeftButton="{Binding ChillerViewModel.StandaloneModeSelected}"
                                                   RightButtonContent="Remote"
                                                   RightButtonCommand="{Binding ChillerViewModel.SetRemoteModeCommand}"/>
                    
                    <TextBlock VerticalAlignment="Center"
                               Grid.Row="3"
                               Grid.Column="1"
                               Margin="5"><Run Text="Alarms" /></TextBlock>
                    <TextBox Grid.Column="2"
                             Grid.Row="3"
                             Margin="5"
                             TextAlignment="Center"
                             MaxLength="10"
                             IsReadOnly="True"
                             Height="30"
                             VerticalContentAlignment="Center"
                             Text="{Binding ChillerViewModel.Alarms, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </Grid>
            </sharedControls:ImageGroupBox>
        </Grid>
    </ScrollViewer>
</UserControl>
