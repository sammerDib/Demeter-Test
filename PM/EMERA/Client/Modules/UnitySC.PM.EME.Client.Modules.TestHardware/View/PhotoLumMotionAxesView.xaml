<UserControl x:Class="UnitySC.PM.EME.Client.Modules.TestHardware.View.PhotoLumMotionAxesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sharedExtensions="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
             xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:stage="clr-namespace:UnitySC.PM.EME.Client.Proxy.Axes;assembly=UnitySC.PM.EME.Client.Proxy"
             xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
             xmlns:vm="clr-namespace:UnitySC.PM.EME.Client.Modules.TestHardware.ViewModel"
             xmlns:sharedReferentials="clr-namespace:UnitySC.PM.Shared.Referentials.Interface;assembly=UnitySC.PM.Shared.Referentials.Interface"
             xmlns:converter="clr-namespace:UnitySC.PM.EME.Client.Shared.Converter;assembly=UnitySC.PM.EME.Client.Shared"
             mc:Ignorable="d"
             d:DesignHeight="650" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=vm:PhotoLumMotionAxesViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="CustomXTextBoxUnitStyle" TargetType="sharedControls:TextBoxUnit" BasedOn="{StaticResource {x:Type sharedControls:TextBoxUnit}}">
                <Setter Property="Background" Value="White" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsXLimitReached}" Value="True">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomYTextBoxUnitStyle" TargetType="sharedControls:TextBoxUnit" BasedOn="{StaticResource {x:Type sharedControls:TextBoxUnit}}">
                <Setter Property="Background" Value="White" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsYLimitReached}" Value="True">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomZTextBoxUnitStyle" TargetType="sharedControls:TextBoxUnit" BasedOn="{StaticResource {x:Type sharedControls:TextBoxUnit}}">
                <Setter Property="Background" Value="White" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsZLimitReached}" Value="True">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10,10,5,0" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" Grid.Column="0"
                  Width="auto"
                  Margin="5"
                  FontSize="18"
                  Header="Axes Controls">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0"
                            Orientation="Horizontal"
                            Margin="0,5">
                    <TextBlock FontSize="16" Margin="5" Text="Referentials:" VerticalAlignment="Center" HorizontalAlignment="Left" />
                    <ComboBox MaxWidth="200"
                              Margin="6" VerticalAlignment="Center"
                              ItemsSource="{Binding ReferentialTags}"
                              SelectedItem="{Binding SelectedReferentialTag,Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Grid.Row="1"
                            Orientation="Horizontal"
                            Margin="0,5"
                            HorizontalAlignment="Center">
                    <TextBlock FontSize="16"
                               Margin="5"
                               Text="X:" />
                    <sharedControls:ImageButton Width="30"
                                                Margin="5,0"
                                                Command="{Binding AxesVM.IncrementalMove}"
                                                ImageGeometry="{StaticResource ChevronLeftGeometry}"
                                                ImageGeometryBrush="{StaticResource IconsColor}"
                                                Visibility="{Binding SelectedReferentialTag, Mode=OneWay, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedReferentials:ReferentialTag.Motor}}">
                        <Button.CommandParameter>
                            <stage:Increment Axis="X" Step="-10" />
                        </Button.CommandParameter>
                    </sharedControls:ImageButton>
                    <sharedControls:TextBoxUnit x:Name="TextPositionX"
                                                Style="{StaticResource CustomXTextBoxUnitStyle}"
                                                HorizontalContentAlignment="Right"
                                                Width="80"
                                                Text="{Binding PositionTarget.X, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:F2}', Mode=OneWay}"
                                                Unit="mm">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter"
                                        Command="{Binding MoveX}"
                                        CommandParameter="{Binding ElementName=TextPositionX, Path=Text, Converter={converters:StringToDoubleConverter}}" />
                        </TextBox.InputBindings>
                    </sharedControls:TextBoxUnit>
                    <sharedControls:ImageButton Width="30"
                                                Margin="5,0"
                                                Command="{Binding AxesVM.IncrementalMove}"
                                                ImageGeometry="{StaticResource ChevronRightGeometry}"
                                                ImageGeometryBrush="{StaticResource IconsColor}"
                                                Visibility="{Binding SelectedReferentialTag, Mode=OneWay, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedReferentials:ReferentialTag.Motor}}">
                        <Button.CommandParameter>
                            <stage:Increment Axis="X" Step="10" />
                        </Button.CommandParameter>
                    </sharedControls:ImageButton>
                </StackPanel>

                <StackPanel Grid.Row="2"
                            Orientation="Horizontal"
                            Margin="0,5"
                            HorizontalAlignment="Center">
                    <TextBlock FontSize="16"
                               Margin="5"
                               Text="Y:" />
                    <sharedControls:ImageButton Width="30"
                                                Margin="5,0"
                                                Command="{Binding AxesVM.IncrementalMove}"
                                                ImageGeometry="{StaticResource ChevronLeftGeometry}"
                                                ImageGeometryBrush="{StaticResource IconsColor}"
                                                Visibility="{Binding SelectedReferentialTag, Mode=OneWay, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedReferentials:ReferentialTag.Motor}}">
                        <Button.CommandParameter>
                            <stage:Increment Axis="Y" Step="-10" />
                        </Button.CommandParameter>
                    </sharedControls:ImageButton>
                    <sharedControls:TextBoxUnit x:Name="TextPositionY"
                                                Style="{StaticResource CustomYTextBoxUnitStyle}"
                                                HorizontalContentAlignment="Right"
                                                Width="80"
                                                Text="{Binding PositionTarget.Y, StringFormat='{}{0:F2}', Mode=OneWay}"
                                                Unit="mm">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter"
                                        Command="{Binding MoveY}"
                                        CommandParameter="{Binding ElementName=TextPositionY, Path=Text, Converter={converters:StringToDoubleConverter}}" />
                        </TextBox.InputBindings>
                    </sharedControls:TextBoxUnit>
                    <sharedControls:ImageButton Width="30"
                                                Margin="5,0"
                                                Command="{Binding AxesVM.IncrementalMove}"
                                                ImageGeometry="{StaticResource ChevronRightGeometry}"
                                                ImageGeometryBrush="{StaticResource IconsColor}"
                                                Visibility="{Binding SelectedReferentialTag, Mode=OneWay, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedReferentials:ReferentialTag.Motor}}">
                        <Button.CommandParameter>
                            <stage:Increment Axis="Y" Step="10" />
                        </Button.CommandParameter>
                    </sharedControls:ImageButton>
                </StackPanel>

                <StackPanel Grid.Row="3"
                            Orientation="Horizontal"
                            Margin="0,5"
                            HorizontalAlignment="Center">
                    <TextBlock FontSize="16"
                               Margin="5"
                               Text="Z:" />
                    <sharedControls:ImageButton Width="30"
                                                Margin="5,0"
                                                Command="{Binding AxesVM.IncrementalMove}"
                                                ImageGeometry="{StaticResource ChevronLeftGeometry}"
                                                ImageGeometryBrush="{StaticResource IconsColor}"
                                                Visibility="{Binding SelectedReferentialTag, Mode=OneWay, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedReferentials:ReferentialTag.Motor}}">
                        <Button.CommandParameter>
                            <stage:Increment Axis="Z" Step="-1" />
                        </Button.CommandParameter>
                    </sharedControls:ImageButton>
                    <sharedControls:TextBoxUnit x:Name="TextPositionZ"
                                                Style="{StaticResource CustomZTextBoxUnitStyle}"
                                                HorizontalContentAlignment="Right"
                                                Width="80"
                                                Text="{Binding PositionTarget.Z, StringFormat='{}{0:F2}', Mode=OneWay}"
                                                Unit="mm">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter"
                                        Command="{Binding MoveZ}"
                                        CommandParameter="{Binding ElementName=TextPositionZ, Path=Text, Converter={converters:StringToDoubleConverter}}" />
                        </TextBox.InputBindings>
                    </sharedControls:TextBoxUnit>
                    <sharedControls:ImageButton Width="30"
                                                Margin="5,0"
                                                Command="{Binding AxesVM.IncrementalMove}"
                                                ImageGeometry="{StaticResource ChevronRightGeometry}"
                                                ImageGeometryBrush="{StaticResource IconsColor}"
                                                Visibility="{Binding SelectedReferentialTag, Mode=OneWay, Converter={converters:EnumToVisibilityConverter}, ConverterParameter={x:Static sharedReferentials:ReferentialTag.Motor}}">
                        <Button.CommandParameter>
                            <stage:Increment Axis="Z" Step="1" />
                        </Button.CommandParameter>
                    </sharedControls:ImageButton>
                </StackPanel>

                <StackPanel Grid.Row="4"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button Margin="5"
                            Padding="5"
                            Width="80"
                            Content="EFEM Load"
                            Command="{Binding AxesVM.GoToEfemLoad}" />
                    <Button Margin="5"
                            Padding="5"
                            Width="90"
                            Content="Manual Load"
                            Command="{Binding AxesVM.GoToManualLoad}" />
                    <Button Margin="5"
                            Padding="5"
                            Width="50"
                            Content="Home"
                            Command="{Binding AxesVM.GotoHome}" />
                </StackPanel>

                <Button Grid.Row="5" Margin="5"
                        Padding="5"
                        Width="120"
                        Content="Stop all moves"
                        Command="{Binding AxesVM.Stop}" />
                
                <StackPanel Grid.Row="6" Orientation="Horizontal">
                    <TextBlock FontSize="16"
                               Margin="8,10,7,10"
                               Text="Enabled" />
                    <Image Width="30" Height="30"
                           sharedExtensions:ImageExt.SourceGeometry="{StaticResource PlugCnnectGeometry}"
                           sharedExtensions:ImageExt.GeometryBrush="Green"
                           Style="{StaticResource Icon}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Visibility="{Binding AxesVM.Status.IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Image Width="30" Height="30"
                           sharedExtensions:ImageExt.SourceGeometry="{StaticResource PlugDisconnectGeometry}"
                           sharedExtensions:ImageExt.GeometryBrush="Red"
                           Style="{StaticResource Icon}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Visibility="{Binding AxesVM.Status.IsEnabled, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />

                    <TextBlock FontSize="16"
                               Margin="10"
                               Text="Moving" />
                    <Image Width="30" Height="30"
                           sharedExtensions:ImageExt.SourceGeometry="{StaticResource RepeatGeometry}"
                           sharedExtensions:ImageExt.GeometryBrush="Green"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Visibility="{Binding AxesVM.Status.IsMoving, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image.RenderTransform>
                            <RotateTransform Angle="0"
                                             CenterX="15"
                                             CenterY="15" />
                        </Image.RenderTransform>
                        <Image.Style>
                            <Style TargetType="Image" BasedOn="{StaticResource Icon}">
                                <Style.Triggers>
                                    <Trigger Property="IsVisible"
                                             Value="true">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="startRotate">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                                     From="0"
                                                                     To="360"
                                                                     Duration="0:0:1"
                                                                     RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="startRotate" />
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Width="30" Height="30"
                           sharedExtensions:ImageExt.SourceGeometry="{StaticResource RepeatGeometry}"
                           sharedExtensions:ImageExt.GeometryBrush="Red"
                           Style="{StaticResource Icon}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Visibility="{Binding AxesVM.Status.IsMoving, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                </StackPanel>
                <StackPanel Grid.Row="7" Orientation="Vertical" Margin="8,10">
                    <TextBlock Text="current position:" Margin="0 0 10 0" VerticalAlignment="Center" FontSize="16" />
                    <TextBlock FontSize="14"
                               Margin="5,0"
                               Text="{Binding CurrentPosition.X, StringFormat='X : {0:F3} mm'}"
                               VerticalAlignment="Center" />
                    <TextBlock FontSize="14"
                               Margin="5,0"
                               Text="{Binding CurrentPosition.Y, StringFormat='Y : {0:F3} mm'}"
                               VerticalAlignment="Center" />
                    <TextBlock FontSize="14"
                               Margin="5,0"
                               Text="{Binding CurrentPosition.Z, StringFormat='Z : {0:F3} mm'}"
                               VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
        </GroupBox>
        
        <GroupBox Grid.Row="1" Grid.Column="0"
                  Width="auto"
                  Margin="5"
                  FontSize="18"
                  Header="Chuck Controls">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="Wafer Category:" Margin="5" />
                    <ComboBox MaxWidth="200"
                              Margin="5"
                              ItemsSource="{Binding ChuckVM.WaferCategories}"
                              SelectedItem="{Binding ChuckVM.SelectedWaferCategory,Mode=TwoWay}"
                              IsEnabled="{Binding AxesVM.IsReadyToStartMove}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <Button Grid.Row="1" Margin="5"
                        Padding="5"
                        Width="120"
                        Content="Clamp/Unclamp"
                        Command="{Binding ChuckVM.ChangeClampStatus}" />
                
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <TextBlock Margin="5"
                               FontSize="14"
                               Text="Clamp Status:"
                               VerticalAlignment="Center" />
                    <TextBlock Text="Clamped"
                               FontSize="14"
                               Padding="5"
                               Visibility="{Binding ChuckVM.Status.IsWaferClamped, Converter={converters:BooleanToVisibilityConverter}}" />
                    <TextBlock Text="Unclamped"
                               FontSize="14"
                               Padding="5"
                               Visibility="{Binding ChuckVM.Status.IsWaferClamped, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
                </StackPanel>

                <StackPanel Grid.Row="3" Orientation="Horizontal">
                    <TextBlock Margin="5"
               FontSize="14"
               Text="Wafer Status:"
               VerticalAlignment="Center" />
                    <TextBlock Text="Present"
               FontSize="14"
               Padding="5"
               Visibility="{Binding ChuckVM.Status.IsWaferPresent, Converter={converters:BooleanToVisibilityConverter}}" />
                    <TextBlock Text="Not present"
               FontSize="14"
               Padding="5"
               Visibility="{Binding ChuckVM.Status.IsWaferPresent, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
                </StackPanel>
            </Grid>
        </GroupBox>
        
        <sharedControls:ImageGroupBox Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="10"
                                Header="Camera"
                                Image="{StaticResource Camera}"
                                Background="{StaticResource CameraBackground}">
            <Border HorizontalAlignment="Center"
                    Background="{StaticResource CameraBackground}">
                <Image Source="{Binding Image, Converter={converter:ServiceImageToCachedBitmapSourceConverter}}"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" />
            </Border>
        </sharedControls:ImageGroupBox>
    </Grid>
</UserControl>