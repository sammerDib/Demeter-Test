<UserControl x:Class="UnitySC.PM.Shared.UI.Administration.FDC.FDCView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:UnitySC.PM.Shared.UI.Administration.FDC"
             xmlns:controls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"
             xmlns:sharedExtensions="clr-namespace:UnitySC.Shared.UI.Extensions;assembly=UnitySC.Shared.UI"
             xmlns:converters="clr-namespace:UnitySC.Shared.UI.Converters;assembly=UnitySC.Shared.UI"
             xmlns:interfaceFDC="clr-namespace:UnitySC.Shared.Data.FDC;assembly=UnitySC.Shared.Data"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/ImageGeometries.xaml" />
                <!-- New Styles -->
                <ResourceDictionary Source="pack://application:,,,/UnitySC.Shared.UI;component/Styles/UnityStylesNew.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="FDCItemTemplate" DataType="{x:Type local:FDCItemViewModel}">
                <Grid Margin="0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="34"/>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" FontWeight="Normal"  Margin="5,0" Text="{Binding Name}" Visibility="{Binding IsEditing, Converter={converters:InvertedBooleanToVisibilityConverter}}"></TextBlock>
                    <TextBox Grid.Column="1" VerticalAlignment="Center" FontWeight="Normal" Margin="5,0" Text="{Binding Name}" Visibility="{Binding IsEditing, Converter={converters:BooleanToVisibilityConverter}}"></TextBox>
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" FontWeight="Normal"  Margin="5,0" Text="{Binding Value}"></TextBlock>
                    <TextBlock Grid.Column="3" VerticalAlignment="Center" FontWeight="Normal" Margin="5,0" Text="{Binding Unit}" Visibility="{Binding IsEditing, Converter={converters:InvertedBooleanToVisibilityConverter}}"></TextBlock>
                    <TextBox Grid.Column="3" VerticalAlignment="Center" FontWeight="Normal" Margin="5,0" Text="{Binding Unit}" Visibility="{Binding IsEditing, Converter={converters:BooleanToVisibilityConverter}}"></TextBox>
                    <CheckBox Grid.Column="4" IsEnabled="{Binding IsEditing}" IsChecked="{Binding CanInitValue}"></CheckBox>
                    <Grid Grid.Column="5" Visibility="{Binding CanInitValue, Converter={converters:BooleanToVisibilityConverter}}" Margin="5,0">
                        <TextBlock  VerticalAlignment="Center" FontWeight="Normal" Text="{Binding InitValue}" Visibility="{Binding IsEditing, Converter={converters:InvertedBooleanToVisibilityConverter}}"></TextBlock>
                        <TextBox VerticalAlignment="Center" FontWeight="Normal" Text="{Binding InitValue}" Visibility="{Binding IsEditing, Converter={converters:BooleanToVisibilityConverter}}"></TextBox>
                    </Grid>
                    <TextBlock Grid.Column="6" VerticalAlignment="Center" FontWeight="Normal"  Margin="5,0" Text="{Binding SendDate}"></TextBlock>
                    <TextBlock Grid.Column="7" VerticalAlignment="Center" FontWeight="Normal"  Margin="5,0" Text="{Binding ElementName=ComboBoxSendFrequency, Path=Text}" Visibility="{Binding IsEditing, Converter={converters:InvertedBooleanToVisibilityConverter}}"></TextBlock>
                    <ComboBox x:Name="ComboBoxSendFrequency" Grid.Column="7" VerticalAlignment="Center"  Margin="5,0" 
                              SelectedValuePath="Enum"
                              DisplayMemberPath="Translation" 
                              Visibility="{Binding IsEditing, Converter={converters:BooleanToVisibilityConverter}}" 
                              ItemsSource="{sharedExtensions:EnumValuesExtension EnumType=interfaceFDC:FDCSendFrequency, ResourceAssemblyName='UnitySC.PM.Shared.UI'}"
                              SelectedValue="{Binding SendFrequency}"></ComboBox>
                    <CheckBox Grid.Column="8" IsEnabled="{Binding IsEditing}" IsChecked="{Binding CanBeReset}"></CheckBox>

                    <StackPanel Grid.Column="9" Orientation="Horizontal">
                        <controls:ImageButton Width="30" ImageGeometry="{StaticResource ResetGeometry}" ImageGeometryBrush="{StaticResource ImageMainColor}" ToolTip="Reset" Margin="5,0" Command="{Binding ResetFDCCommand}"/>
                        <controls:ImageButton Width="30" ImageGeometry="{StaticResource PencilGeometry}" ImageGeometryBrush="{StaticResource ImageMainColor}" ToolTip="Edit" Margin="5,0" Command="{Binding StartEditCommand}" Visibility="{Binding IsEditing, Converter={converters:InvertedBooleanToVisibilityConverter}}"/>
                        <controls:ImageButton Width="30" ImageGeometry="{StaticResource ValidateGeometry}" ImageGeometryBrush="{StaticResource ImageMainColor}" ToolTip="Validate" Margin="5,0" Command="{Binding StopEditCommand}" Visibility="{Binding IsEditing, Converter={converters:BooleanToVisibilityConverter}}" />
                        <controls:ImageButton Width="30" ImageGeometry="{StaticResource TrashGeometry}" Margin="5,0,0,0" ImageGeometryBrush="{StaticResource ImageErrorColor}" ToolTip="Delete"  Command="{Binding DataContext.DeleteFDCCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding Path=Name}"/>
                    </StackPanel>
                    
                  </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:FDCActorViewModel}">
                <Grid Background="{StaticResource PanelBackgroundBrush}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="34"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <controls:ImageButton Width="30" ImageGeometry="{StaticResource PlusCircleGeometry}" ImageGeometryBrush="{StaticResource ImageMainColor}" ToolTip="Add new FDC" Margin="1" Command="{Binding AddFDCCommand}" VerticalAlignment="Center"/>

                        <TextBlock Grid.Column="1" VerticalAlignment="Center" FontSize="12" Margin="5,0">NAME</TextBlock>
                        <TextBlock Grid.Column="2" VerticalAlignment="Center" FontSize="12" Margin="5,0">VALUE</TextBlock>
                        <TextBlock Grid.Column="3" VerticalAlignment="Center" FontSize="12" Margin="5,0">UNIT</TextBlock>
                        <TextBlock Grid.Column="4" VerticalAlignment="Center" FontSize="12" Margin="5,0">COUNT DOWN</TextBlock>
                        <TextBlock Grid.Column="5" VerticalAlignment="Center" FontSize="12" Margin="5,0">INITIAL VALUE</TextBlock>
                        <TextBlock Grid.Column="6" VerticalAlignment="Center" FontSize="12" Margin="5,0">DATE</TextBlock>
                        <TextBlock Grid.Column="7" VerticalAlignment="Center" FontSize="12" Margin="5,0">FREQUENCY</TextBlock>
                        <TextBlock Grid.Column="8" VerticalAlignment="Center" FontSize="12" Margin="5,0">CAN BE RESET</TextBlock>

                    </Grid>
                    <ListBox Grid.Row="1"  Style="{StaticResource ListBoxWithoutSelection}"  
                       ItemsSource="{Binding FDCItems}"
                       ItemTemplate="{StaticResource FDCItemTemplate}" Margin="5,0,0,0"
                       ScrollViewer.VerticalScrollBarVisibility="Auto"
                       ScrollViewer.HorizontalScrollBarVisibility="Auto"
                       SelectionMode="Single"
                       >

                    </ListBox>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,40,5">
                        <controls:ImageButton ImageGeometry="{StaticResource SaveGeometry}" ImageGeometryBrush="{StaticResource HighlightButtonForegroundBrush}"  Style="{StaticResource HighlightedImageButton}" ToolTip="Save FDC Configuration" Margin="1" Command="{Binding SaveFDCsConfigCommand}" VerticalAlignment="Center" Content="SAVE FDC CONFIGURATION"/>
                    </StackPanel>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="WhiteSmoke">
        <TabControl ItemsSource="{Binding FDCActorViewModels}" DisplayMemberPath="ActorName" Style="{StaticResource TabControlTopUniformStyle }">
       

    </TabControl>
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}" d:IsHidden="true" BusyContent="{Binding BusyMessage}" DisplayAfter="0" />

    </Grid>
</UserControl>