<UserControl
	x:Class="UnitySC.GUI.Common.Vendor.Views.Panels.Maintenance.Scenarios.Library.ScenarioLibraryPanelView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:Agileo.Recipes.Components;assembly=Agileo.Recipes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:scenarios="clr-namespace:UnitySC.GUI.Common.Vendor.Views.Panels.Maintenance.Scenarios"
	xmlns:localize="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions.Localize"
	xmlns:library="clr-namespace:UnitySC.GUI.Common.Vendor.Views.Panels.Maintenance.Scenarios.Library"
	xmlns:controls="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Controls"
	xmlns:dependencyObjects="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions"
	xmlns:deviceCommand="clr-namespace:UnitySC.GUI.Common.Vendor.Recipes.Instructions.DeviceCommand"
	xmlns:waitStatusThreshold="clr-namespace:UnitySC.GUI.Common.Vendor.Recipes.Instructions.WaitStatusThreshold"
	xmlns:userInformation="clr-namespace:UnitySC.GUI.Common.Vendor.Recipes.Instructions.UserInformation"
	xmlns:userInteraction="clr-namespace:UnitySC.GUI.Common.Vendor.Recipes.Instructions.UserInteraction"
	xmlns:wait="clr-namespace:UnitySC.GUI.Common.Vendor.Recipes.Instructions.Wait"
	xmlns:instructions="clr-namespace:UnitySC.GUI.Common.Vendor.Recipes.Instructions"
	xmlns:behaviors="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Behaviors"
	xmlns:dataTables="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Components.DataTables"
	xmlns:groupSelector="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Components.GroupSelector"
	x:Name="ScenarioLibrary"
	d:DataContext="{d:DesignInstance library:ScenarioLibraryPanel, IsDesignTimeCreatable=False}"
	d:DesignHeight="{StaticResource DesignHeight}"
	d:DesignWidth="{StaticResource DesignWidth}"
	Style="{StaticResource BusinessPanelViewStyle}"
	mc:Ignorable="d">

	<DockPanel>

		<Expander
			BorderThickness="1,0,0,0"
			DockPanel.Dock="Right"
			ExpandDirection="Left"
			IsExpanded="{Binding DetailsIsExpanded, Mode=TwoWay}">
			<Expander.Header>
				<TextBlock Text="{localize:Static scenarios:ScenarioResources.SCENARIO_DETAILS}">
					<TextBlock.LayoutTransform>
						<RotateTransform Angle="90" />
					</TextBlock.LayoutTransform>
				</TextBlock>
			</Expander.Header>
			<Expander.Style>
				<Style
					BasedOn="{StaticResource {x:Type Expander}}"
					TargetType="Expander">
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsEditing}" Value="True">
							<Setter Property="Template" Value="{StaticResource ExpanderWithoutHeaderTemplate}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Expander.Style>
			<ContentControl
				Width="800"
				Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}"
				Content="{Binding ScenarioDetailsViewModel}">
				<ContentControl.ContentTemplate>
					<DataTemplate DataType="{x:Type library:ScenarioDetailsViewModel}">
						<Grid Margin="20">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<controls:PropertyEditor
								x:Name="NamePropertyEditor"
								Margin="{StaticResource HorizontalStackPropertyMargin}"
								PropertyName="{localize:Static scenarios:ScenarioResources.SCENARIO_NAME}">
								<TextBox Text="{Binding ScenarioId, UpdateSourceTrigger=PropertyChanged}" />
							</controls:PropertyEditor>
							<controls:PropertyEditor
								x:Name="GroupPropertyEditor"
								Grid.Row="0"
								Grid.Column="2"
								Margin="{StaticResource HorizontalStackPropertyMargin}"
								PropertyName="{localize:Static scenarios:ScenarioResources.SCENARIO_GROUP}">
								<ComboBox
									DisplayMemberPath="Name"
									ItemsSource="{Binding OwnerPanel.GroupSelector.Groups}"
									SelectedItem="{Binding SelectedScenarioGroup, Mode=TwoWay}" />
							</controls:PropertyEditor>
							<controls:PropertyEditor
								x:Name="DescriptionPropertyEditor"
								Grid.Row="1"
								Grid.Column="0"
								Grid.ColumnSpan="3"
								Margin="{StaticResource HorizontalStackPropertyMargin}"
								PropertyName="{localize:Static scenarios:ScenarioResources.SCENARIO_DESCRIPTION}">
								<TextBox
									Height="100"
									VerticalContentAlignment="Top"
									AcceptsReturn="True"
									Text="{Binding ScenarioDescription, UpdateSourceTrigger=PropertyChanged}" />
							</controls:PropertyEditor>
							<controls:PropertyEditor
								x:Name="VersionPropertyEditor"
								Grid.Row="2"
								Grid.Column="0"
								Margin="{StaticResource HorizontalStackPropertyMargin}"
								PropertyName="{localize:Static scenarios:ScenarioResources.SCENARIO_VERSION}">
								<TextBox Text="{Binding VersionId, UpdateSourceTrigger=PropertyChanged}" />
							</controls:PropertyEditor>
							<controls:PropertyEditor
								x:Name="ModificationPropertyEditor"
								Grid.Row="2"
								Grid.Column="2"
								Margin="{StaticResource HorizontalStackPropertyMargin}"
								FontStyle="Italic"
								PropertyName="{localize:Static scenarios:ScenarioResources.SCENARIO_LAST_MODIFICATION}">
								<TextBlock VerticalAlignment="Center">
									<controls:OneWayRun Value="{Binding LocalizedModificationDate.Value}" />
									<controls:OneWayRun Value="{localize:Static scenarios:ScenarioResources.SCENARIO_BY}" />
									<controls:OneWayRun
										FontWeight="Bold"
										Value="{Binding Scenario.Header.Author}" />
								</TextBlock>
							</controls:PropertyEditor>
							<controls:ButtonsBox
								x:Name="ButtonsBox"
								Grid.Row="3"
								Grid.Column="0"
								Margin="{StaticResource HorizontalStackPropertyMargin}"
								HorizontalAlignment="Left"
								dependencyObjects:Icon.Geometry="{StaticResource AddIcon}"
								Content="{localize:Static scenarios:ScenarioResources.SCENARIO_NEW_INSTRUCTION}">
								<Button
									HorizontalContentAlignment="Left"
									dependencyObjects:Icon.Geometry="{StaticResource OutgoingDataIcon}"
									Background="Transparent"
									Command="{Binding AddInstructionCommand}"
									CommandParameter="{x:Type deviceCommand:DeviceCommandInstruction}"
									Content="{localize:Static scenarios:ScenarioResources.SCENARIO_INSTRUCTION_COMMAND}" />
								<Button
									HorizontalContentAlignment="Left"
									dependencyObjects:Icon.Geometry="{StaticResource WaitDataIcon}"
									Background="Transparent"
									Command="{Binding AddInstructionCommand}"
									CommandParameter="{x:Type waitStatusThreshold:WaitStatusThresholdInstruction}"
									Content="{localize:Static scenarios:ScenarioResources.SCENARIO_INSTRUCTION_WAIT_STATUS}" />
								<Button
									HorizontalContentAlignment="Left"
									dependencyObjects:Icon.Geometry="{StaticResource InfoMessageIcon}"
									Background="Transparent"
									Command="{Binding AddInstructionCommand}"
									CommandParameter="{x:Type userInformation:UserInformationInstruction}"
									Content="{localize:Static scenarios:ScenarioResources.SCENARIO_INSTRUCTION_MESSAGE}" />
								<Button
									HorizontalContentAlignment="Left"
									dependencyObjects:Icon.Geometry="{StaticResource UserInterfaceControlIcon}"
									Background="Transparent"
									Command="{Binding AddInstructionCommand}"
									CommandParameter="{x:Type userInteraction:UserInteractionInstruction}"
									Content="{localize:Static scenarios:ScenarioResources.SCENARIO_INSTRUCTION_INTERACTION}" />
								<Button
									HorizontalContentAlignment="Left"
									dependencyObjects:Icon.Geometry="{StaticResource WaitTimeIcon}"
									Background="Transparent"
									Command="{Binding AddInstructionCommand}"
									CommandParameter="{x:Type wait:WaitForTimeInstruction}"
									Content="{localize:Static scenarios:ScenarioResources.SCENARIO_INSTRUCTION_WAIT_TIME}" />
							</controls:ButtonsBox>
							<ListView
								x:Name="ListView"
								Grid.Row="4"
								Grid.Column="0"
								Grid.ColumnSpan="3"
								FocusVisualStyle="{x:Null}"
								ItemsSource="{Binding Scenario.Instructions}"
								ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								SelectedIndex="{Binding SelectedScenarioInstruction}">
								<ListView.ItemContainerStyle>
									<Style
										BasedOn="{StaticResource {x:Type ListBoxItem}}"
										TargetType="{x:Type ListViewItem}">
										<Setter Property="MinHeight" Value="38" />
										<Setter Property="MaxHeight" Value="200" />
										<Setter Property="VerticalContentAlignment" Value="Stretch" />
										<Style.Triggers>
											<Trigger Property="IsSelected" Value="True">
												<Setter Property="Height" Value="Auto" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</ListView.ItemContainerStyle>
								<ListView.ItemTemplate>
									<DataTemplate DataType="{x:Type instructions:BaseRecipeInstruction}">
										<DockPanel
											x:Name="DockPanel"
											Background="Transparent"
											TextElement.Foreground="{DynamicResource BusinessPanelForeground}">
											<ContentPresenter
												Width="18"
												Height="18"
												Margin="7,8,7,2"
												VerticalAlignment="Top"
												Content="{Binding}"
												ContentTemplateSelector="{StaticResource InstructionIconTemplateSelector}"
												DockPanel.Dock="Left" />
											<StackPanel
												x:Name="ControlsPanel"
												Margin="5,2,0,2"
												VerticalAlignment="Top"
												DockPanel.Dock="Right"
												Orientation="Horizontal"
												Visibility="Collapsed">
												<Button
													Margin="0,0,5,0"
													dependencyObjects:Icon.Geometry="{StaticResource ArrowUpIcon}"
													Background="Transparent"
													Command="{Binding DataContext.MoveUpCommand, ElementName=ListView}"
													CommandParameter="{Binding}"
													Style="{StaticResource SquareIconifiedButtonStyle}"
													ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_MOVE_UP}" />
												<Button
													Margin="0,0,5,0"
													dependencyObjects:Icon.Geometry="{StaticResource ArrowDownIcon}"
													Background="Transparent"
													Command="{Binding DataContext.MoveDownCommand, ElementName=ListView}"
													CommandParameter="{Binding}"
													Style="{StaticResource SquareIconifiedButtonStyle}"
													ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_MOVE_DOWN}" />
												<Button
													Margin="0,0,5,0"
													dependencyObjects:Icon.Geometry="{StaticResource EditIcon}"
													Background="Transparent"
													Command="{Binding DataContext.EditInstructionCommand, ElementName=ListView}"
													CommandParameter="{Binding}"
													Style="{StaticResource SquareIconifiedButtonStyle}"
													ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_EDIT}" />
												<Button
													Margin="0,0,5,0"
													dependencyObjects:Icon.Geometry="{StaticResource DeleteIcon}"
													Background="Transparent"
													Command="{Binding DataContext.RemoveCommand, ElementName=ListView}"
													CommandParameter="{Binding}"
													Style="{StaticResource SquareIconifiedButtonStyle}"
													ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_DELETE}" />
											</StackPanel>
											<TextBlock
												x:Name="DescriptionBlock"
												VerticalAlignment="Center"
												behaviors:AdvancedStringFormatTextBlockBehavior.Definitions="{Binding FormattedLabel}"
												TextTrimming="CharacterEllipsis"
												ToolTip="{Binding PrettyLabel}" />
										</DockPanel>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="True">
												<Setter TargetName="DescriptionBlock" Property="TextWrapping" Value="Wrap" />
												<Setter TargetName="ControlsPanel" Property="Visibility" Value="Visible" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=DockPanel, Path=IsMouseOver}" Value="True">
												<Setter TargetName="ControlsPanel" Property="Visibility" Value="Visible" />
											</DataTrigger>
											<DataTrigger Binding="{Binding DataContext.IsEditing, ElementName=ListView}" Value="False">
												<Setter TargetName="ControlsPanel" Property="Visibility" Value="Collapsed" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</Grid>
						<DataTemplate.Triggers>
							<DataTrigger Value="True">

								<DataTrigger.Binding>
									<MultiBinding Converter="{StaticResource OrOperatorMultiValueConverter}">
										<Binding
											Converter="{StaticResource NullToTrueConverter}"
											Path="." />
										<Binding
											Converter="{StaticResource InvertedBoolConverter}"
											Path="IsEditing" />
									</MultiBinding>
								</DataTrigger.Binding>

								<Setter TargetName="ButtonsBox" Property="Visibility" Value="Collapsed" />

								<Setter TargetName="NamePropertyEditor" Property="Style" Value="{StaticResource BorderedPropertyEditorStyle}" />
								<Setter TargetName="NamePropertyEditor" Property="Content">
									<Setter.Value>
										<TextBlock Text="{Binding ScenarioId}" />
									</Setter.Value>
								</Setter>

								<Setter TargetName="GroupPropertyEditor" Property="Style" Value="{StaticResource BorderedPropertyEditorStyle}" />
								<Setter TargetName="GroupPropertyEditor" Property="Content">
									<Setter.Value>
										<TextBlock Text="{Binding SelectedScenarioGroup.Name}" />
									</Setter.Value>
								</Setter>

								<Setter TargetName="DescriptionPropertyEditor" Property="Style" Value="{StaticResource BorderedPropertyEditorStyle}" />
								<Setter TargetName="DescriptionPropertyEditor" Property="HorizontalContentAlignment" Value="Stretch" />
								<Setter TargetName="DescriptionPropertyEditor" Property="Content">
									<Setter.Value>
										<ScrollViewer
											MaxHeight="200"
											HorizontalScrollBarVisibility="Disabled"
											VerticalScrollBarVisibility="Auto">
											<TextBlock
												Text="{Binding ScenarioDescription}"
												TextWrapping="Wrap" />
										</ScrollViewer>
									</Setter.Value>
								</Setter>

								<Setter TargetName="VersionPropertyEditor" Property="Style" Value="{StaticResource BorderedPropertyEditorStyle}" />
								<Setter TargetName="VersionPropertyEditor" Property="Content">
									<Setter.Value>
										<TextBlock Text="{Binding VersionId}" />
									</Setter.Value>
								</Setter>

								<Setter TargetName="ModificationPropertyEditor" Property="Style" Value="{StaticResource BorderedPropertyEditorStyle}" />

							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ContentControl.ContentTemplate>
			</ContentControl>

		</Expander>

		<dataTables:DataTable
			DataSource="{Binding DataTableSource}"
			IsEnabled="{Binding IsEditing, Converter={StaticResource InvertedBoolConverter}}"
			SelectedItem="{Binding SelectedScenario}">

			<dataTables:DataTable.LeftAdditionalContent>
				<Border
					BorderBrush="{DynamicResource ListViewBorderBrush}"
					BorderThickness="0,0,1,0">
					<Expander
						VerticalContentAlignment="Stretch"
						ExpandDirection="Right"
						IsExpanded="True">
						<Expander.Header>
							<TextBlock Text="{localize:Static scenarios:ScenarioResources.SCENARIO_GROUPS}">
								<TextBlock.LayoutTransform>
									<RotateTransform Angle="-90" />
								</TextBlock.LayoutTransform>
							</TextBlock>
						</Expander.Header>
						<groupSelector:GroupSelectorView DataContext="{Binding GroupSelector}">
							<groupSelector:GroupSelectorView.GroupTemplate>
								<DataTemplate DataType="{x:Type components:RecipeGroup}">
									<DockPanel>
										<TextBlock
											VerticalAlignment="Center"
											Style="{StaticResource Subtitle2TextStyle}"
											Text="{Binding Name}" />
									</DockPanel>
								</DataTemplate>
							</groupSelector:GroupSelectorView.GroupTemplate>
						</groupSelector:GroupSelectorView>
					</Expander>
				</Border>
			</dataTables:DataTable.LeftAdditionalContent>

			<dataTables:DataTable.BottomAdditionalContent>
				<StackPanel
					Margin="10"
					Orientation="Horizontal">
					<Button
						Margin="0,0,10,0"
						dependencyObjects:Icon.Geometry="{DynamicResource AddIcon}"
						Command="{Binding AddScenarioCommand}"
						IsEnabled="{Binding AddScenarioCommand.IsEnabled}"
						Style="{StaticResource SquareIconifiedButtonStyle}"
						ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_ADD}" />
					<Button
						Margin="0,0,10,0"
						dependencyObjects:Icon.Geometry="{DynamicResource DeleteIcon}"
						Command="{Binding DeleteScenarioCommand}"
						IsEnabled="{Binding DeleteScenarioCommand.IsEnabled}"
						Style="{StaticResource SquareIconifiedButtonStyle}"
						ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_DELETE}" />
					<Button
						Margin="0,0,10,0"
						dependencyObjects:Icon.Geometry="{DynamicResource DuplicateIcon}"
						Command="{Binding DuplicateScenarioCommand}"
						IsEnabled="{Binding DuplicateScenarioCommand.IsEnabled}"
						Style="{StaticResource SquareIconifiedButtonStyle}"
						ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_DUPLICATE}" />
					<Button
						Margin="0,0,10,0"
						dependencyObjects:Icon.Geometry="{DynamicResource EditIcon}"
						Command="{Binding EditScenarioCommand}"
						IsEnabled="{Binding EditScenarioCommand.IsEnabled}"
						Style="{StaticResource SquareIconifiedButtonStyle}"
						ToolTip="{localize:Static scenarios:ScenarioResources.SCENARIO_EDIT}" />
				</StackPanel>
			</dataTables:DataTable.BottomAdditionalContent>

			<GridView AllowsColumnReorder="True">

				<!--#region GroupName-->
				<dataTables:DataTableColumn
					Width="150"
					DisplayName="{localize:Static scenarios:ScenarioResources.SCENARIO_GROUP}"
					SortKey="Header.GroupName">
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="components:RecipeComponent">
							<TextBlock Text="{Binding Header.GroupName}" />
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</dataTables:DataTableColumn>
				<!--#endregion GroupName-->

				<!--#region Name-->
				<dataTables:DataTableColumn
					Width="380"
					DisplayName="{localize:Static scenarios:ScenarioResources.SCENARIO_NAME}"
					SortKey="Id">
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="components:RecipeComponent">
							<TextBlock
								Text="{Binding Id}"
								TextAlignment="Left" />
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</dataTables:DataTableColumn>
				<!--#endregion Name-->

				<!--#region Author-->
				<dataTables:DataTableColumn
					x:Name="AuthorColumn"
					Width="175"
					DisplayName="{localize:Static scenarios:ScenarioResources.SCENARIO_AUTHOR}"
					SortKey="Author">
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="components:RecipeComponent">
							<TextBlock
								x:Name="TextBlock"
								DataContext="{Binding}"
								Text="{Binding Header.Author}" />
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</dataTables:DataTableColumn>
				<!--#endregion Author-->

				<!--#region Creation Date Time-->
				<dataTables:DataTableColumn
					Width="240"
					DisplayName="{localize:Static scenarios:ScenarioResources.SCENARIO_CREATION_DATE}"
					SortKey="CreateDate">
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="components:RecipeComponent">
							<TextBlock
								Text="{Binding Header.CreateDate, StringFormat='dd/MM/yyyy HH:mm:ss'}"
								TextAlignment="Left" />
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</dataTables:DataTableColumn>
				<!--#endregion Creation Date Time-->

				<!--#region Last Modification Date Time-->
				<dataTables:DataTableColumn
					Width="240"
					DisplayName="{localize:Static scenarios:ScenarioResources.SCENARIO_LAST_MODIFICATION}"
					SortKey="ModificationDate">
					<GridViewColumn.CellTemplate>
						<DataTemplate DataType="components:RecipeComponent">
							<TextBlock
								Text="{Binding Header.ModificationDate, StringFormat='dd/MM/yyyy HH:mm:ss'}"
								TextAlignment="Left" />
						</DataTemplate>
					</GridViewColumn.CellTemplate>
				</dataTables:DataTableColumn>
				<!--#endregion Last Modification Date Time-->

			</GridView>
		</dataTables:DataTable>

	</DockPanel>

</UserControl>
