<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SCENARIO_ADD" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="SCENARIO_EDIT" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="SCENARIO_DELETE" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="SCENARIO_DUPLICATE" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="SCENARIO_NEW_SCENARIO" xml:space="preserve">
    <value>New scenario</value>
  </data>
  <data name="SCENARIO_DELETE_CONFIRMATION_TITLE" xml:space="preserve">
    <value>Delete '{0}' scenario?</value>
  </data>
  <data name="SCENARIO_DELETED" xml:space="preserve">
    <value>'{0}' scenario deleted.</value>
  </data>
  <data name="SCENARIO_ERROR_DELETION" xml:space="preserve">
    <value>An error occurred while deleting the scenario. See the traces for more information.</value>
  </data>
  <data name="SCENARIO_SAVED" xml:space="preserve">
    <value>'{0}' scenario saved.</value>
  </data>
  <data name="SCENARIO_ERROR_SAVING" xml:space="preserve">
    <value>An error occurred while saving the scenario. See the traces for more information.</value>
  </data>
  <data name="SCENARIO_DISCARD_CHANGES" xml:space="preserve">
    <value>Discard changes?</value>
  </data>
  <data name="SCENARIO_DISCARD_CHANGES_DESCRIPTION" xml:space="preserve">
    <value>Do you want to undo all your changes in the scenario? This action cannot be undone.</value>
  </data>
  <data name="SCENARIO_DISCARD" xml:space="preserve">
    <value>Discard</value>
  </data>
  <data name="SCENARIO_DETAILS" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="SCENARIO_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SCENARIO_GROUP" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="SCENARIO_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="SCENARIO_VERSION" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="SCENARIO_LAST_MODIFICATION" xml:space="preserve">
    <value>Last modification</value>
  </data>
  <data name="SCENARIO_BY" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="SCENARIO_NEW_INSTRUCTION" xml:space="preserve">
    <value>New instruction</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_COMMAND" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_WAIT_STATUS" xml:space="preserve">
    <value>Wait status</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_MESSAGE" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_INTERACTION" xml:space="preserve">
    <value>Interaction</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_WAIT_TIME" xml:space="preserve">
    <value>Wait time</value>
  </data>
  <data name="SCENARIO_MOVE_UP" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="SCENARIO_MOVE_DOWN" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="SCENARIO_GROUPS" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="SCENARIO_AUTHOR" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="SCENARIO_CREATION_DATE" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="SCENARIO_DELETE_INSTRUCTION" xml:space="preserve">
    <value>Delete '{0}' instruction?</value>
  </data>
  <data name="SCENARIO_EDITING_INSTRUCTION" xml:space="preserve">
    <value>Editing the '{0}' instruction</value>
  </data>
  <data name="SCENARIO_ADDING_INSTRUCTION" xml:space="preserve">
    <value>Adding a '{0}' instruction</value>
  </data>
  <data name="SCENARIO_APPLY" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="SCENARIO_USE_TIMEOUT" xml:space="preserve">
    <value>Use timeout</value>
  </data>
  <data name="SCENARIO_DEVICES" xml:space="preserve">
    <value>Devices</value>
  </data>
  <data name="SCENARIO_COMMANDS" xml:space="preserve">
    <value>Commands</value>
  </data>
  <data name="SCENARIO_PARAMETERS" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="SCENARIO_NO_PARAMETER" xml:space="preserve">
    <value>There is no parameter for the selected command</value>
  </data>
  <data name="SCENARIO_NO_COMMAND" xml:space="preserve">
    <value>No command selected</value>
  </data>
  <data name="SCENARIO_ACTIONS" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="SCENARIO_ABORT" xml:space="preserve">
    <value>Abort</value>
  </data>
  <data name="SCENARIO_CONTINUE" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="SCENARIO_ABORT_OR_CONTINUE" xml:space="preserve">
    <value>Abort or continue</value>
  </data>
  <data name="SCENARIO_EXECUTION_STATE" xml:space="preserve">
    <value>Execution state</value>
  </data>
  <data name="SCENARIO_PROGRESSION" xml:space="preserve">
    <value>Progression</value>
  </data>
  <data name="SCENARIO_INSTRUCTIONS" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="SCENARIO_SKIP_CURRENT_INSTRUCTION" xml:space="preserve">
    <value>Skip current instruction</value>
  </data>
  <data name="SCENARIO_JUMP_TO_SELECTED" xml:space="preserve">
    <value>Jump to selected instruction</value>
  </data>
  <data name="SCENARIO_REPLAY_INSTRUCTION" xml:space="preserve">
    <value>Replay instruction</value>
  </data>
  <data name="SCENARIO_EQUIPMENT_VISUALIZATION" xml:space="preserve">
    <value>Equipment visualization</value>
  </data>
  <data name="SCENARIO_START" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="SCENARIO_RESUME" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="SCENARIO_PAUSE" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="SCENARIO_STOP" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="SCENARIO_EXECUTION_CONFIGURATION" xml:space="preserve">
    <value>Execution configuration</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_FAILED" xml:space="preserve">
    <value>Instruction failed</value>
  </data>
  <data name="SCENARIO_NUMBER_OF_EXECUTIONS" xml:space="preserve">
    <value>Number of executions</value>
  </data>
  <data name="SCENARIO_LOOP_MODE" xml:space="preserve">
    <value>Loop mode</value>
  </data>
  <data name="SCENARIO_SCENARIO_GROUPS" xml:space="preserve">
    <value>Scenario groups</value>
  </data>
  <data name="SCENARIO_GROUP_EXPLANATION" xml:space="preserve">
    <value>Use groups to organize scenarios and customize their accessibility.</value>
  </data>
  <data name="SCENARIO_ACCESSIBILITY" xml:space="preserve">
    <value>Accessibility</value>
  </data>
  <data name="SCENARIO_NEW_GROUP" xml:space="preserve">
    <value>New group</value>
  </data>
  <data name="SCENARIO_DELETE_GROUP" xml:space="preserve">
    <value>Delete '{0}' group?</value>
  </data>
  <data name="SCENARIO_GROUP_ERROR_EMPTY" xml:space="preserve">
    <value>The name must be specified.</value>
  </data>
  <data name="SCENARIO_GROUP_ERROR_UNVAILABLE_NAME" xml:space="preserve">
    <value>This name cannot be used.</value>
  </data>
  <data name="SCENARIO_GROUP_ERROR_ALREADY_USED" xml:space="preserve">
    <value>This name is already in use by another group.</value>
  </data>
  <data name="SCENARIO_STATUSES" xml:space="preserve">
    <value>Statuses</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_DEFINITION" xml:space="preserve">
    <value>Instruction definition</value>
  </data>
  <data name="SCENARIO_TRUE" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="SCENARIO_FALSE" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="SCENARIO_OPERATOR_AND" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="SCENARIO_OPERATOR_OR" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="SCENARIO_INSTRUCTION_WAIT_PM_STATUS" xml:space="preserve">
    <value>Wait process module status</value>
  </data>
  <data name="SCENARIO_LIBRARY_CREATION_CANCELED" xml:space="preserve">
    <value>The creation of the new scenario has been canceled.</value>
  </data>
  <data name="SCENARIO_DISPLAYMESSAGE" xml:space="preserve">
    <value>Display {0}</value>
  </data>
  <data name="SCENARIO_DISPLAY" xml:space="preserve">
    <value>Display </value>
  </data>
  <data name="SCENARIO_USERINTERACTIONLABEL" xml:space="preserve">
    <value>Display {0} and waiting {1} for the operator {2}</value>
  </data>
  <data name="SCENARIO_ABORTORCONTINUE" xml:space="preserve">
    <value>(Abort) or (Continue)</value>
  </data>
  <data name="SCENARIO_CONTINUEINSTRUCTION" xml:space="preserve">
    <value>(Continue)</value>
  </data>
  <data name="SCENARIO_TIMEOUT" xml:space="preserve">
    <value>(Timeout {0} seconds)</value>
  </data>
  <data name="SCENARIO_ANDWAITING" xml:space="preserve">
    <value> and waiting </value>
  </data>
  <data name="SCENARIO_FOROPERATOR" xml:space="preserve">
    <value> for the operator {0}</value>
  </data>
  <data name="SCENARIO_WAIT" xml:space="preserve">
    <value>Wait {0} seconds</value>
  </data>
  <data name="SCENARIO_SECONDS" xml:space="preserve">
    <value> seconds</value>
  </data>
  <data name="SCENARIO_WAITFORMATTED" xml:space="preserve">
    <value>Wait </value>
  </data>
  <data name="SCENARIO_TIMEOUTSECONDS" xml:space="preserve">
    <value> (Timeout: {0} seconds)</value>
  </data>
  <data name="SCENARIO_RUNNING" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="SCENARIO_PAUSED" xml:space="preserve">
    <value>Paused</value>
  </data>
  <data name="SCENARIO_ABORTED" xml:space="preserve">
    <value>Aborted</value>
  </data>
  <data name="SCENARIO_FINISHED" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="SCENARIO_STEP_MODE" xml:space="preserve">
    <value>Step by step mode</value>
  </data>
  <data name="SCENARIO_STEP_MODE_ON" xml:space="preserve">
    <value>Step by step ON</value>
  </data>
  <data name="SCENARIO_STEP_MODE_OFF" xml:space="preserve">
    <value>Step by step OFF</value>
  </data>
  <data name="SCENARIO_START_ERROR" xml:space="preserve">
    <value>An error occurred when starting the scenario.</value>
  </data>
</root>
