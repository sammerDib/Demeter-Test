<UserControl
    x:Class="UnitySC.GUI.Common.Vendor.Views.Panels.Maintenance.ServiceMode.Device.Command.DeviceCommandView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="clr-namespace:UnitySC.GUI.Common.Vendor.Views.Panels.Maintenance.ServiceMode.Device.Command"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:parameter="clr-namespace:UnitySC.GUI.Common.Vendor.Views.Panels.Maintenance.ServiceMode.Device.Command.Parameter"
    xmlns:numericBox="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Controls.NumericBox"
    xmlns:severityMessageViewer="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Components.SeverityMessageViewer"
    xmlns:dependencyObjects="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions"
    d:DataContext="{d:DesignInstance command:DeviceCommandViewModel}"
    d:DesignHeight="500"
    d:DesignWidth="500"
    mc:Ignorable="d">
    <UserControl.Resources>

        <DataTemplate
            x:Key="StringTemplate"
            DataType="{x:Type parameter:StringParameterViewModel}">
            <TextBox
                VerticalContentAlignment="Center"
                Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        </DataTemplate>

        <DataTemplate
            x:Key="BoolTemplate"
            DataType="{x:Type parameter:ParameterViewModel}">
            <CheckBox
                VerticalAlignment="Center"
                IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>

        <DataTemplate
            x:Key="NumericTemplate"
            DataType="{x:Type parameter:NumericParameterViewModel}">
            <numericBox:DoubleBox Value="{Binding DoubleValue, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" />
        </DataTemplate>

        <DataTemplate
            x:Key="UnitNetTemplate"
            DataType="{x:Type parameter:QuantityParameterViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <numericBox:DoubleBox
                    HorizontalAlignment="Stretch"
                    Value="{Binding DoubleValue, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="5,0"
                    VerticalAlignment="Center"
                    Text="{Binding Unit}" />
            </Grid>
        </DataTemplate>

        <DataTemplate
            x:Key="MaterialLocationTemplate"
            DataType="{x:Type parameter:MaterialLocationChoiceViewModel}">
            <ComboBox
                VerticalContentAlignment="Center"
                ItemsSource="{Binding Locations}"
                SelectedItem="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </DataTemplate>

        <DataTemplate
            x:Key="MaterialLocationContainerTemplate"
            DataType="{x:Type parameter:MaterialLocationContainerChoiceViewModel}">
            <ComboBox
                VerticalContentAlignment="Center"
                ItemsSource="{Binding MaterialLocationContainers}"
                SelectedItem="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </DataTemplate>

        <DataTemplate
            x:Key="EnumerableTemplate"
            DataType="{x:Type parameter:EnumerableParameterViewModel}">
            <ComboBox
                VerticalContentAlignment="Center"
                ItemsSource="{Binding Literals}"
                SelectedItem="{Binding Path=TypedValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </DataTemplate>

        <parameter:ParameterTemplateSelector
            x:Key="ParameterTemplateSelector"
            BoolTemplate="{StaticResource BoolTemplate}"
            EnumerableTemplate="{StaticResource EnumerableTemplate}"
            MaterialLocationContainerTemplate="{StaticResource MaterialLocationContainerTemplate}"
            MaterialLocationTemplate="{StaticResource MaterialLocationTemplate}"
            NumericTemplate="{StaticResource NumericTemplate}"
            StringTemplate="{StaticResource StringTemplate}"
            UnitNetTemplate="{StaticResource UnitNetTemplate}" />

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ItemsControl
            Margin="10"
            DockPanel.Dock="Top"
            Grid.IsSharedSizeScope="True"
            ItemsSource="{Binding ParameterViewModels}"
            Style="{StaticResource VirtualizedItemsControlStyle}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                MinWidth="50"
                                SharedSizeGroup="ColumnName" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="{Binding Parameter.Name, Converter={StaticResource TextToHumanizedTextConverter}}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Content="{Binding}"
                            ContentTemplateSelector="{StaticResource ParameterTemplateSelector}" />
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Grid
            Grid.Row="1"
            Grid.Column="0"
            MaxHeight="200">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ScrollViewer
                Grid.Row="0"
                VerticalScrollBarVisibility="Auto">
                <severityMessageViewer:SeverityMessageViewerView
                    Margin="10,5"
                    DataContext="{Binding MessagesViewerViewModel}" />
            </ScrollViewer>

            <Grid
                Grid.Row="1"
                Margin="10,0,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*"
                        MinWidth="20" />
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="50" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <CheckBox
                    Margin="0,0,0,5"
                    VerticalAlignment="Center"
                    Content="Enable verifications"
                    IsChecked="{Binding CommandContext.EnableVerification}" />

                <DockPanel
                    Grid.Row="1"
                    Grid.Column="0">
                    <CheckBox
                        x:Name="CheckBox"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{Binding TimeoutLabel}"
                        IsChecked="{Binding CommandContext.UseTimeout}" />
                    <ComboBox
                        Margin="5,0,0,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsEditable="True"
                        IsEnabled="{Binding ElementName=CheckBox, Path=IsChecked}"
                        ItemsSource="{Binding DefaultTimeOuts}"
                        Text="{Binding CommandContext.TimeOut}" />
                </DockPanel>

                <Button
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="10,0,0,5"
                    VerticalAlignment="Bottom"
                    dependencyObjects:Icon.Geometry="{StaticResource PlayIcon}"
                    Command="{Binding SendCommand}"
                    Content="Send"
                    DockPanel.Dock="Right" />

                <Button
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="10,0,0,0"
                    dependencyObjects:Icon.Geometry="{StaticResource ManualIcon}"
                    Command="{Binding AbortCommand}"
                    Content="Abort"
                    DockPanel.Dock="Right"
                    Visibility="{Binding AbortCommandVisibility}" />

            </Grid>

        </Grid>

    </Grid>
</UserControl>
