<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALARMS_ACKNOWLEDGE" xml:space="preserve">
    <value>Acknowledge</value>
  </data>
  <data name="ALARMS_ACKNOWLEDGED" xml:space="preserve">
    <value>Acknowledged</value>
  </data>
  <data name="ALARMS_ACKNOWLEDGED_BY" xml:space="preserve">
    <value>Acknowledged by</value>
  </data>
  <data name="ALARMS_ACKNOWLEDGED_DATE_TIME" xml:space="preserve">
    <value>Ack. Date Time</value>
  </data>
  <data name="ALARMS_ACKNOWLEDGED_TIME_PERIOD" xml:space="preserve">
    <value>Acknowledged time period</value>
  </data>
  <data name="ALARMS_ACKNOWLEDGE_ALL" xml:space="preserve">
    <value>Acknowledge All</value>
  </data>
  <data name="ALARMS_ACKNOWLEDGE_ALL_MESSAGE" xml:space="preserve">
    <value>Are you sure to Acknowledge all the visible alarms?</value>
  </data>
  <data name="ALARMS_ACTIVES" xml:space="preserve">
    <value>Actives</value>
  </data>
  <data name="ALARMS_APPLY" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ALARMS_CATALOG" xml:space="preserve">
    <value>Catalog</value>
  </data>
  <data name="ALARMS_CLEAR" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ALARMS_CLEARED" xml:space="preserve">
    <value>Cleared</value>
  </data>
  <data name="ALARMS_CLEARED_TIME_PERIOD" xml:space="preserve">
    <value>Cleared time period</value>
  </data>
  <data name="ALARMS_DATE_TIME" xml:space="preserve">
    <value>Date Time</value>
  </data>
  <data name="ALARMS_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ALARMS_FILTERS" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="ALARMS_HISTORY" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="ALARMS_ID" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="ALARMS_MUTE_BUZZER" xml:space="preserve">
    <value>Mute Buzzer</value>
  </data>
  <data name="ALARMS_RELOAD" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ALARMS_SET" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="ALARMS_SET_TIME_PERIODE" xml:space="preserve">
    <value>Set time period</value>
  </data>
  <data name="ALARMS_SOURCE" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="ALARMS_STATE" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="ALARMS_VERIFICATION" xml:space="preserve">
    <value>Verification</value>
  </data>
  <data name="ALARMS_ANALYSIS" xml:space="preserve">
    <value>Analysis</value>
  </data>
  <data name="ALARMS_KEY" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="ALARMS_EXPORT_CSV" xml:space="preserve">
    <value>Export CSV</value>
  </data>
  <data name="ALARMS_SET_DATE_TIME" xml:space="preserve">
    <value>Set Date Time</value>
  </data>
  <data name="ALARMS_CLEARED_DATE_TIME" xml:space="preserve">
    <value>Cleared Date Time</value>
  </data>
  <data name="ALARMS_REFRESH_MESSAGE" xml:space="preserve">
    <value>The status of an alarm has changed, refresh to view the panel in its current state.</value>
  </data>
  <data name="ALARMS_EXPORTING_SUCCESS" xml:space="preserve">
    <value>Exporting successfully</value>
  </data>
  <data name="ALARMS_OPEN_FOLDER" xml:space="preserve">
    <value>Open folder</value>
  </data>
  <data name="ALARMS_ENGLISH_TEXT" xml:space="preserve">
    <value>English text</value>
  </data>
  <data name="ALARMS_TEXT" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_TOP5" xml:space="preserve">
    <value>Refresh Top 5</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_TOP5_SINCE_ONE_WEEK" xml:space="preserve">
    <value>Refresh Top 5 since one week</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_TOP10_THIS_JANUARY" xml:space="preserve">
    <value>Refresh Top 10 this January</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_TOP8_SS_REP" xml:space="preserve">
    <value>Refresh Top 8 (subsystem repartition)</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_DAILY" xml:space="preserve">
    <value>Refresh Daily</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_MONTHLY" xml:space="preserve">
    <value>Refresh Monthly</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_WEEKLY" xml:space="preserve">
    <value>Refresh Weekly</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_BY_SUBSYSTEM" xml:space="preserve">
    <value>Refresh distribution by subsystem</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_MTTR_BY_ALARM" xml:space="preserve">
    <value>Refresh MTTR by alarm</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_MTTR_BY_SUBSYSTEM" xml:space="preserve">
    <value>Refresh MTTR by subsystem</value>
  </data>
  <data name="ALARMS_ANALYSIS_REFRESH_MTTR_BY_SUBSYSTEM_CLASS" xml:space="preserve">
    <value>Refresh MTTR by subsystem class</value>
  </data>
  <data name="ALARMS_TOPX" xml:space="preserve">
    <value>TopX</value>
  </data>
  <data name="ALARMS_TOPX_WITH_REPARTITION" xml:space="preserve">
    <value>TopX with repartition</value>
  </data>
  <data name="ALARMS_BY_PERIOD" xml:space="preserve">
    <value>Alarms by period</value>
  </data>
  <data name="ALARMS_DISTRIBUTION" xml:space="preserve">
    <value>Alarms distribution</value>
  </data>
  <data name="ALARMS_DURATION" xml:space="preserve">
    <value>Alarms duration</value>
  </data>
  <data name="ALARMS_TOP_5_ALARM_OCCURENCES" xml:space="preserve">
    <value>Top 5 alarm occurrences</value>
  </data>
  <data name="ALARMS_TOP_5_ALARM_OCCURENCES_SINCE_LAST_WEEK" xml:space="preserve">
    <value>Top 5 alarm occurrences since last week</value>
  </data>
  <data name="ALARMS_TOP_10_ALARM_OCCURENCES_THIS_JANUARY" xml:space="preserve">
    <value>Top 10 alarm occurrences this January</value>
  </data>
  <data name="ALARMS_DAILY_ALARMS" xml:space="preserve">
    <value>Daily alarms</value>
  </data>
  <data name="ALARMS_WEEKLY_ALARMS" xml:space="preserve">
    <value>Weekly alarms</value>
  </data>
  <data name="ALARMS_MONTHLY_ALARMS" xml:space="preserve">
    <value>Monthly alarms</value>
  </data>
  <data name="ALARMS_REPARTITION_BY_SUBSYSTEM" xml:space="preserve">
    <value>Alarms repartition by subsystem</value>
  </data>
  <data name="ALARMS_TOP8_ALARM_OCCURRENCE_WITH_SUBSYSTEM_REPARTITION" xml:space="preserve">
    <value>Top 8 alarm occurrences with subsystem repartition</value>
  </data>
  <data name="ALARMS_MTTR_BY_ALARM" xml:space="preserve">
    <value>MTTR by alarm</value>
  </data>
  <data name="ALARMS_MTTR_BY_SUBSYSTEM_CLASS" xml:space="preserve">
    <value>MTTR by subsystem class</value>
  </data>
  <data name="ALARMS_MTTR_BY_SUBSYSTEM" xml:space="preserve">
    <value>MTTR by subsystem</value>
  </data>
</root>