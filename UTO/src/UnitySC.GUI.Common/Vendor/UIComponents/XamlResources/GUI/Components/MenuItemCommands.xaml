<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commands="clr-namespace:Agileo.GUI.Components.Commands;assembly=Agileo.GUI"
    xmlns:styleSelectors="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.StyleSelectors"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:tools="clr-namespace:Agileo.GUI.Components.Tools;assembly=Agileo.GUI">

    <!--  In this file, styles are dependent of the DataContext because MenuItems are auto-generated by the DataTemplate of the CommandGroupViewModel  -->
    <!--  Therefore, menuItems are not accessible by xaml code  -->

    <!--#region Templates-->

    <DataTemplate x:Key="SubCommandTemplate" DataType="{x:Type commands:CommandElement}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Column0" Width="Auto" />
                <ColumnDefinition x:Name="Column1" Width="*" />
            </Grid.ColumnDefinitions>
            <!--  Icon  -->
            <ContentPresenter
                x:Name="Icon"
                Grid.Column="0"
                MaxWidth="{StaticResource MaxSubCommandIconSize}"
                MaxHeight="{StaticResource MaxSubCommandIconSize}"
                Margin="4,0,8,0"
                VerticalAlignment="Center"
                Content="{Binding Icon}" />
            <!--  Text  -->
            <TextBlock
                x:Name="Text"
                Grid.Column="1"
                Padding="0,3,3,3"
                VerticalAlignment="Center"
                FontSize="{StaticResource FontSizeSmall}"
                Text="{Binding LocalizedName}"
                TextAlignment="Left"
                TextWrapping="Wrap" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding HasIcon}" Value="false">
                <Setter TargetName="Icon" Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LocalizedName}" Value="">
                <Setter TargetName="Text" Property="Padding" Value="0" />
                <Setter TargetName="Icon" Property="Margin" Value="8,0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="SubToolCommandTemplate" DataType="{x:Type tools:ToolCommandReference}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Column0" Width="Auto" />
                <ColumnDefinition x:Name="Column1" Width="*" />
            </Grid.ColumnDefinitions>
            <!--  Icon  -->
            <ContentPresenter
                x:Name="Icon"
                Grid.Column="0"
                MaxWidth="{StaticResource MaxSubCommandIconSize}"
                MaxHeight="{StaticResource MaxSubCommandIconSize}"
                Margin="4,0,8,0"
                VerticalAlignment="Center"
                Content="{Binding ToolCommand.Icon}" />
            <!--  Text  -->
            <TextBlock
                x:Name="Text"
                Grid.Column="1"
                Padding="0,3,3,3"
                VerticalAlignment="Center"
                FontSize="{StaticResource FontSizeSmall}"
                Text="{Binding ToolCommand.LocalizedName}"
                TextAlignment="Left"
                TextWrapping="Wrap" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ToolCommand.HasIcon}" Value="false">
                <Setter TargetName="Icon" Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ToolCommand.LocalizedName}" Value="">
                <Setter TargetName="Text" Property="Padding" Value="0" />
                <Setter TargetName="Icon" Property="Margin" Value="8,0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SubCommandGroupTemplate" DataType="{x:Type commands:BusinessPanelCommandGroup}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter
                x:Name="ContentPresenter"
                Grid.Column="0"
                Content="{Binding}"
                ContentTemplate="{StaticResource SubCommandTemplate}" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Width="10"
                Height="5"
                Margin="8,0,4,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Data="M0,0L32,0 16,19.745z"
                Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                RenderTransformOrigin="0.5,0.5"
                Stretch="Fill" />
        </Grid>
    </DataTemplate>

    <!--#endregion Templates-->

    <!--#region Styles-->

    <system:Double x:Key="SubCommandHeight">40</system:Double>

    <!--  DataType is CommandElementViewModel  -->
    <Style
        x:Key="MenuItemSubCommandCommandBaseStyle"
        BasedOn="{x:Null}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Visibility" Value="{Binding Visibility}" />
        <Setter Property="IsEnabled" Value="{Binding IsAccessible}" />
        <Setter Property="Height" Value="{DynamicResource SubCommandHeight}" />
        <Setter Property="Background" Value="{DynamicResource CommandNotPressedBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandNotPressedForeground}" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Rectangle
                            x:Name="background"
                            Fill="{DynamicResource CommandPressedBackground}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentSource="Header"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="0"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Left"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <Grid Margin="10">
                                <Rectangle Effect="{StaticResource ControlsShadow}" Fill="{DynamicResource ContextMenuBackground}" />
                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="background" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="background" Property="Opacity" Value="1" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{DynamicResource CommandPressedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="templateRoot" Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataType is CommandViewModel  -->
    <Style
        x:Key="MenuItemSubCommandStyle"
        BasedOn="{StaticResource MenuItemSubCommandCommandBaseStyle}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Command" Value="{Binding}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource SubCommandTemplate}" />
    </Style>

    <Style
        x:Key="MenuItemSubToolCommandStyle"
        BasedOn="{StaticResource MenuItemSubCommandCommandBaseStyle}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Command" Value="{Binding ToolCommand}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource SubToolCommandTemplate}" />
    </Style>

    <!--  DataType is ToggleCommandViewModel  -->
    <Style
        x:Key="MenuItemSubToggleCommandStyle"
        BasedOn="{StaticResource MenuItemSubCommandCommandBaseStyle}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Command" Value="{Binding CheckedCommand.Command}" />
        <Setter Property="IsCheckable" Value="true" />
        <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=TwoWay}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource SubCommandTemplate}" />
        <Setter Property="Header" Value="{Binding ActiveCommand}" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Command" Value="{Binding UncheckedCommand.Command}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DataType is CommandGroupViewModel  -->
    <Style
        x:Key="MenuItemSubCommandGroupStyle"
        BasedOn="{StaticResource MenuItemSubCommandCommandBaseStyle}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="ItemContainerStyleSelector" Value="{DynamicResource MenuItemCommandElementStyleSelector}" />
        <Setter Property="ItemsSource" Value="{Binding Commands}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource SubCommandGroupTemplate}" />
    </Style>

    <!--#endregion Styles-->

    <styleSelectors:GenericStyleSelector x:Key="MenuItemCommandElementStyleSelector">
        <styleSelectors:GenericStyle Style="{StaticResource MenuItemSubCommandGroupStyle}" Type="{x:Type commands:BusinessPanelCommandGroup}" />
        <styleSelectors:GenericStyle Style="{StaticResource MenuItemSubToggleCommandStyle}" Type="{x:Type commands:BusinessPanelToggleCommand}" />
        <styleSelectors:GenericStyle Style="{StaticResource MenuItemSubCommandStyle}" Type="{x:Type commands:BusinessPanelCommand}" />
        <styleSelectors:GenericStyle Style="{StaticResource MenuItemSubToolCommandStyle}" Type="{x:Type tools:ToolCommandReference}" />
    </styleSelectors:GenericStyleSelector>

</ResourceDictionary>
