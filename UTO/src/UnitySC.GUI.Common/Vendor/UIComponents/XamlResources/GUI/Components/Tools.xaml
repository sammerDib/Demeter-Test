<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:dataTemplateSelectors="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.DataTemplateSelectors"
    xmlns:tools="clr-namespace:Agileo.GUI.Components.Tools;assembly=Agileo.GUI">

    <Style
        x:Key="ToolReferenceButtonStyle"
        BasedOn="{StaticResource ToggleCommandButtonStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Name="container"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}">

                        <Rectangle
                            x:Name="mouseOver"
                            Grid.RowSpan="2"
                            Fill="{DynamicResource CommandPressedBackground}"
                            Opacity="0" />

                        <Rectangle
                            x:Name="background"
                            Grid.RowSpan="2"
                            Fill="{DynamicResource CommandPressedBackground}"
                            Opacity="0" />

                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CommandPressedForeground}" />
                            <Setter TargetName="background" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="mouseOver" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="background" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="container" Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ToolReferenceTemplate" DataType="{x:Type tools:ToolReference}">
        <ToggleButton
            x:Name="ToggleButton"
            IsChecked="{Binding Tool.IsOpen, Mode=TwoWay}"
            IsEnabled="{Binding ToolReferenceEnable}"
            Style="{StaticResource ToolReferenceButtonStyle}"
            Visibility="{Binding Visibility}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ContentPresenter
                    Margin="0,5,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Content="{Binding Tool}"
                    ContentTemplate="{StaticResource CommandContentTemplate}" />

                <Menu
                    x:Name="Menu"
                    Grid.Row="1"
                    Height="Auto"
                    MinHeight="20"
                    HorizontalAlignment="Stretch"
                    Background="Transparent">
                    <MenuItem
                        x:Name="MenuItem"
                        Height="20"
                        ItemContainerStyleSelector="{DynamicResource MenuItemCommandElementStyleSelector}"
                        ItemsSource="{Binding ToolCommands}"
                        Style="{StaticResource CommandGroupMenuItemStyle}">
                        <MenuItem.Header>
                            <Path
                                x:Name="ContextMenuButtonIcon"
                                Grid.Row="1"
                                Width="18"
                                Margin="-1,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"
                                Fill="{Binding Foreground, ElementName=MenuItem}"
                                IsHitTestVisible="False"
                                Stretch="Uniform" />
                        </MenuItem.Header>
                    </MenuItem>
                </Menu>
            </Grid>
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseRightButtonUp">
                    <b:ChangePropertyAction
                        PropertyName="IsSubmenuOpen"
                        TargetName="MenuItem"
                        Value="True" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </ToggleButton>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Tool.CanBeDisplayed}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ToolCommands.Count}" Value="0">
                <Setter TargetName="Menu" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger SourceName="MenuItem" Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="ContextMenuButtonIcon" Property="Fill" Value="{DynamicResource CommandPressedForeground}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ToolGroupTemplate" DataType="{x:Type tools:ToolGroup}">
        <DockPanel IsEnabled="{Binding IsEnabled}" Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <DockPanel DockPanel.Dock="Top">
                <TextBlock
                    x:Name="TextBlock"
                    MaxWidth="{StaticResource CommandWidth}"
                    HorizontalAlignment="Center"
                    DockPanel.Dock="Top"
                    Text="{Binding LocalizedName}"
                    TextAlignment="Center"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
                <Rectangle
                    Height="1"
                    Margin="5,1,5,5"
                    HorizontalAlignment="Stretch"
                    DockPanel.Dock="Top"
                    Fill="{Binding Foreground, ElementName=TextBlock}" />
            </DockPanel>
            <ItemsControl
                DockPanel.Dock="Bottom"
                ItemTemplateSelector="{DynamicResource ToolElementDataTemplateSelector}"
                ItemsSource="{Binding Tools}" />
        </DockPanel>
    </DataTemplate>

    <dataTemplateSelectors:GenericDataTemplateSelector x:Key="ToolElementDataTemplateSelector">
        <StaticResource ResourceKey="ToolReferenceTemplate" />
        <StaticResource ResourceKey="ToolGroupTemplate" />
    </dataTemplateSelectors:GenericDataTemplateSelector>

</ResourceDictionary>
