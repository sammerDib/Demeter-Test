<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Controls"
    xmlns:dependencyObjects="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions">

    <Style x:Key="UniformColumnItemsControlItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">

                    <controls:Card x:Name="Card" IsShadowEnabled="False">
                        <ContentPresenter
                            x:Name="LPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </controls:Card>

                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelectionEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:UniformColumnItemsControl}}}" Value="True" />
                                <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Card" Property="BorderBrush" Value="{DynamicResource OutlinedCardBorderBrush}" />
                            <Setter TargetName="Card" Property="BorderThickness" Value="2" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelectionEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:UniformColumnItemsControl}}}" Value="True" />
                                <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Card" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                            <Setter TargetName="Card" Property="BorderThickness" Value="2" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:UniformColumnItemsControl}">
        <Setter Property="ColumnsSeparation" Value="{StaticResource PanelMargin}" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource UniformColumnItemsControlItemStyle}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        IsVirtualizing="True"
                        Orientation="Horizontal"
                        VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:UniformColumnItemsControl">
                    <DockPanel>

                        <controls:Card DockPanel.Dock="Left" Visibility="{TemplateBinding NavigationVisibility}">
                            <Button
                                Height="Auto"
                                VerticalAlignment="Stretch"
                                dependencyObjects:Icon.Geometry="{StaticResource BackIcon}"
                                Background="Transparent"
                                Command="{TemplateBinding ScrollToLeftCommand}" />
                        </controls:Card>

                        <controls:Card DockPanel.Dock="Right" Visibility="{TemplateBinding NavigationVisibility}">
                            <controls:Card.Margin>
                                <Thickness Left="{StaticResource PanelMargin}" />
                            </controls:Card.Margin>
                            <Button
                                Height="Auto"
                                VerticalAlignment="Stretch"
                                dependencyObjects:Icon.Geometry="{StaticResource ForwardIcon}"
                                Background="Transparent"
                                Command="{TemplateBinding ScrollToRightCommand}" />
                        </controls:Card>

                        <ScrollViewer
                            x:Name="PART_ScrollViewer"
                            Padding="{TemplateBinding Padding}"
                            CanContentScroll="True"
                            Effect="{StaticResource E95ElementsShadow}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Disabled">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
