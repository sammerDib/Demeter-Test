<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <SolidColorBrush x:Key="ExpanderForeground" Color="{DynamicResource PanelForeground}" />
    <SolidColorBrush x:Key="ExpanderBackground" Color="Transparent" />
    <SolidColorBrush
        x:Key="ExpanderBorderBrush"
        Opacity="{StaticResource DisabledOpacity}"
        Color="{DynamicResource PanelForeground}" />

    <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <Grid
                            x:Name="ExpandPath"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Opacity=".38"
                            RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Viewbox Height="6" Margin="8">
                                <Path
                                    x:Name="path"
                                    Data="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Fill" />
                            </Viewbox>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Unchecked" To="Checked">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuarticEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition
                                        GeneratedDuration="0"
                                        From="Checked"
                                        To="Unchecked">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuarticEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-180" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="12,24,12,24" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                Grid.Row="0"
                                HorizontalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{StaticResource ExpanderToggleButtonStyle}">
                                <ToggleButton.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </ToggleButton.RenderTransform>
                            </ToggleButton>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,16,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="12,24,12,24" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                Grid.Row="0"
                                HorizontalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{StaticResource ExpanderToggleButtonStyle}">
                                <ToggleButton.RenderTransform>
                                    <RotateTransform Angle="90" />
                                </ToggleButton.RenderTransform>
                            </ToggleButton>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,16,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="24,12,24,12" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Margin="0,0,16,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            <ToggleButton
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderToggleButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="24,12,24,12" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Margin="0,0,16,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                            <ToggleButton
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{StaticResource ExpanderToggleButtonStyle}">
                                <ToggleButton.RenderTransform>
                                    <RotateTransform Angle="-180" />
                                </ToggleButton.RenderTransform>
                            </ToggleButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ExpanderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ExpanderForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel Background="{TemplateBinding Background}">

                            <ToggleButton
                                Name="HeaderSite"
                                BorderThickness="0"
                                Content="{TemplateBinding Header}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Cursor="Hand"
                                DockPanel.Dock="Top"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsTabStop="False"
                                Opacity=".87"
                                Style="{StaticResource ExpanderDownHeaderStyle}"
                                TextElement.FontSize="15" />

                            <Border Name="ContentSite" DockPanel.Dock="Bottom">
                                <StackPanel
                                    Name="ContentPanel"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <StackPanel.Height>
                                        <MultiBinding Converter="{StaticResource MathMultiplierConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualHeight" />
                                            <Binding ElementName="PART_Content" Path="Opacity" />
                                        </MultiBinding>
                                    </StackPanel.Height>
                                    <StackPanel.Width>
                                        <MultiBinding Converter="{StaticResource MathMultiplierConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualWidth" />
                                            <Binding ElementName="PART_Content" Path="Opacity" />
                                        </MultiBinding>
                                    </StackPanel.Width>
                                    <ContentPresenter
                                        Name="PART_Content"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Focusable="False" />
                                </StackPanel>
                            </Border>

                        </DockPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation
                                                Storyboard.TargetName="PART_Content"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="{StaticResource ExpandAnimationDuration}" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation
                                                Storyboard.TargetName="PART_Content"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="{StaticResource ExpandAnimationDuration}" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Content"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Content"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="behaviors:ExpanderBehaviors.CollapseHeader" Value="True">
                            <Setter TargetName="HeaderSite" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="behaviors:ExpanderBehaviors.CollapseContent" Value="True">
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ContentPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="ContentPanel" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ContentPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="ContentPanel" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ContentPanel" Property="Orientation" Value="Vertical" />
                            <Setter TargetName="ContentPanel" Property="Width" Value="Auto" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="ContentPanel" Property="Orientation" Value="Vertical" />
                            <Setter TargetName="ContentPanel" Property="Width" Value="Auto" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderDownHeaderStyle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="LeftExpanderStyle"
        BasedOn="{StaticResource {x:Type Expander}}"
        TargetType="{x:Type Expander}">
        <Setter Property="BorderBrush" Value="{DynamicResource SeparatorBackground}" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="ExpandDirection" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel Background="{TemplateBinding Background}">

                            <ToggleButton
                                Name="HeaderSite"
                                BorderThickness="0"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Cursor="Hand"
                                DockPanel.Dock="Right"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsTabStop="False"
                                Opacity=".87"
                                Style="{StaticResource ExpanderLeftHeaderStyle}"
                                TextElement.FontSize="15">
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </Grid.LayoutTransform>
                                    <ContentPresenter Content="{TemplateBinding Header}" />
                                </Grid>
                            </ToggleButton>

                            <Border Name="ContentSite" DockPanel.Dock="Left">
                                <StackPanel
                                    Name="ContentPanel"
                                    Height="Auto"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Orientation="Horizontal">
                                    <StackPanel.Width>
                                        <MultiBinding Converter="{StaticResource MathMultiplierConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualWidth" />
                                            <Binding ElementName="PART_Content" Path="Opacity" />
                                        </MultiBinding>
                                    </StackPanel.Width>
                                    <ContentPresenter
                                        Name="PART_Content"
                                        Height="{Binding ActualHeight, ElementName=HeaderSite}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Focusable="False" />
                                </StackPanel>
                            </Border>

                        </DockPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation
                                                Storyboard.TargetName="PART_Content"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="{StaticResource ExpandAnimationDuration}" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation
                                                Storyboard.TargetName="PART_Content"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="{StaticResource ExpandAnimationDuration}" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Content"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Content"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ExpanderWithoutHeaderTemplate" TargetType="{x:Type Expander}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel Background="{TemplateBinding Background}">
                <Border Name="ContentSite" DockPanel.Dock="Bottom">
                    <StackPanel
                        Name="ContentPanel"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel.Height>
                            <MultiBinding Converter="{StaticResource MathMultiplierConverter}">
                                <Binding ElementName="PART_Content" Path="ActualHeight" />
                                <Binding ElementName="PART_Content" Path="Opacity" />
                            </MultiBinding>
                        </StackPanel.Height>
                        <StackPanel.Width>
                            <MultiBinding Converter="{StaticResource MathMultiplierConverter}">
                                <Binding ElementName="PART_Content" Path="ActualWidth" />
                                <Binding ElementName="PART_Content" Path="Opacity" />
                            </MultiBinding>
                        </StackPanel.Width>
                        <ContentPresenter
                            Name="PART_Content"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Focusable="False" />
                    </StackPanel>
                </Border>
            </DockPanel>
        </Border>
    </ControlTemplate>

</ResourceDictionary>
