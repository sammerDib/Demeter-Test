<equipment:MachineModuleView
    x:Class="UnitySC.GUI.Common.UIComponents.Components.Equipment.Modules.Aligner.AlignerModule"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:UnitySC.GUI.Common.UIComponents.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enums="clr-namespace:UnitySC.Equipment.Abstractions.Vendor.Devices.Enums;assembly=UnitySC.Equipment.Abstractions"
    xmlns:equipment="clr-namespace:UnitySC.GUI.Common.UIComponents.Components.Equipment"
    xmlns:locationSourceDestination="clr-namespace:UnitySC.GUI.Common.UIComponents.Components.Equipment.LocationSourceDestination"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vendorControls="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Controls"
    xmlns:wafer="clr-namespace:UnitySC.GUI.Common.Vendor.Views.Panels.EquipmentHandling.Wafer"
    xmlns:aligner="clr-namespace:UnitySC.GUI.Common.UIComponents.Components.Equipment.Modules.Aligner"
    x:Name="UserControlAligner"
    d:DataContext="{d:DesignInstance aligner:AlignerModuleViewModel,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Style="{StaticResource MachineModuleViewStyle}"
    mc:Ignorable="d">
    <controls:AdornedControl
        HorizontalAdornerPlacement="Inside"
        IsAdornerVisible="True"
        VerticalAdornerPlacement="Outside">

        <controls:AdornedControl.AdornerContent>
            <Grid Margin="0,-25,0,0" IsHitTestVisible="False">
                <locationSourceDestination:LocationSourceDestination HorizontalAlignment="Left" SelectionState="{Binding ElementName=UserControlAligner, Path=SelectionState}">
                    <locationSourceDestination:LocationSourceDestination.Style>
                        <Style TargetType="{x:Type UserControl}">
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UserControlAligner, Path=(equipment:ModuleOrientation.Orientation)}" Value="{x:Static equipment:ModuleOrientationValue.Bottom}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Bottom" />
                                    <Setter Property="Margin" Value="-45,0,0,32" />
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=UserControlAligner, Path=(equipment:ModuleOrientation.Orientation)}" Value="{x:Static equipment:ModuleOrientationValue.Top}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Bottom" />
                                    <Setter Property="Margin" Value="0,0,0,-25" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </locationSourceDestination:LocationSourceDestination.Style>
                </locationSourceDestination:LocationSourceDestination>
                <StackPanel
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Vertical">

                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UserControlAligner, Path=(equipment:ModuleOrientation.Orientation)}" Value="{x:Static equipment:ModuleOrientationValue.Bottom}">
                                    <Setter Property="Margin" Value="0,25,-20,0" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=UserControlAligner, Path=(equipment:ModuleOrientation.Orientation)}" Value="{x:Static equipment:ModuleOrientationValue.Top}">
                                    <Setter Property="Margin" Value="0,60,-20,0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <vendorControls:Icon Foreground="{DynamicResource SeverityErrorBrush}">
                        <vendorControls:Icon.Style>
                            <Style BasedOn="{StaticResource {x:Type vendorControls:Icon}}" TargetType="{x:Type vendorControls:Icon}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Module.IsCommunicating}" Value="False">
                                        <Setter Property="Data" Value="{StaticResource DisconnectedIcon}" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Module.IsCommunicating}" Value="True" />
                                            <Condition Binding="{Binding Module.State}" Value="Maintenance" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Data" Value="{StaticResource WarningIcon}" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </vendorControls:Icon.Style>
                    </vendorControls:Icon>
                </StackPanel>
            </Grid>
        </controls:AdornedControl.AdornerContent>

        <Grid>

            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Top">
                <Grid>

                    <Viewbox
                        Width="15"
                        Margin="0,2,0,0"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1">
                        <vendorControls:Icon
                            x:Name="IconFiducial"
                            Height="Auto"
                            Data="{StaticResource UndoIcon}" />
                        <Viewbox.Style>
                            <Style TargetType="{x:Type Viewbox}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Module.State}" Value="{x:Static enums:OperatingModes.Executing}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Viewbox.Style>
                    </Viewbox>

                    <Control
                        x:Name="ControlAligner"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Template="{StaticResource AlignerEmpty}">
                        <Control.Style>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="19.5" CenterY="18" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(equipment:ModuleOrientation.Orientation), RelativeSource={RelativeSource Self}}" Value="{x:Static equipment:ModuleOrientationValue.Left}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" CenterX="19.5" CenterY="18" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(equipment:ModuleOrientation.Orientation), RelativeSource={RelativeSource Self}}" Value="{x:Static equipment:ModuleOrientationValue.Top}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="270" CenterX="19.5" CenterY="18" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(equipment:ModuleOrientation.Orientation), RelativeSource={RelativeSource Self}}" Value="{x:Static equipment:ModuleOrientationValue.Right}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="0" CenterX="19.5" CenterY="18" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(equipment:ModuleOrientation.Orientation), RelativeSource={RelativeSource Self}}" Value="{x:Static equipment:ModuleOrientationValue.Bottom}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="90" CenterX="19.5" CenterY="18" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Control.Style>
                    </Control>

                    <locationSourceDestination:RectangleSourceDestination SelectionState="{Binding ElementName=UserControlAligner, Path=SelectionState}">
                        <locationSourceDestination:RectangleSourceDestination.Style>
                            <Style TargetType="{x:Type locationSourceDestination:RectangleSourceDestination}">
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(equipment:ModuleOrientation.Orientation), RelativeSource={RelativeSource Self}}" Value="{x:Static equipment:ModuleOrientationValue.Top}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="90" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(equipment:ModuleOrientation.Orientation), RelativeSource={RelativeSource Self}}" Value="{x:Static equipment:ModuleOrientationValue.Bottom}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="90" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </locationSourceDestination:RectangleSourceDestination.Style>
                    </locationSourceDestination:RectangleSourceDestination>

                    <Viewbox
                        Width="15"
                        Margin="0,0,0,2"
                        VerticalAlignment="Bottom"
                        Panel.ZIndex="1"
                        RenderTransformOrigin="0.5,0.5">
                        <Viewbox.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="-1" ScaleY="-1" />
                            </TransformGroup>
                        </Viewbox.RenderTransform>
                        <vendorControls:Icon Height="Auto" Data="{StaticResource UndoIcon}" />
                        <Viewbox.Style>
                            <Style TargetType="{x:Type Viewbox}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Module.State}" Value="{x:Static enums:OperatingModes.Executing}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Viewbox.Style>
                    </Viewbox>
                </Grid>
            </Viewbox>

            <wafer:Wafer
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                DetectionError="{Binding Module.SubstrateDetectionError}"
                Source="{Binding Module.SimplifiedWaferId}"
                Status="{Binding Module.WaferStatus}"
                WaferHorizontalAlignment="Center"
                WaferSize="{Binding Module.WaferDimension}">
                <wafer:Wafer.Style>
                    <Style TargetType="{x:Type wafer:Wafer}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Module.Location.Material}" Value="{x:Null}" />
                                    <Condition Binding="{Binding Module.SubstrateDetectionError}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Hidden" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </wafer:Wafer.Style>
            </wafer:Wafer>

        </Grid>
    </controls:AdornedControl>
</equipment:MachineModuleView>
