<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:e87="clr-namespace:Agileo.Semi.Gem300.Abstractions.E87;assembly=Agileo.Semi.Gem300.Abstractions"
    xmlns:enums="clr-namespace:UnitySC.Equipment.Abstractions.Vendor.Devices.Enums;assembly=UnitySC.Equipment.Abstractions"
    xmlns:equipment="clr-namespace:UnitySC.GUI.Common.Equipment.LoadPort"
    xmlns:material="clr-namespace:UnitySC.Equipment.Abstractions.Material;assembly=UnitySC.Equipment.Abstractions">

    <LinearGradientBrush x:Key="UnknownWaferPresenceBrush" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="8,0.5" EndPoint="0,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="{DynamicResource PanelBackground}" />
            <GradientStop Offset="0.3" Color="{DynamicResource PanelBackground}" />
            <GradientStop Offset="0.3" Color="{DynamicResource PanelForeground}" />
            <GradientStop Offset="1" Color="{DynamicResource PanelForeground}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="SlotMapTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Courier New" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="SimplifiedSlotMapTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Courier New" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <DataTemplate x:Key="SlotItemTemplate" DataType="{x:Type equipment:Slot}">
        <Grid x:Name="Grid" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="B" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="C" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse
                x:Name="IndexEllipse"
                Grid.Column="0"
                Width="5"
                Height="5"
                Margin="10,0,10,0"
                HorizontalAlignment="Right"
                Fill="#939393"
                Visibility="{Binding Index, Converter={StaticResource Int5ModuloToVisibilityConverter}}" />
            <TextBlock
                Grid.Column="1"
                Margin="0,0,10,0"
                HorizontalAlignment="Right"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding Index}" />
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Rectangle
                    x:Name="WaferState"
                    Width="50"
                    Margin="0,0,10,0" />
                <TextBlock
                    x:Name="WaferStateTextBlock"
                    Foreground="{Binding ElementName=WaferState, Path=Fill}"
                    Style="{StaticResource SlotMapTextBlockStyle}"
                    Text="{Binding State, Converter={StaticResource TextToHumanizedTextConverter}}" />
            </StackPanel>
            <TextBlock
                Grid.Column="3"
                Margin="0,0,10,0"
                HorizontalAlignment="Center"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding SubstrateId}" />
            <TextBlock
                Grid.Column="4"
                Margin="0,0,10,0"
                HorizontalAlignment="Center"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding LotId}" />
        </Grid>

        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding Index, Converter={StaticResource Int2ModuloToVisibilityConverter}}" Value="{x:Static Visibility.Collapsed}">
                <Setter TargetName="Grid" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.15" Color="{DynamicResource PanelForeground}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.Undefined}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource UnknownWaferPresenceBrush}" />
                <Setter TargetName="WaferStateTextBlock" Property="Foreground" Value="{DynamicResource BusinessPanelForeground}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.Empty}">
                <Setter TargetName="WaferState" Property="Fill" Value="Transparent" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.NotEmpty}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource BusinessPanelForeground}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.CorrectlyOccupied}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource SeveritySuccessBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.DoubleSlotted}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource SeverityErrorBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="7" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.CrossSlotted}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource SeverityErrorBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SimplifiedSlotItemTemplate" DataType="{x:Type equipment:IndexedSlotState}">
        <Grid
            x:Name="Grid"
            MinWidth="10"
            ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition x:Name="ColumnDefinitionRectangle" Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="TextBlockIndex"
                Grid.Column="0"
                Width="10"
                Margin="0,0,0,0"
                HorizontalAlignment="Right"
                FontSize="{StaticResource FontSizeMini}"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding Index}"
                TextAlignment="Right"
                Visibility="{Binding Index, Converter={StaticResource UnityInt5ModuloToVisibilityConverter}}" />
            <Ellipse
                x:Name="IndexEllipse"
                Grid.Column="1"
                Width="5"
                Height="5"
                Margin="10,0,10,0"
                HorizontalAlignment="Right"
                Fill="#939393"
                Visibility="{Binding Index, Converter={StaticResource UnityInt5ModuloToVisibilityConverter}}" />
            <Grid Name="GridHelper" Grid.Column="2" />
            <Border
                x:Name="WaferState"
                Grid.Column="2"
                Margin="0,0,0,2"
                ToolTip="{Binding State}">
            </Border>
        </Grid>

        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.NoWafer}">
                <Setter TargetName="WaferState" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeveritySuccessBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.Processed}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessedBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.WaitingProcess}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusWaitingProcessBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.Processing}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessingBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.ProcessingFailed}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessingFailedBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.Aborted}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessingAbortedBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.DoubleWafer}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.FrontBow}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.CrossWafer}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.Thick}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.Error}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.Thin}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SimplifiedSelectSlotItemTemplate" DataType="{x:Type equipment:IndexedSlotState}">
        <Grid x:Name="Grid" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="TextBlockIndex"
                Grid.Column="0"
                Margin="0,0,0,0"
                HorizontalAlignment="Right"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding Index}"
                TextAlignment="Right"
                Visibility="{Binding Index, Converter={StaticResource UnityInt5ModuloToVisibilityConverter}}" />
            <Ellipse
                x:Name="IndexEllipse"
                Grid.Column="1"
                Width="8"
                Height="8"
                Margin="10,0,10,0"
                HorizontalAlignment="Right"
                Fill="#939393"
                Visibility="{Binding Index, Converter={StaticResource UnityInt5ModuloToVisibilityConverter}}" />
            <Border
                x:Name="WaferState"
                Grid.Column="2"
                Margin="0,0,0,1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ToolTip="{Binding State}" />
            <TextBlock
                x:Name="StateTextBlock"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="White"
                Text="{Binding Substrate.Name}"
                ToolTip="{Binding State}"/>
        </Grid>
        <DataTemplate.Triggers>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate}" Value="{x:Null}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.NoWafer}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="Transparent" />
                <Setter TargetName="WaferState" Property="BorderThickness" Value="1" />
                <Setter TargetName="WaferState" Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.NoWafer}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="Transparent" />
                <Setter TargetName="WaferState" Property="BorderThickness" Value="1" />
                <Setter TargetName="WaferState" Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.HasWafer}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeveritySuccessBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.DoubleWafer}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.CrossWafer}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.Error}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.FrontBow}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.Thick}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.None}" />
                    <Condition Binding="{Binding State}" Value="{x:Static material:SlotState.Thin}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.Processed}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessedBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.WaitingProcess}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusWaitingProcessBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.Processing}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessingBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.ProcessingFailed}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessingFailedBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Substrate.Status}" Value="{x:Static enums:WaferStatus.Aborted}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusProcessingAbortedBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ListBoxItem.IsSelected)}" Value="True">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusWaitingProcessBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="OriginalSlotItemTemplate" DataType="{x:Type equipment:IndexedSlotState}">
        <Grid x:Name="Grid" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="TextBlockIndex"
                Grid.Column="0"
                Margin="0,0,0,0"
                HorizontalAlignment="Right"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding Index}"
                TextAlignment="Right"
                Visibility="{Binding Index, Converter={StaticResource UnityInt5ModuloToVisibilityConverter}}" />
            <Ellipse
                x:Name="IndexEllipse"
                Grid.Column="1"
                Width="8"
                Height="8"
                Margin="10,0,10,0"
                HorizontalAlignment="Right"
                Fill="#939393"
                Visibility="{Binding Index, Converter={StaticResource UnityInt5ModuloToVisibilityConverter}}" />
            <Border
                x:Name="WaferState"
                Grid.Column="2"
                Margin="0,0,0,1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ToolTip="{Binding State}" />
            <TextBlock
                x:Name="StateTextBlock"
                Grid.Column="2"
                Margin="5,0,5,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="White"
                Text="{Binding Substrate.Name}" />
        </Grid>
        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.NoWafer}">
                <Setter TargetName="WaferState" Property="Background" Value="Transparent" />
                <Setter TargetName="WaferState" Property="BorderThickness" Value="1" />
                <Setter TargetName="WaferState" Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.HasWafer}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeveritySuccessBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.DoubleWafer}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.CrossWafer}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.Error}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.FrontBow}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.Thick}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static material:SlotState.Thin}">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource SeverityErrorBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ListBoxItem.IsSelected)}" Value="True">
                <Setter TargetName="WaferState" Property="Background" Value="{DynamicResource WaferStatusWaitingProcessBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SlotItemWithoutStateTextTemplate" DataType="{x:Type equipment:Slot}">
        <Grid x:Name="Grid" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="B" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="C" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse
                x:Name="IndexEllipse"
                Grid.Column="0"
                Width="5"
                Height="5"
                Margin="10,0,10,0"
                HorizontalAlignment="Right"
                Fill="#939393"
                Visibility="{Binding Index, Converter={StaticResource Int5ModuloToVisibilityConverter}}" />
            <TextBlock
                Grid.Column="1"
                Margin="0,0,10,0"
                HorizontalAlignment="Right"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding Index}" />
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Rectangle
                    x:Name="WaferState"
                    Width="50"
                    Margin="0,0,10,0"
                    ToolTip="{Binding State}" />
                <TextBlock
                    x:Name="WaferStateTextBlock"
                    Foreground="{Binding ElementName=WaferState, Path=Fill}"
                    Style="{StaticResource SlotMapTextBlockStyle}"
                    Text="{Binding State, Converter={StaticResource TextToHumanizedTextConverter}}"
                    Visibility="Collapsed" />
            </StackPanel>
            <TextBlock
                Grid.Column="3"
                Margin="0,0,10,0"
                HorizontalAlignment="Center"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding SubstrateId}" />
            <TextBlock
                Grid.Column="4"
                Margin="0,0,10,0"
                HorizontalAlignment="Center"
                Style="{StaticResource SlotMapTextBlockStyle}"
                Text="{Binding LotId}" />
        </Grid>
        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding Index, Converter={StaticResource Int2ModuloToVisibilityConverter}}" Value="{x:Static Visibility.Collapsed}">
                <Setter TargetName="Grid" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.15" Color="{DynamicResource PanelForeground}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.Undefined}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource UnknownWaferPresenceBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.Empty}">
                <Setter TargetName="WaferState" Property="Fill" Value="Transparent" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.NotEmpty}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource BusinessPanelForeground}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.CorrectlyOccupied}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource SeveritySuccessBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.DoubleSlotted}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource SeverityErrorBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="7" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static e87:SlotState.CrossSlotted}">
                <Setter TargetName="WaferState" Property="Fill" Value="{DynamicResource SeverityErrorBrush}" />
                <Setter TargetName="WaferState" Property="Height" Value="3" />
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>
