//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitySC.Equipment.Abstractions.Devices.DriveableProcessModule.Resources {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UnitySC.Equipment.Abstractions.Devices.DriveableProcessModule.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Device is not a process module.
        /// </summary>
        public static string DeviceNotAProcessModule {
            get {
                return ResourceManager.GetString("DeviceNotAProcessModule", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Door is closed.
        /// </summary>
        public static string DoorClosed {
            get {
                return ResourceManager.GetString("DoorClosed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to PM[0} is not supported.
        /// </summary>
        public static string InstanceNotSupported {
            get {
                return ResourceManager.GetString("InstanceNotSupported", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Process module is not idle.
        /// </summary>
        public static string NotIdle {
            get {
                return ResourceManager.GetString("NotIdle", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Process module is offline.
        /// </summary>
        public static string IsOffline
        {
            get
            {
                return ResourceManager.GetString("IsOffline", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Not ready to load/unload.
        /// </summary>
        public static string NotReadyToLoadUnload {
            get {
                return ResourceManager.GetString("NotReadyToLoadUnload", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ProcessModule has only one slot.
        /// </summary>
        public static string ProcessModuleHaveOnlyOneSlot {
            get {
                return ResourceManager.GetString("ProcessModuleHaveOnlyOneSlot", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Recipe not selected.
        /// </summary>
        public static string RecipeNotSelected {
            get {
                return ResourceManager.GetString("RecipeNotSelected", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Process Module State Invalid.
        /// </summary>
        public static string ProcessModuleStateInvalid
        {
            get
            {
                return ResourceManager.GetString("ProcessModuleStateInvalid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Substrate Detection Error.
        /// </summary>
        public static string SubstrateDetectionError
        {
            get
            {
                return ResourceManager.GetString("SubstrateDetectionError", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Wafer Size Not Supported.
        /// </summary>
        public static string WaferSizeNotSupported
        {
            get
            {
                return ResourceManager.GetString("WaferSizeNotSupported", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Material Not Supported.
        /// </summary>
        public static string MaterialNotSupported
        {
            get
            {
                return ResourceManager.GetString("MaterialNotSupported", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Transfert Not Validated.
        /// </summary>
        public static string TransfertNotValidated
        {
            get
            {
                return ResourceManager.GetString("TransfertNotValidated", resourceCulture);
            }
        }
    }
}
