<UserControl
    x:Class="UnitySC.UTO.Controller.Views.Panels.DataFlow.Popup.LoadPmPopupView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:abstractAligner="clr-namespace:UnitySC.Equipment.Abstractions.Devices.Aligner.Enums;assembly=UnitySC.Equipment.Abstractions"
    xmlns:controls="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Controls;assembly=UnitySC.GUI.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataFlow="clr-namespace:UnitySC.UTO.Controller.Views.Panels.DataFlow"
    xmlns:localize="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions.Localize;assembly=UnitySC.GUI.Common"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:popup="clr-namespace:UnitySC.UTO.Controller.Views.Panels.DataFlow.Popup"
    xmlns:resources="clr-namespace:UnitySC.GUI.Common.Resources;assembly=UnitySC.GUI.Common"
    xmlns:semiDefinitions="clr-namespace:Agileo.SemiDefinitions;assembly=Agileo.SemiDefinitions"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    d:DataContext="{d:DesignInstance Type=popup:LoadPmPopupViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="AlignTypeEnum"
            MethodName="GetValues"
            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="abstractAligner:AlignType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <controls:Card
            Margin="0,0,5,0"
            DockPanel.Dock="Left"
            Style="{StaticResource OutlinedCardStyle}">
            <ItemsControl Name="ItemsControl" ItemsSource="{Binding SubstrateSelectionViewers}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type popup:LoadPmSubstrateSelectionViewModel}">
                        <popup:LoadPmSubstrateSelectionView
                            Margin="5"
                            VerticalAlignment="Stretch"
                            SelectionChanged="LpSubstrateSelection_OnSelectionChanged" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid IsItemsHost="True" Rows="1" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </controls:Card>

        <controls:Card
            Grid.Column="1"
            Margin="0,0,5,0"
            DockPanel.Dock="Right"
            Style="{StaticResource OutlinedCardStyle}">

            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <controls:PropertyEditor
                    HorizontalAlignment="Left"
                    Orientation="Vertical"
                    Margin="5,0,0,10"
                    PropertyName="{localize:Static resources:EquipmentResources.PROCESS_MODULES}">
                    <controls:ChipsSelector Padding="5,0,0,0" ItemsSource="{Binding ProcessModules}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedProcessModule}"/>
                </controls:PropertyEditor>

                <controls:PropertyEditor
                    Grid.Row="2"
                    Orientation="Vertical"
                    Margin="5,0,0,10"
                    PropertyName="{localize:Static dataFlow:DataFlowResources.DATAFLOW_ROBOT_ARM}">
                    <controls:ChipsSelector Padding="5,0,0,0" SelectedItem="{Binding RobotArm, Mode=TwoWay}">
                        <semiDefinitions:RobotArm>Arm1</semiDefinitions:RobotArm>
                        <semiDefinitions:RobotArm>Arm2</semiDefinitions:RobotArm>

                        <controls:ChipsSelector.ItemTemplate>
                            <DataTemplate DataType="{x:Type semiDefinitions:RobotArm}">
                                <StackPanel Orientation="Horizontal">

                                    <controls:Icon
                                        x:Name="IconArm"
                                        Margin="0,0,10,0"
                                        Data="{StaticResource UpperArmIcon}" />
                                    <TextBlock x:Name="TextBlock" Text="{Binding}" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="Arm1">
                                        <Setter TargetName="TextBlock" Property="Text" Value="{localize:Static resources:EquipmentResources.ROBOTCARD_ARM1}" />
                                        <Setter TargetName="IconArm" Property="Data" Value="{StaticResource UpperArmIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding}" Value="Arm2">
                                        <Setter TargetName="TextBlock" Property="Text" Value="{localize:Static resources:EquipmentResources.ROBOTCARD_ARM2}" />
                                        <Setter TargetName="IconArm" Property="Data" Value="{StaticResource LowerArmIcon}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </controls:ChipsSelector.ItemTemplate>
                    </controls:ChipsSelector>
                </controls:PropertyEditor>

            </Grid>
        </controls:Card>
    </Grid>
</UserControl>
