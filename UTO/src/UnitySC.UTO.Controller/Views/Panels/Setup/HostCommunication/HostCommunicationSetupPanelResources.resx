<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SETUP_HOST_EQUIPMENT_IDENTIFICATION" xml:space="preserve">
    <value>Equipment Identification</value>
  </data>
  <data name="SETUP_HOST_MDLN_DESCRIPTION" xml:space="preserve">
    <value>Equipment model.</value>
  </data>
  <data name="SETUP_HOST_SOFTREV_DESCRIPTION" xml:space="preserve">
    <value>Equipment software revision.</value>
  </data>
  <data name="SETUP_HOST_CONNECTION" xml:space="preserve">
    <value>Connection</value>
  </data>
  <data name="SETUP_HOST_MODE" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="SETUP_HOST_MODE_DESCRIPTION" xml:space="preserve">
    <value>The Active mode is used when the connect procedure is initiated by the Local Entity.</value>
  </data>
  <data name="SETUP_HOST_DEVICE_ID_DESCRIPTION" xml:space="preserve">
    <value>DeviceID of the equipment.</value>
  </data>
  <data name="SETUP_HOST_LOCAL_IP_DESCRIPTION" xml:space="preserve">
    <value>IP adresse of the local computer.</value>
  </data>
  <data name="SETUP_HOST_LOCAL_TCP_PORT_DESCRIPTION" xml:space="preserve">
    <value>Local TCP port you want the remote entity to connect.</value>
  </data>
  <data name="SETUP_HOST_REMOTE_IP_DESCRIPTION" xml:space="preserve">
    <value>IP adresse of the host machine.</value>
  </data>
  <data name="SETUP_HOST_REMOTE_TCP_PORT_DESCRIPTION" xml:space="preserve">
    <value>Remote TCP port for the equipment to connect to.</value>
  </data>
  <data name="SETUP_HOST_ENTITY_BEHAVIOUR_DESCRIPTION" xml:space="preserve">
    <value>This parameter is used in the resolution of contention. The host is designated as the slave. The equipment is designated as the master.</value>
  </data>
  <data name="SETUP_HOST_BAUD_RATE_DESCRIPTION" xml:space="preserve">
    <value>Speed of the serial transceiver. Should be based on system performance.</value>
  </data>
  <data name="SETUP_HOST_SERIAL_PORT_DESCRIPTION" xml:space="preserve">
    <value>Number of the serial port which will be used.</value>
  </data>
  <data name="SETUP_HOST_TIMEOUTS" xml:space="preserve">
    <value>Timeouts</value>
  </data>
  <data name="SETUP_HOST_ESTABLISH_COMMUNICATIONS" xml:space="preserve">
    <value>Establish Communications</value>
  </data>
  <data name="SETUP_HOST_T3" xml:space="preserve">
    <value>T3 - Reply</value>
  </data>
  <data name="SETUP_HOST_T5" xml:space="preserve">
    <value>T5 - Connect Separation</value>
  </data>
  <data name="SETUP_HOST_T6" xml:space="preserve">
    <value>T6 - Control Transaction</value>
  </data>
  <data name="SETUP_HOST_T7" xml:space="preserve">
    <value>T7 - Connection Idle</value>
  </data>
  <data name="SETUP_HOST_T8" xml:space="preserve">
    <value>T8 - Network Intercharacter</value>
  </data>
  <data name="SETUP_HOST_LINKTEST" xml:space="preserve">
    <value>LinkTest - Connection Integrity Check</value>
  </data>
  <data name="SETUP_HOST_T1" xml:space="preserve">
    <value>T1 - Intercharacter</value>
  </data>
  <data name="SETUP_HOST_T2" xml:space="preserve">
    <value>T2 - Protocol</value>
  </data>
  <data name="SETUP_HOST_T4" xml:space="preserve">
    <value>T4 - Interval</value>
  </data>
  <data name="SETUP_HOST_RETRY_LIMIT" xml:space="preserve">
    <value>Retry Limit</value>
  </data>
  <data name="SETUP_HOST_T8_DESCRIPTION" xml:space="preserve">
    <value>Maximum amount of time allowed between successive bytes of a single HSMS message before a communications failure is declared.</value>
  </data>
  <data name="SETUP_HOST_T7_DESCRIPTION" xml:space="preserve">
    <value>Maximum amount of time a TCP/IP connection can remain in the NOT SELECTED state (no HSMS activity) before a communications failure is declared.</value>
  </data>
  <data name="SETUP_HOST_T6_DESCRIPTION" xml:space="preserve">
    <value>Maximum amount of time allowed between an HSMS-level control message and response. If the timer expires, communications failure is declared.</value>
  </data>
  <data name="SETUP_HOST_T5_DESCRIPTION" xml:space="preserve">
    <value>Amount of time which must elapse between successive attempts to actively establish a connection.</value>
  </data>
  <data name="SETUP_HOST_T4_DESCRIPTION" xml:space="preserve">
    <value>Time interval between the successful receipt of a block in a multiblock message, and the successful receipt of the subsequent block of the same message, is limited to time T4.</value>
  </data>
  <data name="SETUP_HOST_T3_SECS1_DESCRIPTION" xml:space="preserve">
    <value>Limit on the length of time that the message protocol is willing to wait after the last block of a primary message has been sent and before the arrival of the first block of the reply.</value>
  </data>
  <data name="SETUP_HOST_T2_DESCRIPTION" xml:space="preserve">
    <value>Limits the time between sending ENQ ("Request to Send") and receiving EOT ("Ready to Receive"), sending EOT and receiving the length byte, and sending the second checksum byte and receiving any character.</value>
  </data>
  <data name="SETUP_HOST_T1_DESCRIPTION" xml:space="preserve">
    <value>Limits the time between receipt of characters within a block after the length byte has been received and until the receipt of the second checksum byte.</value>
  </data>
  <data name="SETUP_HOST_RETRY_LIMIT_DESCRIPTION" xml:space="preserve">
    <value>Maximum number of times the Block Transfer Protocol will attempt to retry sending a block before declaring a failed send.</value>
  </data>
  <data name="SETUP_HOST_LINKTEST_DESCRIPTION" xml:space="preserve">
    <value>Amount of time between successive transmissions HSMS LINKTEST.REQ messages. This is an HSMSLevel heartbeat that can be used to detect communications hardware failure such as a disconnected network cable.</value>
  </data>
  <data name="SETUP_HOST_ESTABLISH_COMMUNICATIONS_DESCRIPTION" xml:space="preserve">
    <value>Interval between attempts to resend a SECS Establish Communications Request (S1,F13).</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_STATES" xml:space="preserve">
    <value>Default States</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_COMMUNICATION_STATE" xml:space="preserve">
    <value>Default Communication State</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_CONTROL_STATE" xml:space="preserve">
    <value>Default Control State</value>
  </data>
  <data name="SETUP_HOST_ON_LINE_FAIL_SUBSTATE" xml:space="preserve">
    <value>On Line Fail Substate</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_ON_LINE_STATE" xml:space="preserve">
    <value>Default On Line State</value>
  </data>
  <data name="SETUP_HOST_TIME_FORMAT" xml:space="preserve">
    <value>Time Format</value>
  </data>
  <data name="SETUP_HOST_SECS2_LOGS" xml:space="preserve">
    <value>SECS-II Logs</value>
  </data>
  <data name="SETUP_HOST_FILE_NAME" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="SETUP_HOST_MAXIMUM_FILE_SIZE" xml:space="preserve">
    <value>Maximum File Size</value>
  </data>
  <data name="SETUP_HOST_LOG_MODE" xml:space="preserve">
    <value>Log Mode</value>
  </data>
  <data name="SETUP_HOST_COMMUNICATION_TYPE_DESCRIPTION" xml:space="preserve">
    <value>Type of connection.</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_COMMUNICATION_STATE_DESCRIPTION" xml:space="preserve">
    <value>Determine the Communication State to active on system initialization.</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_CONTROL_STATE_DESCRIPTION" xml:space="preserve">
    <value>Default control state.</value>
  </data>
  <data name="SETUP_HOST_ON_LINE_FAIL_SUBSTATE_DESCRIPTION" xml:space="preserve">
    <value>State that should be activated when the attempt to go online fails.</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_ON_LINE_STATE_DESCRIPTION" xml:space="preserve">
    <value>State that should be set when the upload attempt is successful.</value>
  </data>
  <data name="SETUP_HOST_TIME_FORMAT_DESCRIPTION" xml:space="preserve">
    <value>Time of day format used by the variable item CLOCK and the data items STIME, TIMESTAMP and TIME.</value>
  </data>
  <data name="SETUP_HOST_FILE_NAME_DESCRIPTION" xml:space="preserve">
    <value>Root name of automation log files. File creation DateTime will be added as suffix.</value>
  </data>
  <data name="SETUP_HOST_MAXIMUM_FILE_SIZE_DESCRIPTION" xml:space="preserve">
    <value>Maximum size of automation log files. Once reached another file is created.</value>
  </data>
  <data name="SETUP_HOST_LOG_MODE_DESCRIPTION" xml:space="preserve">
    <value>Value indicating how logs are handled.</value>
  </data>
  <data name="SETUP_HOST_SECOND" xml:space="preserve">
    <value>second</value>
  </data>
  <data name="SETUP_HOST_BYTE" xml:space="preserve">
    <value>byte</value>
  </data>
  <data name="SETUP_HOST_T3_HSMS_DESCRIPTION" xml:space="preserve">
    <value>Maximum amount oftime between a primary message and the expected response before declaring the transaction closed. If the timer expires, an S9F9 error message is sent.</value>
  </data>
  <data name="SETUP_HOST_MDLN" xml:space="preserve">
    <value>MDLN</value>
  </data>
  <data name="SETUP_HOST_SOFTREV" xml:space="preserve">
    <value>SOFTREV</value>
  </data>
  <data name="SETUP_HOST_EQPSERIALNUM" xml:space="preserve">
    <value>EqpSerialNum</value>
  </data>
  <data name="SETUP_HOST_EQPSERIALNUM_DESCRIPTION" xml:space="preserve">
    <value>Equipment serial number</value>
  </data>
  <data name="SETUP_HOST_E30EQUIPMENTSUPPLIER" xml:space="preserve">
    <value>E30EquipmentSupplier</value>
  </data>
  <data name="SETUP_HOST_E30EQUIPMENTSUPPLIER_DESCRIPTION" xml:space="preserve">
    <value>Equipment supplier</value>
  </data>
  <data name="SETUP_HOST_EQPNAME" xml:space="preserve">
    <value>EqpName</value>
  </data>
  <data name="SETUP_HOST_EQPNAME_DESCRIPTION" xml:space="preserve">
    <value>Equipment name</value>
  </data>
</root>