<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SETUP_HOST_EQUIPMENT_IDENTIFICATION" xml:space="preserve">
    <value>Identification de l'équipement</value>
  </data>
  <data name="SETUP_HOST_MDLN_DESCRIPTION" xml:space="preserve">
    <value>Modèle d'équipement.</value>
  </data>
  <data name="SETUP_HOST_SOFTREV_DESCRIPTION" xml:space="preserve">
    <value>Révision du logiciel de l'équipement.</value>
  </data>
  <data name="SETUP_HOST_CONNECTION" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="SETUP_HOST_MODE" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="SETUP_HOST_MODE_DESCRIPTION" xml:space="preserve">
    <value>Le mode Actif est utilisé lorsque la procédure de connexion est lancée par l'entité locale.</value>
  </data>
  <data name="SETUP_HOST_DEVICE_ID_DESCRIPTION" xml:space="preserve">
    <value>DeviceID de l'équipement.</value>
  </data>
  <data name="SETUP_HOST_LOCAL_IP_DESCRIPTION" xml:space="preserve">
    <value>Adresse IP de l'ordinateur local.</value>
  </data>
  <data name="SETUP_HOST_LOCAL_TCP_PORT_DESCRIPTION" xml:space="preserve">
    <value>Port TCP local auquel l’entité distante doit se connecter.</value>
  </data>
  <data name="SETUP_HOST_REMOTE_IP_DESCRIPTION" xml:space="preserve">
    <value>Adresse IP de la machine hôte.</value>
  </data>
  <data name="SETUP_HOST_REMOTE_TCP_PORT_DESCRIPTION" xml:space="preserve">
    <value>Port TCP distant auquel l'équipement doit se connecter.</value>
  </data>
  <data name="SETUP_HOST_ENTITY_BEHAVIOUR_DESCRIPTION" xml:space="preserve">
    <value>Ce paramètre est utilisé dans la résolution des conflits. L'hôte est désigné comme esclave. L'équipement est désigné comme maître.</value>
  </data>
  <data name="SETUP_HOST_BAUD_RATE_DESCRIPTION" xml:space="preserve">
    <value>Vitesse de l'émetteur-récepteur série. Doit être basé sur les performances du système.</value>
  </data>
  <data name="SETUP_HOST_SERIAL_PORT_DESCRIPTION" xml:space="preserve">
    <value>Numéro du port série qui sera utilisé.</value>
  </data>
  <data name="SETUP_HOST_TIMEOUTS" xml:space="preserve">
    <value>Timeouts</value>
  </data>
  <data name="SETUP_HOST_ESTABLISH_COMMUNICATIONS" xml:space="preserve">
    <value>Establish Communications</value>
  </data>
  <data name="SETUP_HOST_T3" xml:space="preserve">
    <value>T3 - Reply</value>
  </data>
  <data name="SETUP_HOST_T5" xml:space="preserve">
    <value>T5 - Connect Separation</value>
  </data>
  <data name="SETUP_HOST_T6" xml:space="preserve">
    <value>T6 - Control Transaction</value>
  </data>
  <data name="SETUP_HOST_T7" xml:space="preserve">
    <value>T7 - Connection Idle</value>
  </data>
  <data name="SETUP_HOST_T8" xml:space="preserve">
    <value>T8 - Network Intercharacter</value>
  </data>
  <data name="SETUP_HOST_LINKTEST" xml:space="preserve">
    <value>LinkTest - Connection Integrity Check</value>
  </data>
  <data name="SETUP_HOST_T1" xml:space="preserve">
    <value>T1 - Intercharacter</value>
  </data>
  <data name="SETUP_HOST_T2" xml:space="preserve">
    <value>T2 - Protocol</value>
  </data>
  <data name="SETUP_HOST_T4" xml:space="preserve">
    <value>T4 - Interval</value>
  </data>
  <data name="SETUP_HOST_RETRY_LIMIT" xml:space="preserve">
    <value>Retry Limit</value>
  </data>
  <data name="SETUP_HOST_T8_DESCRIPTION" xml:space="preserve">
    <value>Durée maximale autorisée entre les octets successifs d'un même message HSMS avant qu'un échec de communication ne soit déclaré.</value>
  </data>
  <data name="SETUP_HOST_T7_DESCRIPTION" xml:space="preserve">
    <value>Durée maximale pendant laquelle une connexion TCP/IP peut rester dans l'état NOT SELECTED (pas d'activité HSMS) avant que l'échec de communication ne soit déclaré.</value>
  </data>
  <data name="SETUP_HOST_T6_DESCRIPTION" xml:space="preserve">
    <value>Durée maximale autorisée entre un message de contrôle de niveau HSMS et une réponse. Si le temporisateur expire, un échec de communication est déclaré.</value>
  </data>
  <data name="SETUP_HOST_T5_DESCRIPTION" xml:space="preserve">
    <value>Temps qui doit s'écouler entre les tentatives successives pour établir activement une connexion.</value>
  </data>
  <data name="SETUP_HOST_T4_DESCRIPTION" xml:space="preserve">
    <value>Intervalle de temps entre la réception réussie d'un bloc dans un message multibloc et la réception réussie du bloc suivant du même message est limité au temps T4.</value>
  </data>
  <data name="SETUP_HOST_T3_SECS1_DESCRIPTION" xml:space="preserve">
    <value>Limiter la durée pendant laquelle le protocole de message est prêt à attendre après l'envoi du dernier bloc d'un message principal et avant l'arrivée du premier bloc de la réponse.</value>
  </data>
  <data name="SETUP_HOST_T2_DESCRIPTION" xml:space="preserve">
    <value>Limite le temps entre l'envoi de ENQ ("Request to Send") et la réception d'EOT ("Ready to Receive"), l'envoi de l'EOT et la réception de l'octet de longueur, et l'envoi du deuxième octet de somme de contrôle et la réception de n'importe quel caractère.</value>
  </data>
  <data name="SETUP_HOST_T1_DESCRIPTION" xml:space="preserve">
    <value>Limite le temps entre la réception de caractères dans un bloc après la réception de l'octet de longueur et jusqu'à la réception du deuxième octet de somme de contrôle.</value>
  </data>
  <data name="SETUP_HOST_RETRY_LIMIT_DESCRIPTION" xml:space="preserve">
    <value>Nombre maximum de fois où le protocole de transfert de bloc tentera de réessayer d'envoyer un bloc avant de déclarer un échec d'envoi.</value>
  </data>
  <data name="SETUP_HOST_LINKTEST_DESCRIPTION" xml:space="preserve">
    <value>Durée entre les transmissions successives des messages HSMS LINKTEST.REQ. Il s'agit d'un HSMSLevel heartbeat qui peut être utilisé pour détecter une défaillance du matériel de communication tel qu'un câble réseau déconnecté.</value>
  </data>
  <data name="SETUP_HOST_ESTABLISH_COMMUNICATIONS_DESCRIPTION" xml:space="preserve">
    <value>Intervalle entre les tentatives de renvoi d'une demande SECS Establish Communications (S1, F13).</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_STATES" xml:space="preserve">
    <value>États par défaut</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_COMMUNICATION_STATE" xml:space="preserve">
    <value>Default Communication State</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_CONTROL_STATE" xml:space="preserve">
    <value>Default Control State</value>
  </data>
  <data name="SETUP_HOST_ON_LINE_FAIL_SUBSTATE" xml:space="preserve">
    <value>On Line Fail Substate</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_ON_LINE_STATE" xml:space="preserve">
    <value>Default On Line State</value>
  </data>
  <data name="SETUP_HOST_TIME_FORMAT" xml:space="preserve">
    <value>Time Format</value>
  </data>
  <data name="SETUP_HOST_SECS2_LOGS" xml:space="preserve">
    <value>Journaux SECS-II</value>
  </data>
  <data name="SETUP_HOST_FILE_NAME" xml:space="preserve">
    <value>Nom du fichier</value>
  </data>
  <data name="SETUP_HOST_MAXIMUM_FILE_SIZE" xml:space="preserve">
    <value>Taille de fichier maximale</value>
  </data>
  <data name="SETUP_HOST_LOG_MODE" xml:space="preserve">
    <value>Mode du journal</value>
  </data>
  <data name="SETUP_HOST_COMMUNICATION_TYPE_DESCRIPTION" xml:space="preserve">
    <value>Type de connexion.</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_COMMUNICATION_STATE_DESCRIPTION" xml:space="preserve">
    <value>Détermine l'état de communication à activer lors de l'initialisation du système.</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_CONTROL_STATE_DESCRIPTION" xml:space="preserve">
    <value>État de contrôle par défaut.</value>
  </data>
  <data name="SETUP_HOST_ON_LINE_FAIL_SUBSTATE_DESCRIPTION" xml:space="preserve">
    <value>État qui doit être activé lorsque la tentative de connexion échoue.</value>
  </data>
  <data name="SETUP_HOST_DEFAULT_ON_LINE_STATE_DESCRIPTION" xml:space="preserve">
    <value>État à définir lorsque la tentative de téléchargement est réussie.</value>
  </data>
  <data name="SETUP_HOST_TIME_FORMAT_DESCRIPTION" xml:space="preserve">
    <value>Format d'heure utilisé par la variable CLOCK et les data items STIME, TIMESTAMP et TIME.</value>
  </data>
  <data name="SETUP_HOST_FILE_NAME_DESCRIPTION" xml:space="preserve">
    <value>Nom racine des fichiers journaux d'automatisation. La date de création du fichier sera ajoutée comme suffixe.</value>
  </data>
  <data name="SETUP_HOST_MAXIMUM_FILE_SIZE_DESCRIPTION" xml:space="preserve">
    <value>Taille maximale des fichiers journaux d'automatisation. Une fois atteint, un autre fichier est créé.</value>
  </data>
  <data name="SETUP_HOST_LOG_MODE_DESCRIPTION" xml:space="preserve">
    <value>Valeur indiquant comment les journaux sont traités.</value>
  </data>
  <data name="SETUP_HOST_SECOND" xml:space="preserve">
    <value>seconde</value>
  </data>
  <data name="SETUP_HOST_BYTE" xml:space="preserve">
    <value>octet</value>
  </data>
  <data name="SETUP_HOST_T3_HSMS_DESCRIPTION" xml:space="preserve">
    <value>Durée maximale entre un message principal et la réponse attendue avant de déclarer la transaction close. Si le minuteur expire, un message d'erreur S9F9 est envoyé.</value>
  </data>
  <data name="SETUP_HOST_MDLN" xml:space="preserve">
    <value>MDLN</value>
  </data>
  <data name="SETUP_HOST_SOFTREV" xml:space="preserve">
    <value>SOFTREV</value>
  </data>
  <data name="SETUP_HOST_EQPSERIALNUM" xml:space="preserve">
    <value>EqpSerialNum</value>
  </data>
  <data name="SETUP_HOST_E30EQUIPMENTSUPPLIER" xml:space="preserve">
    <value>E30EquipmentSupplier</value>
  </data>
  <data name="SETUP_HOST_EQPSERIALNUM_DESCRIPTION" xml:space="preserve">
    <value>Numéro de série de l'équipement</value>
  </data>
  <data name="SETUP_HOST_E30EQUIPMENTSUPPLIER_DESCRIPTION" xml:space="preserve">
    <value>Fournisseur de l'équipement</value>
  </data>
  <data name="SETUP_HOST_EQPNAME" xml:space="preserve">
    <value>EqpName</value>
  </data>
  <data name="SETUP_HOST_EQPNAME_DESCRIPTION" xml:space="preserve">
    <value>Nom de l'équipement</value>
  </data>
</root>