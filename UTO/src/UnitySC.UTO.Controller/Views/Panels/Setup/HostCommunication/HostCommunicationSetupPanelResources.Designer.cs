//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitySC.UTO.Controller.Views.Panels.Setup.HostCommunication {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class HostCommunicationSetupPanelResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HostCommunicationSetupPanelResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UnitySC.UTO.Controller.Views.Panels.Setup.HostCommunication.HostCommunicationSetu" +
                            "pPanelResources", typeof(HostCommunicationSetupPanelResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed of the serial transceiver. Should be based on system performance..
        /// </summary>
        public static string SETUP_HOST_BAUD_RATE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_BAUD_RATE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to byte.
        /// </summary>
        public static string SETUP_HOST_BYTE {
            get {
                return ResourceManager.GetString("SETUP_HOST_BYTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of connection..
        /// </summary>
        public static string SETUP_HOST_COMMUNICATION_TYPE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_COMMUNICATION_TYPE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection.
        /// </summary>
        public static string SETUP_HOST_CONNECTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Communication State.
        /// </summary>
        public static string SETUP_HOST_DEFAULT_COMMUNICATION_STATE {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_COMMUNICATION_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determine the Communication State to active on system initialization..
        /// </summary>
        public static string SETUP_HOST_DEFAULT_COMMUNICATION_STATE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_COMMUNICATION_STATE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Control State.
        /// </summary>
        public static string SETUP_HOST_DEFAULT_CONTROL_STATE {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_CONTROL_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default control state..
        /// </summary>
        public static string SETUP_HOST_DEFAULT_CONTROL_STATE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_CONTROL_STATE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default On Line State.
        /// </summary>
        public static string SETUP_HOST_DEFAULT_ON_LINE_STATE {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_ON_LINE_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State that should be set when the upload attempt is successful..
        /// </summary>
        public static string SETUP_HOST_DEFAULT_ON_LINE_STATE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_ON_LINE_STATE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default States.
        /// </summary>
        public static string SETUP_HOST_DEFAULT_STATES {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEFAULT_STATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DeviceID of the equipment..
        /// </summary>
        public static string SETUP_HOST_DEVICE_ID_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_DEVICE_ID_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E30EquipmentSupplier.
        /// </summary>
        public static string SETUP_HOST_E30EQUIPMENTSUPPLIER {
            get {
                return ResourceManager.GetString("SETUP_HOST_E30EQUIPMENTSUPPLIER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment supplier.
        /// </summary>
        public static string SETUP_HOST_E30EQUIPMENTSUPPLIER_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_E30EQUIPMENTSUPPLIER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This parameter is used in the resolution of contention. The host is designated as the slave. The equipment is designated as the master..
        /// </summary>
        public static string SETUP_HOST_ENTITY_BEHAVIOUR_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_ENTITY_BEHAVIOUR_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EqpName.
        /// </summary>
        public static string SETUP_HOST_EQPNAME {
            get {
                return ResourceManager.GetString("SETUP_HOST_EQPNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment name.
        /// </summary>
        public static string SETUP_HOST_EQPNAME_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_EQPNAME_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EqpSerialNum.
        /// </summary>
        public static string SETUP_HOST_EQPSERIALNUM {
            get {
                return ResourceManager.GetString("SETUP_HOST_EQPSERIALNUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment serial number.
        /// </summary>
        public static string SETUP_HOST_EQPSERIALNUM_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_EQPSERIALNUM_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment Identification.
        /// </summary>
        public static string SETUP_HOST_EQUIPMENT_IDENTIFICATION {
            get {
                return ResourceManager.GetString("SETUP_HOST_EQUIPMENT_IDENTIFICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Establish Communications.
        /// </summary>
        public static string SETUP_HOST_ESTABLISH_COMMUNICATIONS {
            get {
                return ResourceManager.GetString("SETUP_HOST_ESTABLISH_COMMUNICATIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval between attempts to resend a SECS Establish Communications Request (S1,F13)..
        /// </summary>
        public static string SETUP_HOST_ESTABLISH_COMMUNICATIONS_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_ESTABLISH_COMMUNICATIONS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name.
        /// </summary>
        public static string SETUP_HOST_FILE_NAME {
            get {
                return ResourceManager.GetString("SETUP_HOST_FILE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root name of automation log files. File creation DateTime will be added as suffix..
        /// </summary>
        public static string SETUP_HOST_FILE_NAME_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_FILE_NAME_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LinkTest - Connection Integrity Check.
        /// </summary>
        public static string SETUP_HOST_LINKTEST {
            get {
                return ResourceManager.GetString("SETUP_HOST_LINKTEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of time between successive transmissions HSMS LINKTEST.REQ messages. This is an HSMSLevel heartbeat that can be used to detect communications hardware failure such as a disconnected network cable..
        /// </summary>
        public static string SETUP_HOST_LINKTEST_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_LINKTEST_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP adresse of the local computer..
        /// </summary>
        public static string SETUP_HOST_LOCAL_IP_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_LOCAL_IP_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local TCP port you want the remote entity to connect..
        /// </summary>
        public static string SETUP_HOST_LOCAL_TCP_PORT_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_LOCAL_TCP_PORT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Mode.
        /// </summary>
        public static string SETUP_HOST_LOG_MODE {
            get {
                return ResourceManager.GetString("SETUP_HOST_LOG_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value indicating how logs are handled..
        /// </summary>
        public static string SETUP_HOST_LOG_MODE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_LOG_MODE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum File Size.
        /// </summary>
        public static string SETUP_HOST_MAXIMUM_FILE_SIZE {
            get {
                return ResourceManager.GetString("SETUP_HOST_MAXIMUM_FILE_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum size of automation log files. Once reached another file is created..
        /// </summary>
        public static string SETUP_HOST_MAXIMUM_FILE_SIZE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_MAXIMUM_FILE_SIZE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MDLN.
        /// </summary>
        public static string SETUP_HOST_MDLN {
            get {
                return ResourceManager.GetString("SETUP_HOST_MDLN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment model..
        /// </summary>
        public static string SETUP_HOST_MDLN_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_MDLN_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode.
        /// </summary>
        public static string SETUP_HOST_MODE {
            get {
                return ResourceManager.GetString("SETUP_HOST_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Active mode is used when the connect procedure is initiated by the Local Entity..
        /// </summary>
        public static string SETUP_HOST_MODE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_MODE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On Line Fail Substate.
        /// </summary>
        public static string SETUP_HOST_ON_LINE_FAIL_SUBSTATE {
            get {
                return ResourceManager.GetString("SETUP_HOST_ON_LINE_FAIL_SUBSTATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State that should be activated when the attempt to go online fails..
        /// </summary>
        public static string SETUP_HOST_ON_LINE_FAIL_SUBSTATE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_ON_LINE_FAIL_SUBSTATE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP adresse of the host machine..
        /// </summary>
        public static string SETUP_HOST_REMOTE_IP_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_REMOTE_IP_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote TCP port for the equipment to connect to..
        /// </summary>
        public static string SETUP_HOST_REMOTE_TCP_PORT_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_REMOTE_TCP_PORT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry Limit.
        /// </summary>
        public static string SETUP_HOST_RETRY_LIMIT {
            get {
                return ResourceManager.GetString("SETUP_HOST_RETRY_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of times the Block Transfer Protocol will attempt to retry sending a block before declaring a failed send..
        /// </summary>
        public static string SETUP_HOST_RETRY_LIMIT_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_RETRY_LIMIT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to second.
        /// </summary>
        public static string SETUP_HOST_SECOND {
            get {
                return ResourceManager.GetString("SETUP_HOST_SECOND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SECS-II Logs.
        /// </summary>
        public static string SETUP_HOST_SECS2_LOGS {
            get {
                return ResourceManager.GetString("SETUP_HOST_SECS2_LOGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of the serial port which will be used..
        /// </summary>
        public static string SETUP_HOST_SERIAL_PORT_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_SERIAL_PORT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOFTREV.
        /// </summary>
        public static string SETUP_HOST_SOFTREV {
            get {
                return ResourceManager.GetString("SETUP_HOST_SOFTREV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment software revision..
        /// </summary>
        public static string SETUP_HOST_SOFTREV_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_SOFTREV_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T1 - Intercharacter.
        /// </summary>
        public static string SETUP_HOST_T1 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limits the time between receipt of characters within a block after the length byte has been received and until the receipt of the second checksum byte..
        /// </summary>
        public static string SETUP_HOST_T1_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T1_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T2 - Protocol.
        /// </summary>
        public static string SETUP_HOST_T2 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limits the time between sending ENQ (&quot;Request to Send&quot;) and receiving EOT (&quot;Ready to Receive&quot;), sending EOT and receiving the length byte, and sending the second checksum byte and receiving any character..
        /// </summary>
        public static string SETUP_HOST_T2_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T2_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T3 - Reply.
        /// </summary>
        public static string SETUP_HOST_T3 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum amount oftime between a primary message and the expected response before declaring the transaction closed. If the timer expires, an S9F9 error message is sent..
        /// </summary>
        public static string SETUP_HOST_T3_HSMS_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T3_HSMS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit on the length of time that the message protocol is willing to wait after the last block of a primary message has been sent and before the arrival of the first block of the reply..
        /// </summary>
        public static string SETUP_HOST_T3_SECS1_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T3_SECS1_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T4 - Interval.
        /// </summary>
        public static string SETUP_HOST_T4 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time interval between the successful receipt of a block in a multiblock message, and the successful receipt of the subsequent block of the same message, is limited to time T4..
        /// </summary>
        public static string SETUP_HOST_T4_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T4_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T5 - Connect Separation.
        /// </summary>
        public static string SETUP_HOST_T5 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of time which must elapse between successive attempts to actively establish a connection..
        /// </summary>
        public static string SETUP_HOST_T5_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T5_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T6 - Control Transaction.
        /// </summary>
        public static string SETUP_HOST_T6 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum amount of time allowed between an HSMS-level control message and response. If the timer expires, communications failure is declared..
        /// </summary>
        public static string SETUP_HOST_T6_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T6_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T7 - Connection Idle.
        /// </summary>
        public static string SETUP_HOST_T7 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum amount of time a TCP/IP connection can remain in the NOT SELECTED state (no HSMS activity) before a communications failure is declared..
        /// </summary>
        public static string SETUP_HOST_T7_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T7_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to T8 - Network Intercharacter.
        /// </summary>
        public static string SETUP_HOST_T8 {
            get {
                return ResourceManager.GetString("SETUP_HOST_T8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum amount of time allowed between successive bytes of a single HSMS message before a communications failure is declared..
        /// </summary>
        public static string SETUP_HOST_T8_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_T8_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Format.
        /// </summary>
        public static string SETUP_HOST_TIME_FORMAT {
            get {
                return ResourceManager.GetString("SETUP_HOST_TIME_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time of day format used by the variable item CLOCK and the data items STIME, TIMESTAMP and TIME..
        /// </summary>
        public static string SETUP_HOST_TIME_FORMAT_DESCRIPTION {
            get {
                return ResourceManager.GetString("SETUP_HOST_TIME_FORMAT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeouts.
        /// </summary>
        public static string SETUP_HOST_TIMEOUTS {
            get {
                return ResourceManager.GetString("SETUP_HOST_TIMEOUTS", resourceCulture);
            }
        }
    }
}
