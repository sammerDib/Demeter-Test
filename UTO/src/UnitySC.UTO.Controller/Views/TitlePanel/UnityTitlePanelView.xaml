<UserControl
    x:Class="UnitySC.UTO.Controller.Views.TitlePanel.UnityTitlePanelView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controller="clr-namespace:UnitySC.UTO.Controller"
    xmlns:controls="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.Controls;assembly=UnitySC.GUI.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:e30="clr-namespace:Agileo.Semi.Gem.Abstractions.E30;assembly=Agileo.Semi.Gem.Abstractions"
    xmlns:localize="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions.Localize;assembly=UnitySC.GUI.Common"
    xmlns:markupExtensions="clr-namespace:UnitySC.GUI.Common.Vendor.UIComponents.MarkupExtensions;assembly=UnitySC.GUI.Common"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:titlePanel="clr-namespace:UnitySC.UTO.Controller.Views.TitlePanel"
    xmlns:unityCommunicatingDevice="clr-namespace:UnitySC.Equipment.Abstractions.Devices.UnityCommunicatingDevice;assembly=UnitySC.Equipment.Abstractions"
    xmlns:vendorsTitlePanel="clr-namespace:UnitySC.GUI.Common.Vendor.Views.TitlePanel;assembly=UnitySC.GUI.Common"
    Height="75"
    d:DataContext="{d:DesignInstance titlePanel:UnityTitlePanel,
                                     IsDesignTimeCreatable=True}"
    d:DesignWidth="{StaticResource DesignWidth}"
    Foreground="{DynamicResource TitlePanelLabelForeground}"
    Style="{StaticResource AgilControllerUserControlStyle}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="TitlePanelBackground" Color="{DynamicResource HorizontalCanvasBackground}" />
            <SolidColorBrush x:Key="TitlePanelLabelForeground" Color="{DynamicResource HorizontalCanvasForeground}" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid IsSharedSizeScope="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="0.55*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="23" />
            <ColumnDefinition Width="180" />
        </Grid.ColumnDefinitions>

        <!--#region Background-->
        <Rectangle
            Grid.Column="0"
            Grid.ColumnSpan="5"
            Effect="{StaticResource E95ElementsShadow}"
            Fill="{DynamicResource TitlePanelBackground}"
            SnapsToDevicePixels="True" />
        <!--#endregion Background-->

        <!--#region GEM-->
        <ToggleButton
            Grid.Column="0"
            Height="Auto"
            VerticalAlignment="Stretch"
            Background="Transparent"
            IsChecked="{Binding Path=IsOpen, ElementName=Popup, Mode=TwoWay}"
            IsEnabled="{Binding Path=IsOpen, ElementName=Popup, Converter={StaticResource InvertedBoolConverter}}"
            Visibility="{Binding GemCommandsViewModel.GemPopupCanBeOpen, Converter={StaticResource FalseToCollapsedConverter}}" />
        <Popup
            x:Name="Popup"
            Grid.Column="0"
            Margin="0,0,0,0"
            AllowsTransparency="True"
            Placement="Bottom"
            PopupAnimation="Fade"
            StaysOpen="False">
            <Grid>
                <controls:Card
                    Margin="0,7,10,10"
                    CornerRadius="3"
                    DataContext="{Binding GemCommandsViewModel}">
                    <Grid>
                        <GroupBox Header="{localize:Static vendorsTitlePanel:TitlePanelResources.TITLE_PANEL_GEM_COMMANDS}">
                            <StackPanel>
                                <controls:PropertyEditor
                                    Margin="{DynamicResource HorizontalStackPropertyMargin}"
                                    IsEnabled="{Binding CommunicationApplicationCommand.IsEnabled}"
                                    PropertyName="Communication"
                                    Visibility="{Binding CommunicationApplicationCommand.IsVisible, Converter={StaticResource FalseToCollapsedConverter}}">
                                    <StackPanel Orientation="Horizontal">
                                        <controls:Chips
                                            Margin="0,0,10,0"
                                            Command="{Binding EnableCommand}"
                                            Content="Enable"
                                            IsActivated="{Binding IsEnabled}"
                                            IsInProgress="{Binding EnableInProgress}" />
                                        <controls:Chips
                                            Command="{Binding DisableCommand}"
                                            Content="Disable"
                                            IsActivated="{Binding IsDisabled}"
                                            IsInProgress="{Binding DisableInProgress}" />
                                    </StackPanel>
                                </controls:PropertyEditor>
                                <controls:PropertyEditor
                                    Margin="{DynamicResource HorizontalStackPropertyMargin}"
                                    IsEnabled="{Binding EquipmentApplicationCommand.IsEnabled}"
                                    PropertyName="Equipment"
                                    Visibility="{Binding EquipmentApplicationCommand.IsVisible, Converter={StaticResource FalseToCollapsedConverter}}">
                                    <StackPanel Orientation="Horizontal">
                                        <controls:Chips
                                            Margin="0,0,10,0"
                                            Command="{Binding OnLineCommand}"
                                            Content="On-line"
                                            IsActivated="{Binding IsOnLine}"
                                            IsInProgress="{Binding OnLineInProgress}" />
                                        <controls:Chips
                                            Command="{Binding OffLineCommand}"
                                            Content="Off-line"
                                            IsActivated="{Binding IsOffLine}"
                                            IsInProgress="{Binding OffLineInProgress}" />
                                    </StackPanel>
                                </controls:PropertyEditor>
                                <controls:PropertyEditor
                                    IsEnabled="{Binding ControlApplicationCommand.IsEnabled}"
                                    PropertyName="Control"
                                    Visibility="{Binding ControlApplicationCommand.IsVisible, Converter={StaticResource FalseToCollapsedConverter}}">
                                    <StackPanel Orientation="Horizontal">
                                        <controls:Chips
                                            Margin="0,0,10,0"
                                            Command="{Binding LocalCommand}"
                                            Content="Local"
                                            IsActivated="{Binding IsLocal}"
                                            IsInProgress="{Binding LocalInProgress}" />
                                        <controls:Chips
                                            Command="{Binding RemoteCommand}"
                                            Content="Remote"
                                            IsActivated="{Binding IsRemote}"
                                            IsInProgress="{Binding RemoteInProgress}" />
                                    </StackPanel>
                                </controls:PropertyEditor>
                            </StackPanel>
                        </GroupBox>
                        <Button
                            Margin="5"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            markupExtensions:Icon.Geometry="{StaticResource CloseIcon}"
                            Background="Transparent"
                            Command="{Binding ClosePopupCommand}"
                            CommandParameter="{Binding ElementName=Popup}"
                            Style="{StaticResource SquareIconifiedButtonStyle}" />
                    </Grid>
                </controls:Card>
            </Grid>
        </Popup>
        <Grid
            x:Name="GemArea"
            Grid.Column="0"
            Width="Auto"
            Margin="2,0,5,0"
            IsHitTestVisible="False"
            SnapsToDevicePixels="False"
            UseLayoutRounding="False"
            Visibility="{Binding IsGemComponentEnabled, FallbackValue=Visible}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Text="{localize:Static vendorsTitlePanel:TitlePanelResources.TITLE_PANEL_GEM_CONNECTION}" />
            <controls:Displayer
                Grid.Row="0"
                Grid.Column="1"
                MinWidth="140"
                MinHeight="0"
                Margin="5,2,0,1"
                HorizontalAlignment="Stretch"
                FontSize="{StaticResource FontSizeSmall}"
                Value="{Binding HsmsState, Converter={StaticResource ToHumanizedAndUpperCaseTextConverter}}">
                <controls:Displayer.Style>
                    <Style BasedOn="{StaticResource {x:Type controls:Displayer}}" TargetType="{x:Type controls:Displayer}">
                        <Setter Property="Color" Value="Green" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HsmsState}" Value="{x:Static e30:HSMSState.NotConnected}">
                                <Setter Property="Color" Value="Orange" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:Displayer.Style>
            </controls:Displayer>
            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Text="{localize:Static vendorsTitlePanel:TitlePanelResources.TITLE_PANEL_GEM_COMM}" />
            <controls:Displayer
                Grid.Row="1"
                Grid.Column="1"
                MinWidth="140"
                MinHeight="0"
                Margin="5,1,0,1"
                HorizontalAlignment="Stretch"
                FontSize="{StaticResource FontSizeSmall}"
                Value="{Binding CommunicationState, Converter={StaticResource ToHumanizedAndUpperCaseTextConverter}}">
                <controls:Displayer.Style>
                    <Style BasedOn="{StaticResource {x:Type controls:Displayer}}" TargetType="{x:Type controls:Displayer}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CommunicationState}" Value="{x:Static e30:CommunicationState.Communicating}">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CommunicationState}" Value="{x:Static e30:CommunicationState.NotCommunicating}">
                                <Setter Property="Color" Value="Orange" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:Displayer.Style>
            </controls:Displayer>
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Text="{localize:Static vendorsTitlePanel:TitlePanelResources.TITLE_PANEL_GEM_CONTROL}" />
            <controls:Displayer
                Grid.Row="2"
                Grid.Column="1"
                MinWidth="140"
                MinHeight="0"
                Margin="5,1,0,2"
                HorizontalAlignment="Stretch"
                FontSize="{StaticResource FontSizeSmall}"
                Value="{Binding ControlState, Converter={StaticResource ToHumanizedAndUpperCaseTextConverter}}">
                <controls:Displayer.Style>
                    <Style BasedOn="{StaticResource {x:Type controls:Displayer}}" TargetType="{x:Type controls:Displayer}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ControlState}" Value="{x:Static e30:ControlState.Remote}">
                                <Setter Property="Color" Value="Blue" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ControlState}" Value="{x:Static e30:ControlState.HostOffLine}">
                                <Setter Property="Color" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ControlState}" Value="{x:Static e30:ControlState.EquipmentOffLine}">
                                <Setter Property="Color" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ControlState}" Value="{x:Static e30:ControlState.OffLine}">
                                <Setter Property="Color" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ControlState}" Value="{x:Static e30:ControlState.AttemptOnLine}">
                                <Setter Property="Color" Value="Orange" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ControlState}" Value="{x:Static e30:ControlState.OnLine}">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:Displayer.Style>
            </controls:Displayer>
        </Grid>
        <!--#endregion GEM-->

        <!--#region Logo + ProductName-->
        <DockPanel Grid.Column="4" Margin="5,0,0,0">
            <StackPanel
                Margin="10,0"
                HorizontalAlignment="Center"
                DockPanel.Dock="Bottom"
                Orientation="Horizontal">
                <TextBlock
                    Margin="10,0,0,0"
                    HorizontalAlignment="Center"
                    Text="{Binding Path=ApplicationVersion.FileVersion, Source={x:Static controller:App.Instance}, Mode=OneWay, FallbackValue='v---', TargetNullValue='---', StringFormat='{}v{0}'}" />
            </StackPanel>
            <Control
                Height="55"
                MaxWidth="200"
                Margin="10,0"
                HorizontalAlignment="Center"
                Template="{StaticResource ImageCompanyLogoControlTemplate}" />
        </DockPanel>
        <!--#endregion Logo + ProductName-->

        <!--#region ActiveView + MessageArea-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                DockPanel.Dock="Left"
                FontSize="{StaticResource FontSizeBig}"
                Foreground="{StaticResource TitlePanelLabelForeground}"
                Text="{Binding SelectedBusinessPanelId, FallbackValue='Setup - AccessRights'}" />

            <controls:MessageArea
                x:Name="MessageArea"
                Grid.Row="1"
                Height="Auto"
                Padding="0"
                HorizontalAlignment="Stretch"
                DockPanel.Dock="Bottom"
                Message="{Binding Messages.DisplayedUserMessage}"
                TextBlock.TextAlignment="Center" />
        </Grid>

        <!--#endregion ActiveView + MessageArea-->

        <!--#region Current View + Title Message-->
        <DockPanel Grid.Column="2" Margin="0,0,5,0">


            <!--#region Operating Modes-->

            <Grid
                x:Name="OperatingModesArea"
                Width="Auto"
                Margin="2,0,5,0"
                IsHitTestVisible="False"
                SnapsToDevicePixels="False"
                UseLayoutRounding="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="{StaticResource FontSizeSmall}"
                    Text="{localize:Static titlePanel:UnityTitlePanelResources.TITLE_PANEL_CONTROLLER_STATE}" />
                <ContentPresenter
                    Grid.Row="0"
                    Grid.Column="3"
                    MinWidth="140"
                    MinHeight="0"
                    Margin="5,2,0,1"
                    HorizontalAlignment="Stretch"
                    Content="{Binding EquipmentManager.Controller.State}"
                    ContentTemplate="{StaticResource TitlePanelSubStatusDisplayerTemplate}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="{StaticResource FontSizeSmall}"
                    Text="{localize:Static titlePanel:UnityTitlePanelResources.TITLE_PANEL_DATAFLOW_STATE}" />
                <ContentPresenter
                    Grid.Row="2"
                    Grid.Column="3"
                    MinWidth="140"
                    Margin="5,1,0,2"
                    HorizontalAlignment="Stretch"
                    Content="{Binding DataFlowManager.State}"
                    ContentTemplate="{StaticResource TitlePanelSubStatusDisplayerTemplate}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="{StaticResource FontSizeSmall}"
                    Text="{localize:Static titlePanel:UnityTitlePanelResources.TITLE_PANEL_EFEM_STATE}" />
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="3"
                    MinWidth="140"
                    MinHeight="0"
                    Margin="5,1,0,1"
                    HorizontalAlignment="Stretch"
                    Content="{Binding EquipmentManager.Efem.State}"
                    ContentTemplate="{StaticResource TitlePanelSubStatusDisplayerTemplate}" />

                <ItemsControl
                    Grid.Row="0"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Left"
                    Grid.IsSharedSizeScope="True"
                    ItemsSource="{Binding EquipmentManager.ProcessModules.Values}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnSize" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnSize" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontSize="{StaticResource FontSizeSmall}"
                                    Text="{Binding Name}" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    MinWidth="140"
                                    Margin="5,1,2,2"
                                    HorizontalAlignment="Right"
                                    Content="{Binding ProcessModuleState}"
                                    ContentTemplate="{StaticResource TitlePanelProcessModuleSubStatusDisplayerTemplate}" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>

            <!--#endregion Operating Modes-->

            <Grid DockPanel.Dock="Right">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel
                    Grid.Row="0"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">

                    <!--#region Mute Buzzer-->
                    <Button
                        Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                        Height="Auto"
                        Margin="5,0"
                        markupExtensions:Icon.Geometry="{Binding BuzzerState, Converter={StaticResource BuzzerStateToIconConverter}, FallbackValue={StaticResource AudioOnIcon}}"
                        Command="{Binding MuteBuzzerCommand}"
                        DockPanel.Dock="Right"
                        Style="{StaticResource SquareIconifiedButtonStyle}" />
                    <!--#endregion Mute Buzzer-->

                    <Grid>
                        <!--#region DeviceStateViewerButton-->
                        <Button
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                            Height="Auto"
                            Margin="5,0,5,0"
                            markupExtensions:Icon.Geometry="{StaticResource LinkIcon}"
                            Command="{Binding HardwareConnectionViewModel.OpenDevicesStateViewerCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource SquareIconifiedButtonStyle}" TargetType="{x:Type Button}">
                                    <Setter Property="Foreground" Value="{DynamicResource SeveritySuccessBrush}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HardwareConnectionViewModel.AllDevicesAreConnected, TargetNullValue=false}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource SeverityErrorBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--#endregion DeviceStateViewerButton-->

                        <!--#region DeviceStateViewerPopup-->
                        <Popup
                            AllowsTransparency="True"
                            IsOpen="{Binding HardwareConnectionViewModel.IsCommunicatingDevicesPopupVisible, Mode=TwoWay}"
                            Placement="Bottom"
                            PopupAnimation="Fade"
                            StaysOpen="False">
                            <Grid>
                                <controls:Card
                                    MinWidth="250"
                                    Margin="5,10,10,10"
                                    DataContext="{Binding HardwareConnectionViewModel}"
                                    Elevation="Level1">
                                    <Grid>
                                        <GroupBox Header="{localize:Static vendorsTitlePanel:TitlePanelResources.TITLE_PANEL_HARDWARE_CONNECTION}">
                                            <ItemsControl IsEnabled="{Binding Path=DataContext.EquipmentManager.Controller.State, Converter={StaticResource DeviceStateToBooleanConverter}, RelativeSource={RelativeSource AncestorType=Popup}}" ItemsSource="{Binding CommunicatingDevices}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type unityCommunicatingDevice:UnityCommunicatingDevice}">
                                                        <controls:PropertyEditor>
                                                            <DockPanel LastChildFill="True">
                                                                <controls:Led
                                                                    Margin="0,0,7,0"
                                                                    Background="{DynamicResource InteractionSeverityError}"
                                                                    DockPanel.Dock="Left"
                                                                    IsActivated="{Binding IsCommunicating}" />
                                                                <Button
                                                                    Background="Transparent"
                                                                    Command="{Binding Path=DataContext.ToggleDeviceConnectCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Card}}}"
                                                                    CommandParameter="{Binding}"
                                                                    DockPanel.Dock="Right">
                                                                    <Button.Style>
                                                                        <Style BasedOn="{StaticResource SquareIconifiedButtonStyle}" TargetType="{x:Type Button}">
                                                                            <Setter Property="markupExtensions:Icon.Geometry" Value="{StaticResource DisconnectedIcon}" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsCommunicating}" Value="True">
                                                                                    <Setter Property="markupExtensions:Icon.Geometry" Value="{StaticResource ConnectedIcon}" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Button.Style>
                                                                </Button>
                                                                <TextBlock
                                                                    Margin="0,0,10,0"
                                                                    VerticalAlignment="Center"
                                                                    Text="{Binding Name}" />
                                                            </DockPanel>
                                                        </controls:PropertyEditor>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </GroupBox>
                                        <Button
                                            Margin="5,5,5,5"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            markupExtensions:Icon.Geometry="{StaticResource CloseIcon}"
                                            Background="Transparent"
                                            Command="{Binding CloseDevicesStateViewerCommand}"
                                            Style="{StaticResource SquareIconifiedButtonStyle}" />
                                    </Grid>
                                </controls:Card>
                            </Grid>
                        </Popup>
                        <!--#endregion DeviceStateViewerPopup-->
                    </Grid>

                    <!--#region LogonButton-->
                    <Button
                        Height="Auto"
                        HorizontalAlignment="Center"
                        markupExtensions:Icon.Geometry="{StaticResource UserIcon}"
                        Command="{Binding OpenLoginPanelCommand}"
                        Content="{Binding CurrentUserName, FallbackValue=Logon here}"
                        DockPanel.Dock="Right" />
                    <!--#endregion LogonButton-->

                    <!--#region DateTime-->
                    <StackPanel
                        Margin="5,5,0,0"
                        VerticalAlignment="Center"
                        Orientation="Vertical">
                        <TextBlock
                            Height="18"
                            HorizontalAlignment="Center"
                            FontSize="16"
                            Foreground="{DynamicResource TitlePanelLabelForeground}"
                            Text="{Binding CurrentTime, StringFormat=HH:mm}" />
                        <TextBlock
                            Height="20"
                            HorizontalAlignment="Center"
                            FontSize="13"
                            Foreground="{DynamicResource TitlePanelLabelForeground}"
                            Text="{Binding CurrentDate}" />
                    </StackPanel>
                    <!--#endregion DateTime-->
                </StackPanel>
            </Grid>

        </DockPanel>
        <!--#endregion Current View + Title Message-->

        <!--#region LightTower-->
        <Viewbox Grid.Column="3" Stretch="UniformToFill">
            <ContentPresenter Content="{Binding LightTowerViewModel}" Opacity="1" />
        </Viewbox>
        <!--#endregion LightTower-->

    </Grid>
</UserControl>
