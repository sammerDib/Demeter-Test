<Window x:Class="AdcBasicObjects.RectangleComparatorDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:AdcTools="clr-namespace:AdcTools;assembly=AdcTools"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:AdcBasicObjects"
        mc:Ignorable="d" 
        WindowStartupLocation="CenterScreen" ResizeMode="NoResize" SizeToContent="WidthAndHeight"
        >

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <AdcTools:InvertedBooleanConverter x:Key="InvertedBooleanConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="150"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0" Width="520" >
            <Grid.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="Margin" Value="5,5,5,5"/>
                    <Setter Property="Width" Value="223"/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="Width" Value="50"/>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="5,0,5,0"/>
                </Style>
                <Style TargetType="xctk:DoubleUpDown">
                    <Setter Property="AllowInputSpecialValues" Value="None"/>
                    <Setter Property="Width" Value="150"/>
                    <Setter Property="Height" Value="26"/>
                </Style>
            </Grid.Resources>

            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center">
                <Label Content="Max Y:"/>
                <CheckBox x:Name="checkBoxTop" IsChecked="{Binding Y.HasMax}" />
                <xctk:DoubleUpDown Value="{Binding Y.Max}"
                               Visibility="{Binding Y.HasMax, Converter={StaticResource BooleanToVisibilityConverter}}" 
                               AllowInputSpecialValues="None"/>
            </StackPanel>

            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left">
                <Label Content="Min X:"/>
                <CheckBox x:Name="checkBoxLeft" IsChecked="{Binding X.HasMin}" />
                <xctk:DoubleUpDown Value="{Binding X.Min}"
                               Visibility="{Binding X.HasMin, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>

            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center">
                <Label Content="Min Y:"/>
                <CheckBox x:Name="checkBoxBottom" IsChecked="{Binding Y.HasMin}" />
                <xctk:DoubleUpDown Value="{Binding Y.Min}"
                               Visibility="{Binding Y.HasMin, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>

            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right">
                <Label Content="Max X:"/>
                <CheckBox x:Name="checkBoxRight" IsChecked="{Binding X.HasMax}" />
                <xctk:DoubleUpDown Value="{Binding X.Max}" 
                               Visibility="{Binding X.HasMax, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
        </Grid>
        
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5,5,5,5"/>
                    <Setter Property="Width" Value="74"/>
                </Style>
            </StackPanel.Resources>
            <Button Content="OK" Click="ButtonOk_Click">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding X.IsValid}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Y.IsValid}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Delete" Click="ButtonDelete_Click"/>
            <Button Content="Cancel" Click="ButtonCancel_Click"/>
        </StackPanel>
    </Grid>
</Window>
