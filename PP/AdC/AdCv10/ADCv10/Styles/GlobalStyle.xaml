<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ADC.Styles">

    <!-- Dark-->
    <SolidColorBrush x:Key="WindowBackground" Color="#FF58585A"/>
    <SolidColorBrush x:Key="MainMenuBackground" Color="{Binding Color, Source={StaticResource WindowBackground}}"/>
    <SolidColorBrush x:Key="MainMenuMouseOverBackground" Color="#FF6E6E6E"/>   
    <SolidColorBrush x:Key="MenuForeground" Color="White"/>
    <SolidColorBrush x:Key="PanelBackground" Color="#FFF2F2F2"/>
    <SolidColorBrush x:Key="GlobalPanelTitleBackground" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="GlobalErrorColor" Color="#FFD61B1B"/>
    <SolidColorBrush x:Key="ErrorPanelBackground" Color="#FFEEC8C8"/>
    <SolidColorBrush x:Key="SplitterColor" Color="LightGray"/>
	<SolidColorBrush x:Key="ItemBackground" Color="LightGray"/>
	<SolidColorBrush x:Key="NbItemsForeground" Color="White"/>
    <SolidColorBrush x:Key="WaferBackground" Color="{Binding Color, Source={StaticResource WindowBackground}}"/>
    <SolidColorBrush x:Key="WaferBorder" Color="{Binding Color, Source={StaticResource WindowBackground}}"/>

    <Color x:Key="SelectedItem">#3299FF</Color>
	<Color x:Key="SelectedItemColor">#FFABABAB</Color>
	<!-- Classe color -->
	<Color x:Key="Class1DefectColor">#FF88B25E</Color>
	<Color x:Key="Class2DefectColor">#FF8FA3C6</Color>
	<Color x:Key="Class3DefectColor">#FFB2725E</Color>
	<Color x:Key="Class4DefectColor">#FF58B2A6</Color>
	<Color x:Key="Class5DefectColor">#FFC6B48F</Color>
	<Color x:Key="Class6DefectColor">#FF7D6CB2</Color>


	<!-- Node Color : 6 couleurs différentes -->
    <SolidColorBrush x:Key="NodeBackgroundColorIndexError" Color="Red"/>
    <SolidColorBrush x:Key="NodeBackgroundColorIndex0" Color="#FF88B25E"/>
    <SolidColorBrush x:Key="NodeBackgroundColorIndex1" Color="#FF8FA3C6"/>
    <SolidColorBrush x:Key="NodeBackgroundColorIndex2" Color="#FFB2725E"/>
    <SolidColorBrush x:Key="NodeBackgroundColorIndex3" Color="#58B2A6"/>
    <SolidColorBrush x:Key="NodeBackgroundColorIndex4" Color="#C6B48F"/>
    <SolidColorBrush x:Key="NodeBackgroundColorIndex5" Color="#7D6CB2"/>


    <SolidColorBrush x:Key="ExpertViewBackground" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="SimplifyViewBackground" Color="BlanchedAlmond"/>
    <SolidColorBrush x:Key="RunViewBackground" Color="PowderBlue"/>
    <SolidColorBrush x:Key="OperatorViewBackground" Color="Gainsboro" />
    <SolidColorBrush x:Key="WarningColor" Color="#FFF1C40F"/>


    <Style x:Key="UnityGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource MainMenuBackground}" />
        <Setter Property="Margin" Value="0" />
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="10,5,10,5" />
                <Setter Property="Control.FontWeight" Value="Bold" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" TargetType="ComboBox">
                <Setter Property="Background" Value="{StaticResource MainMenuBackground}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="10,5,10,5" />
            </Style>
            <Style BasedOn="{StaticResource {x:Static ToolBar.MenuStyleKey}}" TargetType="Menu">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="10,5,10,5" />
            </Style>         
        </Style.Resources>
    </Style>

    <Style x:Key="UnityMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,0,15,0" />
        <Setter Property="Padding" Value="0,2,0,3" />
        <Style.Resources>
            <Style TargetType="Viewbox">
                <Setter Property="Height" Value="20" />
                <Setter Property="Stretch" Value="Uniform" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>        
    </Style>

    <Style TargetType="ContextMenu">
        <Style.Resources>
            <Style TargetType="Viewbox">
                <Setter Property="Height" Value="20" />
                <Setter Property="Stretch" Value="Uniform" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="ToolBarTray">
        <Setter Property="Background" Value="{StaticResource MainMenuBackground}" />
        <Style.Resources>
            <Style TargetType="ToolBar">
                <Setter Property="Background" Value="{StaticResource MainMenuBackground}" />
                <Setter Property="ToolBarTray.IsLocked" Value="True" />
                <Setter Property="OverflowMode" Value="Never" />
            </Style>          
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonToolBar">
        <Setter Property="Background" Value="{StaticResource MainMenuBackground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MainMenuMouseOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Image">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Viewbox">
                <Setter Property="Height" Value="18" />
                <Setter Property="Stretch" Value="Uniform" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>


    <Style TargetType="{x:Type Window}" x:Key="MainWindow">
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="WindowState" Value="Maximized"/>
    </Style>


    <Style TargetType="{x:Type TextBlock}" x:Key="WarningTitle">
        <Setter Property="Foreground" Value="{StaticResource WarningColor}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="ModulePanelTitle">
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="4"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="PanelFieldName">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>    
    <Style TargetType="TextBlock" x:Key="PanelFieldValue">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="12"/>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="HideIfEmpty">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="ModuleHelp" BasedOn="{StaticResource HideIfEmpty}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style TargetType="ListView" x:Key="ListViewParameters">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource SelectedItemColor}"/>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type DataGrid}" x:Key="EditDataGrid">
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource PanelBackground}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource PanelBackground}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource GlobalPanelTitleBackground}"/>
        <Style.Resources>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{StaticResource PanelBackground}" />
                <Setter Property="Foreground" Value="{StaticResource PanelBackground}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="2"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BorderError">
        <Setter Property="Background" Value="{StaticResource ErrorPanelBackground}"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource GlobalErrorColor}"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource GlobalErrorColor}" />
                <Setter Property="Margin" Value="4"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type ListView}" x:Key="SearchListView">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource GlobalPanelTitleBackground}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BorderPanel">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource GlobalPanelTitleBackground}"/>
    </Style>
    
    <Style x:Key="ToggleButtonMenuStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" BorderBrush="#FF919193" BorderThickness="0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#0C000000" Offset="0"/>
                                <GradientStop Color="#19FFFFFF" Offset="1"/>
                                <GradientStop Color="#19000000" Offset="0.002"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#33FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                        <GradientStop Color="#4C000000" Offset="1"/>
                                        <GradientStop Color="#BF000000"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
                <Setter Property="Margin" Value="2"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Viewbox">
                <Setter Property="Height" Value="18" />
                <Setter Property="Stretch" Value="Uniform" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="ToggleButtonFavorite" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="MainGrid">
                        <Viewbox x:Name="IsFavorite" Stretch="Uniform" Height="22">
                            <ContentControl ContentTemplate="{DynamicResource IsFavoriteADCImage}"/>
                        </Viewbox>
                        <Viewbox x:Name="IsNotFavorite" Stretch="Uniform" Height="22">
                            <ContentControl ContentTemplate="{DynamicResource IsNotFavoriteADCImage}"/>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IsFavorite" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="IsNotFavorite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="IsFavorite" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IsNotFavorite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainGrid" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
                <Setter Property="Margin" Value="2"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Viewbox">
                <Setter Property="Height" Value="18" />
                <Setter Property="Stretch" Value="Uniform" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="ToggleAnimatedSwitch" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <StackPanel Orientation="Horizontal" Background="#02FFFFFF">
                        <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                            <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                            <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                            <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                            <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                                <Ellipse.BitmapEffect>
                                    <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                                </Ellipse.BitmapEffect>
                            </Ellipse>
                        </Canvas>
                        <ContentPresenter x:Name="contentPresenter"  Margin="22,0,0,0"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                                            Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#6398CC" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#6398CC" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style TargetType="{x:Type ListView}" x:Key="ListViewInfos">
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource SelectedItem}" />
			<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{StaticResource SelectedItem}"/>
		</Style.Resources>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="BorderBrush" Value="{StaticResource PanelBorderBackground}"/>
	</Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="PanelTitle">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="2,0"/>
    </Style>


</ResourceDictionary>