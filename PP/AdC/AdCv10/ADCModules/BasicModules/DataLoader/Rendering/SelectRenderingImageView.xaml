<Window x:Class="BasicModules.DataLoader.SelectRenderingImageView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"        
        mc:Ignorable="d"        
        Title="Select Images for Rendering" WindowStartupLocation="CenterOwner">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="4" VerticalAlignment="Stretch" Background="{DynamicResource PanelBackground}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Image selection -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <!-- Header -->
            <Grid Background="{StaticResource PanelBorderBackground}" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal" Margin="0,2" HorizontalAlignment="Left">
                    <Viewbox Stretch="Uniform" Width="22" Margin="4,0" VerticalAlignment="Center">
                        <ContentControl ContentTemplate="{StaticResource WaferADCImage}"/>
                    </Viewbox>
                    <TextBlock Text="Rendering images selection for wafer" Style="{StaticResource PanelTitle}" VerticalAlignment="Center"/>
                    <!-- Rectangular -->
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsRectangularWafer, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                        <TextBlock Text="{Binding WaferWidth, FallbackValue=0}" Style="{StaticResource PanelTitle}" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        <TextBlock Text="x" VerticalAlignment="Center" Style="{StaticResource PanelTitle}"/>
                        <TextBlock Text="{Binding WaferHeight,FallbackValue=0}" Style="{StaticResource PanelTitle}" VerticalAlignment="Center" Margin="0"/>
                        <TextBlock Text="mm" VerticalAlignment="Center" Style="{StaticResource PanelTitle}"/>
                    </StackPanel>

                    <!-- Circular -->
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsRectangularWafer, Converter={StaticResource InvertedBooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                        <TextBlock Text="{Binding WaferHeight, FallbackValue=0}" Style="{StaticResource PanelTitle}" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        <TextBlock Text="mm" VerticalAlignment="Center" Style="{StaticResource PanelTitle}"/>
                    </StackPanel>

                    <!-- Angle -->
                    <TextBlock Text="- angle: " VerticalAlignment="Center" Style="{StaticResource PanelTitle}"/>
                    <TextBlock Text="{Binding AlignerAngle, FallbackValue=0}" Style="{StaticResource PanelTitle}" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    <TextBlock Text="°" VerticalAlignment="Center" Style="{StaticResource PanelTitle}"/>
                </StackPanel>

                <ToggleButton IsChecked="{Binding IncludeAll}" Content="Include All" Margin="0,4,8,4" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource ToggleAnimatedSwitch}"/>
            </Grid>


            <!-- Wafer View -->
            <Border Style="{StaticResource BorderPanel}" Grid.Row="1" Visibility="{Binding IsFullImage, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" MinWidth="400">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <!-- Content-->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="83*"/>
                            <ColumnDefinition Width="16*"/>
                        </Grid.ColumnDefinitions>
                        <xctk:Zoombox x:Name="ZoomBox" Grid.Column="0" Grid.ColumnSpan="2" RelativeZoomModifiers="Ctrl" >
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{Binding AllImageWidth, FallbackValue=100}" Height="{Binding AllImageHeight,FallbackValue=100}" Margin="10">
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{Binding AllImageWidth, FallbackValue=100}" Height="{Binding AllImageHeight,FallbackValue=100}" SizeChanged="myCanvas_SizeChanged" RenderTransformOrigin="0.5,0.5">
                                    <Canvas.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="{Binding OppositeAlignerAngle,FallbackValue=0}"/>
                                        </TransformGroup>
                                    </Canvas.RenderTransform>
                                    <Ellipse 
                                        Width="{Binding WaferWidth, FallbackValue=100}" 
                                        Height="{Binding WaferHeight,FallbackValue=100}"
                                        Fill="{StaticResource WaferBackground}" 
                                        Visibility="{Binding IsRectangularWafer,Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                        Canvas.Top ="{Binding WaferPositionY}"
                                        Canvas.Left ="{Binding WaferPositionX}"/>
                                    <Rectangle 
                                        Width="{Binding WaferWidth}"
                                        Height="{Binding WaferHeight}" 
                                        Fill="{StaticResource WaferBackground}" 
                                        Visibility="{Binding IsRectangularWafer,Converter={StaticResource BooleanToVisibilityConverter},FallbackValue=Collapsed}"/>
                                    <ListView ItemsSource="{Binding InputDataList}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{Binding AllImageWidth}" Height="{Binding AllImageHeight}" BorderThickness="0" Padding="0" SelectionMode="Single" SelectedItem="{Binding SelectedInputData, Mode=TwoWay}"  >
                                        <ListView.Resources>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                            </Style>
                                        </ListView.Resources>
                                        <ListView.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding EnableImageCommand}" Header="Enable image for rendering">
                                                </MenuItem>
                                                <MenuItem Command="{Binding DisableImageCommand}" Header="Disable image for rendering">
                                                </MenuItem>
                                            </ContextMenu>
                                        </ListView.ContextMenu>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                                </Canvas>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.Template>
                                            <ControlTemplate>
                                                <ItemsPresenter />
                                            </ControlTemplate>
                                        </ListView.Template>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                                                <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                                <!--<Setter Property="IsSelected" Value="{Binding IsSelected}" />-->
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Border x:Name="Selectedborder" BorderThickness="0" BorderBrush="Black">
                                                    <Rectangle x:Name="Rect"
                                                        Width="{Binding Width}"
                                                        Height="{Binding Height}"
                                                        Opacity="0.6"
                                                        StrokeThickness="0.1"
                                                        ToolTip="{Binding ToolTip}"
                                                        Stroke="Black" 
                                                        Fill="{StaticResource NodeBackgroundColorIndex4}">
                                                    </Rectangle>
                                                </Border>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                        <Setter TargetName="Rect" Property="Fill" Value="{StaticResource NodeBackgroundColorIndex0}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                        <Setter TargetName="Selectedborder" Property="BorderThickness" Value="0.5"/>
                                                        <Setter TargetName="Selectedborder" Property="Margin" Value="-0.5"/>
                                                        <Setter TargetName="Rect" Property="Fill" Value="{StaticResource NodeBackgroundColorIndex1}"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Canvas>
                            </Grid>
                        </xctk:Zoombox>
                    </Grid>

                    <!-- Footer -->
                    <Grid  Grid.Row="2" Style="{DynamicResource UnityGridStyle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Menu>
                            <!-- The 'fit content' button.  Causes the content to be scaled so that all the graph nodes fit in the viewport.-->
                            <MenuItem
                        Click="FitContent"
                        Header="Fit"
                        Style="{DynamicResource UnityMenuItemStyle}"
                        ToolTip="Fit the entire content area to the viewport" />

                            <!--
                        The fill button.  Causes the content to be scaled so that it fits in the viewport.
                    -->
                            <MenuItem
                        Click="Fill"
                        Header="Fill"
                        Style="{DynamicResource UnityMenuItemStyle}"
                        ToolTip="Fill the entire content area to the viewport" />

                            <!--  Button to zoom out.  -->
                            <MenuItem
                        Click="ZoomOut"
                        Header="-"
                        Style="{DynamicResource UnityMenuItemStyle}"
                        Margin="0,0,-3,0"
                        ToolTip="Zoom out from the content" />
                        </Menu>

                        <!--  Slider to change the current zoom level.  -->
                        <Slider Grid.Column="1" Margin="0,5" LargeChange="0.4" Maximum="20" Minimum="0.01" SmallChange="0.2" TickFrequency="0.4" TickPlacement="TopLeft"
						    ToolTip="Change the zoom level of the content" Value="{Binding ElementName=ZoomBox, Path=Scale}" />

                        <Menu Grid.Column="2">
                            <MenuItem
                        Click="ZoomIn"
                        Header="+"
                        Style="{DynamicResource UnityMenuItemStyle}"
                        ToolTip="Zoom in on the content" />
                        </Menu>
                    </Grid>

                </Grid>
            </Border>

            <ListView ItemsSource="{Binding InputDataList}"
                     SelectionChanged="ListView_SelectionChanged"
                     SelectionMode="Single" SelectedItem="{Binding SelectedInputData, Mode=TwoWay}"
                     Grid.Column="1"
                     Grid.Row="1"
                     Margin="0">
                <ListView.Resources>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="File" Width="300">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding IsEnabled}" Margin="3"/>
                                        <Viewbox Height="15">
                                            <ContentControl ContentTemplate="{DynamicResource FileYellowADCImage}" />
                                        </Viewbox>
                                        <TextBlock Text="{Binding Filename, Converter={StaticResource PathToFileNameConverter}}" VerticalAlignment="Center" Margin="3" ToolTip="{Binding ToolTip}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="120" Header="Position">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ToolTip}" VerticalAlignment="Top"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <!-- Right part -->
        <Grid Grid.Column="1" Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Preview -->
            <StackPanel>
                <TextBlock Text="Preview:" Style="{DynamicResource PanelFieldName}" VerticalAlignment="Bottom"  HorizontalAlignment="Center"/>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,2">
                    <Border CornerRadius="2" BorderBrush="LightGray" BorderThickness="2">
                        <Grid>
                        <Image Source="{Binding Path=PreviewImage}" Width="250" Height="250" Stretch="Uniform" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="2" OpacityMask="#7F7AAEF9" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center">
                        </Image>
                        <xctk:BusyIndicator IsBusy="{Binding LoadImageIsBusy}" d:IsHidden="true" Width="250" Height="250">
                            <xctk:BusyIndicator.BusyContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Loading preview.. "/>
                                </DataTemplate>
                            </xctk:BusyIndicator.BusyContentTemplate>
                        </xctk:BusyIndicator>
                        </Grid>
                    </Border>
                    <TextBlock Margin="0,2">
                        <Hyperlink Command="{Binding OpenImageCommand}" ToolTip="{Binding SelectedPath}">
                            <TextBlock Text="{Binding SelectedPath, Converter={StaticResource PathToFileNameConverter}}" MaxWidth="250" FontSize="10"/>
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
            <!-- OK -->
            <Button Grid.Row ="1" Content="OK" IsCancel="True" Margin="4" Padding="4" Width="60" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
        </Grid>


        <xctk:BusyIndicator IsBusy="{Binding IsBusy}" d:IsHidden="true" DisplayAfter="0" Grid.ColumnSpan="3" Grid.RowSpan="3">
            <xctk:BusyIndicator.BusyContentTemplate>
                <DataTemplate>
                    <TextBlock Text="Init image selection ... "/>
                </DataTemplate>
            </xctk:BusyIndicator.BusyContentTemplate>
        </xctk:BusyIndicator>
    </Grid>
</Window>
