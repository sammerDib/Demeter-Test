<UserControl x:Class="DeepLearningSoft48.Views.Components.ZoomAndPanComponent.ZoomAndPanView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeepLearningSoft48.Views.Components.ZoomAndPanComponent" 
             xmlns:sharedControls="clr-namespace:UnitySC.Shared.UI.Controls;assembly=UnitySC.Shared.UI"  
			 xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
             xmlns:GraphUI="clr-namespace:GraphUI;assembly=GraphUI"
             mc:Ignorable="d" 
             x:Name="zoomAndPanView"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <RoutedUICommand x:Key="Commands.ZoomOut" />
            <RoutedUICommand x:Key="Commands.ZoomIn" />
            <RoutedUICommand x:Key="Commands.JumpBackToPrevZoom" />
            <RoutedUICommand x:Key="Commands.FitContent" />
            <RoutedUICommand x:Key="Commands.Fill" />
            <RoutedUICommand x:Key="Commands.OneHundredPercent" />

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
          <!--Bind input to commands.-->  
        <KeyBinding Key="Minus" Command="{StaticResource Commands.ZoomOut}" />
        <KeyBinding Key="Plus" Command="{StaticResource Commands.ZoomIn}" />
        <KeyBinding Key="Backspace" Command="{StaticResource Commands.JumpBackToPrevZoom}" />
        <KeyBinding Key="Space" Command="{StaticResource Commands.FitContent}" />
    </UserControl.InputBindings>


    <UserControl.CommandBindings>
          <!--Bind commands to event handlers.-->  
        <CommandBinding Command="{StaticResource Commands.ZoomOut}" Executed="ZoomOut_Executed" />
        <CommandBinding Command="{StaticResource Commands.ZoomIn}" Executed="ZoomIn_Executed" />
        <CommandBinding
            CanExecute="JumpBackToPrevZoom_CanExecuted"
            Command="{StaticResource Commands.JumpBackToPrevZoom}"
            Executed="JumpBackToPrevZoom_Executed" />
        <CommandBinding Command="{StaticResource Commands.FitContent}" Executed="FitContent_Executed" />
        <CommandBinding Command="{StaticResource Commands.Fill}" Executed="Fill_Executed" />
        <CommandBinding Command="{StaticResource Commands.OneHundredPercent}" Executed="OneHundredPercent_Executed" />
    </UserControl.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <ScrollViewer 
            Grid.Row="0"
            CanContentScroll="True"
            Background="White"
            Focusable="False"
            HorizontalScrollBarVisibility="Visible"
            VerticalScrollBarVisibility="Visible"
            x:Name="scrollViewer">
            
            <!--The ZoomAndPanControl displays the GraphView as its content.
                We can use the mouse to zoom and pan about the GraphView.-->
             
            <ZoomAndPan:ZoomAndPanControl
                x:Name="zoomAndPanControl"
                Focusable="False"
                ContentViewportHeight="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                ContentViewportWidth="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                IsMouseWheelScrollingEnabled="True">
                
                <!--We need to nest our GraphView in an AdornerDecorator so that adorners work correct when
                we zoom in and out using the ZoomAndPanControl-->
                <AdornerDecorator>
                    
                    <!--This grid specifies the size of the ZoomAndPanControl's content.
                    It wraps up the image, the GraphView and tha canvas is needed.-->
                    <Grid x:Name="parentGrid" PreviewMouseMove="contentPresenter_PreviewMouseMove">
                        <ContentPresenter Content="{Binding AdditionalContent, ElementName=zoomAndPanView}" x:Name="contentPresenter"/>

                        <GraphUI:GraphView x:Name="graphControl"
                                           MouseDown="graphControl_MouseDown"
                                           MouseMove="graphControl_MouseMove"
                                           MouseUp="graphControl_MouseUp"
                                           MouseWheel="graphControl_MouseWheel"
                                           Width="{Binding DisplayedWaferImageSource.Width}" 
                                           Height="{Binding DisplayedWaferImageSource.Height}"
                                           Background="Transparent"
                                           Visibility="{Binding IsGraphViewVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                    </Grid>
                </AdornerDecorator>
            </ZoomAndPan:ZoomAndPanControl>
        </ScrollViewer>

        <!--  Grid placed below the zoom and pan control that contains the zoom slider, zoom label and some buttons.  -->
        <Grid Grid.Row="1" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="2 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- The 'fit content' button.  
                Causes the content to be scaled so that all the graph nodes fit in the viewport. -->
                <Button
                    Grid.Column="0"
                    Padding="3"
                    Command="{DynamicResource Commands.FitContent}"
                    Content="Fit"
                    ToolTip="Fit image to the viewport" />

                <!-- The fill button.
                Causes the content to be scaled so that it fits in the viewport. -->
                <Button
                    Grid.Column="1"
                    Padding="3"
                    Command="{StaticResource Commands.Fill}"
                    Content="Fill"
                    ToolTip="Fit the entire content area to the viewport" />

                <!-- The 100% button. Causes the content to be scaled to 100 percent. -->
                <Button
                    Grid.Column="2"
                    Padding="3"
                    Command="{StaticResource Commands.OneHundredPercent}"
                    Content="100%"
                    ToolTip="Scale the content to 100%" />
            </Grid>

            <Grid Grid.Column="1" Margin="2 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <!--  Button to zoom out.  -->
                <sharedControls:ImageRepeatButton Grid.Column="0" ImageGeometry="{StaticResource MinusGeometry}" Command="{StaticResource Commands.ZoomOut}" ToolTip="Zoom out from the content" />

                <!--  Slider to change the current zoom level.  -->
                <Slider Grid.Column="1"
                    Margin="5,5,5,5"
                    LargeChange="20"
                    Maximum="200"
                    Minimum="10"
                    SmallChange="10"
                    TickFrequency="10"
                    TickPlacement="TopLeft"
                    ToolTip="Change the zoom level of the content"
                    Value="{Binding ElementName=zoomAndPanControl, Path=ContentScale, Converter={StaticResource ScaleToPercentConverter}}" />

                <sharedControls:ImageRepeatButton Grid.Column="2" ImageGeometry="{StaticResource PlusGeometry}" Command="{StaticResource Commands.ZoomIn}" ToolTip="Zoom in on the content" />

                <!--  Stick a resize grip in the bottom right corner of the window.  -->
                <!--<ResizeGrip DockPanel.Dock="Right" />-->

            </Grid>
        </Grid>
    </Grid>
</UserControl>
